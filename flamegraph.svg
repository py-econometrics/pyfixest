<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1462" onload="init(evt)" viewBox="0 0 1200 1462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1462" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1445.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1445.00"> </text><svg id="frames" x="10" width="1180" total_samples="7561096643"><g><title>inferno::flamegraph::from_lines (869,648 samples, 0.01%)</title><rect x="0.0000%" y="1365" width="0.0115%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="869648"/><text x="0.2500%" y="1375.50"></text></g><g><title>[[heap]] (1,138,939 samples, 0.02%)</title><rect x="0.0000%" y="1381" width="0.0151%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1138939"/><text x="0.2500%" y="1391.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1365" width="0.0162%" height="15" fill="rgb(221,193,54)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1375.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1349" width="0.0162%" height="15" fill="rgb(248,212,6)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1333" width="0.0162%" height="15" fill="rgb(208,68,35)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1317" width="0.0162%" height="15" fill="rgb(232,128,0)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1301" width="0.0162%" height="15" fill="rgb(207,160,47)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1285" width="0.0162%" height="15" fill="rgb(228,23,34)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1295.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1269" width="0.0162%" height="15" fill="rgb(218,30,26)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1279.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1253" width="0.0162%" height="15" fill="rgb(220,122,19)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1263.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1237" width="0.0162%" height="15" fill="rgb(250,228,42)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1221" width="0.0162%" height="15" fill="rgb(240,193,28)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1231.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1205" width="0.0162%" height="15" fill="rgb(216,20,37)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1215.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1189" width="0.0162%" height="15" fill="rgb(206,188,39)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1199.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1173" width="0.0162%" height="15" fill="rgb(217,207,13)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1183.50"></text></g><g><title>std::time::SystemTime::now (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1157" width="0.0162%" height="15" fill="rgb(231,73,38)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1141" width="0.0162%" height="15" fill="rgb(225,20,46)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1151.50"></text></g><g><title>clock_gettime (1,228,262 samples, 0.02%)</title><rect x="0.0151%" y="1125" width="0.0162%" height="15" fill="rgb(210,31,41)" fg:x="1138939" fg:w="1228262"/><text x="0.2651%" y="1135.50"></text></g><g><title>[[stack]] (1,962,692 samples, 0.03%)</title><rect x="0.0151%" y="1381" width="0.0260%" height="15" fill="rgb(221,200,47)" fg:x="1138939" fg:w="1962692"/><text x="0.2651%" y="1391.50"></text></g><g><title>[anon] (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1381" width="0.0120%" height="15" fill="rgb(226,26,5)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1365" width="0.0120%" height="15" fill="rgb(249,33,26)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1349" width="0.0120%" height="15" fill="rgb(235,183,28)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1359.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1333" width="0.0120%" height="15" fill="rgb(221,5,38)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1317" width="0.0120%" height="15" fill="rgb(247,18,42)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1301" width="0.0120%" height="15" fill="rgb(241,131,45)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1285" width="0.0120%" height="15" fill="rgb(249,31,29)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1269" width="0.0120%" height="15" fill="rgb(225,111,53)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1253" width="0.0120%" height="15" fill="rgb(238,160,17)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1263.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1237" width="0.0120%" height="15" fill="rgb(214,148,48)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1247.50"></text></g><g><title>profile::demean_impl::_{{closure}} (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1221" width="0.0120%" height="15" fill="rgb(232,36,49)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1205" width="0.0120%" height="15" fill="rgb(209,103,24)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1189" width="0.0120%" height="15" fill="rgb(229,88,8)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1173" width="0.0120%" height="15" fill="rgb(213,181,19)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1157" width="0.0120%" height="15" fill="rgb(254,191,54)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1141" width="0.0120%" height="15" fill="rgb(241,83,37)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1125" width="0.0120%" height="15" fill="rgb(233,36,39)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1109" width="0.0120%" height="15" fill="rgb(226,3,54)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1093" width="0.0120%" height="15" fill="rgb(245,192,40)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1077" width="0.0120%" height="15" fill="rgb(238,167,29)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1061" width="0.0120%" height="15" fill="rgb(232,182,51)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1045" width="0.0120%" height="15" fill="rgb(231,60,39)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1029" width="0.0120%" height="15" fill="rgb(208,69,12)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1039.50"></text></g><g><title>__rustc::__rdl_alloc (911,065 samples, 0.01%)</title><rect x="0.0410%" y="1013" width="0.0120%" height="15" fill="rgb(235,93,37)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1023.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (911,065 samples, 0.01%)</title><rect x="0.0410%" y="997" width="0.0120%" height="15" fill="rgb(213,116,39)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="1007.50"></text></g><g><title>malloc (911,065 samples, 0.01%)</title><rect x="0.0410%" y="981" width="0.0120%" height="15" fill="rgb(222,207,29)" fg:x="3101631" fg:w="911065"/><text x="0.2910%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (6,647,809 samples, 0.09%)</title><rect x="2.0277%" y="565" width="0.0879%" height="15" fill="rgb(206,96,30)" fg:x="153316818" fg:w="6647809"/><text x="2.2777%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (6,647,809 samples, 0.09%)</title><rect x="2.0277%" y="549" width="0.0879%" height="15" fill="rgb(218,138,4)" fg:x="153316818" fg:w="6647809"/><text x="2.2777%" y="559.50"></text></g><g><title>core::ptr::write (6,647,809 samples, 0.09%)</title><rect x="2.0277%" y="533" width="0.0879%" height="15" fill="rgb(250,191,14)" fg:x="153316818" fg:w="6647809"/><text x="2.2777%" y="543.50"></text></g><g><title>[unknown] (2,766,973 samples, 0.04%)</title><rect x="2.0790%" y="517" width="0.0366%" height="15" fill="rgb(239,60,40)" fg:x="157197654" fg:w="2766973"/><text x="2.3290%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,184,705 samples, 0.13%)</title><rect x="2.0277%" y="581" width="0.1347%" height="15" fill="rgb(206,27,48)" fg:x="153316818" fg:w="10184705"/><text x="2.2777%" y="591.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (3,536,896 samples, 0.05%)</title><rect x="2.1156%" y="565" width="0.0468%" height="15" fill="rgb(225,35,8)" fg:x="159964627" fg:w="3536896"/><text x="2.3656%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,755,851 samples, 0.17%)</title><rect x="2.0212%" y="597" width="0.1687%" height="15" fill="rgb(250,213,24)" fg:x="152824834" fg:w="12755851"/><text x="2.2712%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2,079,162 samples, 0.03%)</title><rect x="2.1624%" y="581" width="0.0275%" height="15" fill="rgb(247,123,22)" fg:x="163501523" fg:w="2079162"/><text x="2.4124%" y="591.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (6,908,746 samples, 0.09%)</title><rect x="2.1899%" y="533" width="0.0914%" height="15" fill="rgb(231,138,38)" fg:x="165580685" fg:w="6908746"/><text x="2.4399%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (196,012,782 samples, 2.59%)</title><rect x="2.1899%" y="565" width="2.5924%" height="15" fill="rgb(231,145,46)" fg:x="165580685" fg:w="196012782"/><text x="2.4399%" y="575.50">co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (196,012,782 samples, 2.59%)</title><rect x="2.1899%" y="549" width="2.5924%" height="15" fill="rgb(251,118,11)" fg:x="165580685" fg:w="196012782"/><text x="2.4399%" y="559.50">al..</text></g><g><title>core::ptr::write (189,104,036 samples, 2.50%)</title><rect x="2.2813%" y="533" width="2.5010%" height="15" fill="rgb(217,147,25)" fg:x="172489431" fg:w="189104036"/><text x="2.5313%" y="543.50">co..</text></g><g><title>[unknown] (6,400,119 samples, 0.08%)</title><rect x="4.6976%" y="517" width="0.0846%" height="15" fill="rgb(247,81,37)" fg:x="355193348" fg:w="6400119"/><text x="4.9476%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (222,342,273 samples, 2.94%)</title><rect x="2.0212%" y="725" width="2.9406%" height="15" fill="rgb(209,12,38)" fg:x="152824834" fg:w="222342273"/><text x="2.2712%" y="735.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (222,342,273 samples, 2.94%)</title><rect x="2.0212%" y="709" width="2.9406%" height="15" fill="rgb(227,1,9)" fg:x="152824834" fg:w="222342273"/><text x="2.2712%" y="719.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (222,342,273 samples, 2.94%)</title><rect x="2.0212%" y="693" width="2.9406%" height="15" fill="rgb(248,47,43)" fg:x="152824834" fg:w="222342273"/><text x="2.2712%" y="703.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (222,342,273 samples, 2.94%)</title><rect x="2.0212%" y="677" width="2.9406%" height="15" fill="rgb(221,10,30)" fg:x="152824834" fg:w="222342273"/><text x="2.2712%" y="687.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (222,342,273 samples, 2.94%)</title><rect x="2.0212%" y="661" width="2.9406%" height="15" fill="rgb(210,229,1)" fg:x="152824834" fg:w="222342273"/><text x="2.2712%" y="671.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (222,342,273 samples, 2.94%)</title><rect x="2.0212%" y="645" width="2.9406%" height="15" fill="rgb(222,148,37)" fg:x="152824834" fg:w="222342273"/><text x="2.2712%" y="655.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (222,342,273 samples, 2.94%)</title><rect x="2.0212%" y="629" width="2.9406%" height="15" fill="rgb(234,67,33)" fg:x="152824834" fg:w="222342273"/><text x="2.2712%" y="639.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (222,342,273 samples, 2.94%)</title><rect x="2.0212%" y="613" width="2.9406%" height="15" fill="rgb(247,98,35)" fg:x="152824834" fg:w="222342273"/><text x="2.2712%" y="623.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (209,586,422 samples, 2.77%)</title><rect x="2.1899%" y="597" width="2.7719%" height="15" fill="rgb(247,138,52)" fg:x="165580685" fg:w="209586422"/><text x="2.4399%" y="607.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (209,586,422 samples, 2.77%)</title><rect x="2.1899%" y="581" width="2.7719%" height="15" fill="rgb(213,79,30)" fg:x="165580685" fg:w="209586422"/><text x="2.4399%" y="591.50">co..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (13,573,640 samples, 0.18%)</title><rect x="4.7823%" y="565" width="0.1795%" height="15" fill="rgb(246,177,23)" fg:x="361593467" fg:w="13573640"/><text x="5.0323%" y="575.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (10,434,677 samples, 0.14%)</title><rect x="4.8238%" y="549" width="0.1380%" height="15" fill="rgb(230,62,27)" fg:x="364732430" fg:w="10434677"/><text x="5.0738%" y="559.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (10,434,677 samples, 0.14%)</title><rect x="4.8238%" y="533" width="0.1380%" height="15" fill="rgb(216,154,8)" fg:x="364732430" fg:w="10434677"/><text x="5.0738%" y="543.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (10,434,677 samples, 0.14%)</title><rect x="4.8238%" y="517" width="0.1380%" height="15" fill="rgb(244,35,45)" fg:x="364732430" fg:w="10434677"/><text x="5.0738%" y="527.50"></text></g><g><title>ndarray::dimension::stride_offset (3,617,659 samples, 0.05%)</title><rect x="4.9140%" y="501" width="0.0478%" height="15" fill="rgb(251,115,12)" fg:x="371549448" fg:w="3617659"/><text x="5.1640%" y="511.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (68,223,211 samples, 0.90%)</title><rect x="4.9618%" y="725" width="0.9023%" height="15" fill="rgb(240,54,50)" fg:x="375167107" fg:w="68223211"/><text x="5.2118%" y="735.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (68,223,211 samples, 0.90%)</title><rect x="4.9618%" y="709" width="0.9023%" height="15" fill="rgb(233,84,52)" fg:x="375167107" fg:w="68223211"/><text x="5.2118%" y="719.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (68,223,211 samples, 0.90%)</title><rect x="4.9618%" y="693" width="0.9023%" height="15" fill="rgb(207,117,47)" fg:x="375167107" fg:w="68223211"/><text x="5.2118%" y="703.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (68,223,211 samples, 0.90%)</title><rect x="4.9618%" y="677" width="0.9023%" height="15" fill="rgb(249,43,39)" fg:x="375167107" fg:w="68223211"/><text x="5.2118%" y="687.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (68,223,211 samples, 0.90%)</title><rect x="4.9618%" y="661" width="0.9023%" height="15" fill="rgb(209,38,44)" fg:x="375167107" fg:w="68223211"/><text x="5.2118%" y="671.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (53,310,026 samples, 0.71%)</title><rect x="5.1590%" y="645" width="0.7051%" height="15" fill="rgb(236,212,23)" fg:x="390080292" fg:w="53310026"/><text x="5.4090%" y="655.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (53,310,026 samples, 0.71%)</title><rect x="5.1590%" y="629" width="0.7051%" height="15" fill="rgb(242,79,21)" fg:x="390080292" fg:w="53310026"/><text x="5.4090%" y="639.50"></text></g><g><title>[unknown] (10,412,870 samples, 0.14%)</title><rect x="5.7264%" y="613" width="0.1377%" height="15" fill="rgb(211,96,35)" fg:x="432977448" fg:w="10412870"/><text x="5.9764%" y="623.50"></text></g><g><title>profile::internal::sad_converged (13,289,574 samples, 0.18%)</title><rect x="5.8641%" y="725" width="0.1758%" height="15" fill="rgb(253,215,40)" fg:x="443390318" fg:w="13289574"/><text x="6.1141%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (13,289,574 samples, 0.18%)</title><rect x="5.8641%" y="709" width="0.1758%" height="15" fill="rgb(211,81,21)" fg:x="443390318" fg:w="13289574"/><text x="6.1141%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13,289,574 samples, 0.18%)</title><rect x="5.8641%" y="693" width="0.1758%" height="15" fill="rgb(208,190,38)" fg:x="443390318" fg:w="13289574"/><text x="6.1141%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,808,353 samples, 0.09%)</title><rect x="5.9498%" y="677" width="0.0900%" height="15" fill="rgb(235,213,38)" fg:x="449871539" fg:w="6808353"/><text x="6.1998%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (6,808,353 samples, 0.09%)</title><rect x="5.9498%" y="661" width="0.0900%" height="15" fill="rgb(237,122,38)" fg:x="449871539" fg:w="6808353"/><text x="6.1998%" y="671.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (150,695,095 samples, 1.99%)</title><rect x="6.0399%" y="629" width="1.9930%" height="15" fill="rgb(244,218,35)" fg:x="456679892" fg:w="150695095"/><text x="6.2899%" y="639.50">&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (150,695,095 samples, 1.99%)</title><rect x="6.0399%" y="613" width="1.9930%" height="15" fill="rgb(240,68,47)" fg:x="456679892" fg:w="150695095"/><text x="6.2899%" y="623.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (157,432,942 samples, 2.08%)</title><rect x="6.0399%" y="661" width="2.0821%" height="15" fill="rgb(210,16,53)" fg:x="456679892" fg:w="157432942"/><text x="6.2899%" y="671.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (157,432,942 samples, 2.08%)</title><rect x="6.0399%" y="645" width="2.0821%" height="15" fill="rgb(235,124,12)" fg:x="456679892" fg:w="157432942"/><text x="6.2899%" y="655.50">&lt;..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6,737,847 samples, 0.09%)</title><rect x="8.0329%" y="629" width="0.0891%" height="15" fill="rgb(224,169,11)" fg:x="607374987" fg:w="6737847"/><text x="8.2829%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (213,024,389 samples, 2.82%)</title><rect x="15.7774%" y="629" width="2.8174%" height="15" fill="rgb(250,166,2)" fg:x="1192940866" fg:w="213024389"/><text x="16.0274%" y="639.50">&lt;a..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (213,024,389 samples, 2.82%)</title><rect x="15.7774%" y="613" width="2.8174%" height="15" fill="rgb(242,216,29)" fg:x="1192940866" fg:w="213024389"/><text x="16.0274%" y="623.50">co..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (213,024,389 samples, 2.82%)</title><rect x="15.7774%" y="597" width="2.8174%" height="15" fill="rgb(230,116,27)" fg:x="1192940866" fg:w="213024389"/><text x="16.0274%" y="607.50">&lt;u..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="869" width="16.6061%" height="15" fill="rgb(228,99,48)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="879.50">rayon::iter::plumbing::Pro..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="853" width="16.6061%" height="15" fill="rgb(253,11,6)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="863.50">&lt;rayon::iter::for_each::Fo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="837" width="16.6061%" height="15" fill="rgb(247,143,39)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="847.50">core::iter::traits::iterat..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="821" width="16.6061%" height="15" fill="rgb(236,97,10)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="831.50">&lt;core::iter::adapters::zip..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="805" width="16.6061%" height="15" fill="rgb(233,208,19)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="815.50">&lt;core::iter::adapters::zip..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="789" width="16.6061%" height="15" fill="rgb(216,164,2)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="799.50">&lt;core::iter::adapters::zip..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="773" width="16.6061%" height="15" fill="rgb(220,129,5)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="783.50">core::iter::traits::iterat..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="757" width="16.6061%" height="15" fill="rgb(242,17,10)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="767.50">core::ops::function::impls..</text></g><g><title>profile::demean_impl::_{{closure}} (1,255,603,742 samples, 16.61%)</title><rect x="2.0212%" y="741" width="16.6061%" height="15" fill="rgb(242,107,0)" fg:x="152824834" fg:w="1255603742"/><text x="2.2712%" y="751.50">profile::demean_impl::_{{c..</text></g><g><title>profile::internal::subtract_weighted_group_mean (951,748,684 samples, 12.59%)</title><rect x="6.0399%" y="725" width="12.5874%" height="15" fill="rgb(251,28,31)" fg:x="456679892" fg:w="951748684"/><text x="6.2899%" y="735.50">profile::internal::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (951,748,684 samples, 12.59%)</title><rect x="6.0399%" y="709" width="12.5874%" height="15" fill="rgb(233,223,10)" fg:x="456679892" fg:w="951748684"/><text x="6.2899%" y="719.50">core::iter::traits:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (951,748,684 samples, 12.59%)</title><rect x="6.0399%" y="693" width="12.5874%" height="15" fill="rgb(215,21,27)" fg:x="456679892" fg:w="951748684"/><text x="6.2899%" y="703.50">&lt;core::iter::adapte..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (951,748,684 samples, 12.59%)</title><rect x="6.0399%" y="677" width="12.5874%" height="15" fill="rgb(232,23,21)" fg:x="456679892" fg:w="951748684"/><text x="6.2899%" y="687.50">&lt;core::iter::adapte..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (794,315,742 samples, 10.51%)</title><rect x="8.1220%" y="661" width="10.5053%" height="15" fill="rgb(244,5,23)" fg:x="614112834" fg:w="794315742"/><text x="8.3720%" y="671.50">core::iter::tra..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (794,315,742 samples, 10.51%)</title><rect x="8.1220%" y="645" width="10.5053%" height="15" fill="rgb(226,81,46)" fg:x="614112834" fg:w="794315742"/><text x="8.3720%" y="655.50">profile::intern..</text></g><g><title>[unknown] (2,463,321 samples, 0.03%)</title><rect x="18.5947%" y="629" width="0.0326%" height="15" fill="rgb(247,70,30)" fg:x="1405965255" fg:w="2463321"/><text x="18.8447%" y="639.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1,123,291 samples, 0.01%)</title><rect x="18.6273%" y="245" width="0.0149%" height="15" fill="rgb(212,68,19)" fg:x="1408428576" fg:w="1123291"/><text x="18.8773%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (32,032,550 samples, 0.42%)</title><rect x="18.6273%" y="277" width="0.4236%" height="15" fill="rgb(240,187,13)" fg:x="1408428576" fg:w="32032550"/><text x="18.8773%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (32,032,550 samples, 0.42%)</title><rect x="18.6273%" y="261" width="0.4236%" height="15" fill="rgb(223,113,26)" fg:x="1408428576" fg:w="32032550"/><text x="18.8773%" y="271.50"></text></g><g><title>core::ptr::write (30,909,259 samples, 0.41%)</title><rect x="18.6422%" y="245" width="0.4088%" height="15" fill="rgb(206,192,2)" fg:x="1409551867" fg:w="30909259"/><text x="18.8922%" y="255.50"></text></g><g><title>[unknown] (4,510,699 samples, 0.06%)</title><rect x="18.9913%" y="229" width="0.0597%" height="15" fill="rgb(241,108,4)" fg:x="1435950427" fg:w="4510699"/><text x="19.2413%" y="239.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (4,332,313 samples, 0.06%)</title><rect x="19.0674%" y="245" width="0.0573%" height="15" fill="rgb(247,173,49)" fg:x="1441701190" fg:w="4332313"/><text x="19.3174%" y="255.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (4,332,313 samples, 0.06%)</title><rect x="19.0674%" y="229" width="0.0573%" height="15" fill="rgb(224,114,35)" fg:x="1441701190" fg:w="4332313"/><text x="19.3174%" y="239.50"></text></g><g><title>ndarray::dimension::stride_offset (2,086,706 samples, 0.03%)</title><rect x="19.0971%" y="213" width="0.0276%" height="15" fill="rgb(245,159,27)" fg:x="1443946797" fg:w="2086706"/><text x="19.3471%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="437" width="0.5069%" height="15" fill="rgb(245,172,44)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="421" width="0.5069%" height="15" fill="rgb(236,23,11)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="405" width="0.5069%" height="15" fill="rgb(205,117,38)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="389" width="0.5069%" height="15" fill="rgb(237,72,25)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="373" width="0.5069%" height="15" fill="rgb(244,70,9)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="357" width="0.5069%" height="15" fill="rgb(217,125,39)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="341" width="0.5069%" height="15" fill="rgb(235,36,10)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="325" width="0.5069%" height="15" fill="rgb(251,123,47)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="309" width="0.5069%" height="15" fill="rgb(221,13,13)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (38,328,430 samples, 0.51%)</title><rect x="18.6273%" y="293" width="0.5069%" height="15" fill="rgb(238,131,9)" fg:x="1408428576" fg:w="38328430"/><text x="18.8773%" y="303.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (6,295,880 samples, 0.08%)</title><rect x="19.0510%" y="277" width="0.0833%" height="15" fill="rgb(211,50,8)" fg:x="1440461126" fg:w="6295880"/><text x="19.3010%" y="287.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (5,055,816 samples, 0.07%)</title><rect x="19.0674%" y="261" width="0.0669%" height="15" fill="rgb(245,182,24)" fg:x="1441701190" fg:w="5055816"/><text x="19.3174%" y="271.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="821" width="0.7388%" height="15" fill="rgb(242,14,37)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="831.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="805" width="0.7388%" height="15" fill="rgb(246,228,12)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="815.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="789" width="0.7388%" height="15" fill="rgb(213,55,15)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="799.50"></text></g><g><title>rayon_core::job::JobRef::execute (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="773" width="0.7388%" height="15" fill="rgb(209,9,3)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="783.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="757" width="0.7388%" height="15" fill="rgb(230,59,30)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="767.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="741" width="0.7388%" height="15" fill="rgb(209,121,21)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="751.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="725" width="0.7388%" height="15" fill="rgb(220,109,13)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="735.50"></text></g><g><title>std::panic::catch_unwind (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="709" width="0.7388%" height="15" fill="rgb(232,18,1)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="719.50"></text></g><g><title>std::panicking::try (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="693" width="0.7388%" height="15" fill="rgb(215,41,42)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="703.50"></text></g><g><title>std::panicking::try::do_call (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="677" width="0.7388%" height="15" fill="rgb(224,123,36)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="661" width="0.7388%" height="15" fill="rgb(240,125,3)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="671.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="645" width="0.7388%" height="15" fill="rgb(205,98,50)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="655.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="629" width="0.7388%" height="15" fill="rgb(205,185,37)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="613" width="0.7388%" height="15" fill="rgb(238,207,15)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="597" width="0.7388%" height="15" fill="rgb(213,199,42)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="581" width="0.7388%" height="15" fill="rgb(235,201,11)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="591.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="565" width="0.7388%" height="15" fill="rgb(207,46,11)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="549" width="0.7388%" height="15" fill="rgb(241,35,35)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="533" width="0.7388%" height="15" fill="rgb(243,32,47)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="517" width="0.7388%" height="15" fill="rgb(247,202,23)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="501" width="0.7388%" height="15" fill="rgb(219,102,11)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="485" width="0.7388%" height="15" fill="rgb(243,110,44)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="469" width="0.7388%" height="15" fill="rgb(222,74,54)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="479.50"></text></g><g><title>profile::demean_impl::_{{closure}} (55,864,054 samples, 0.74%)</title><rect x="18.6273%" y="453" width="0.7388%" height="15" fill="rgb(216,99,12)" fg:x="1408428576" fg:w="55864054"/><text x="18.8773%" y="463.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (17,535,624 samples, 0.23%)</title><rect x="19.1342%" y="437" width="0.2319%" height="15" fill="rgb(226,22,26)" fg:x="1446757006" fg:w="17535624"/><text x="19.3842%" y="447.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (17,535,624 samples, 0.23%)</title><rect x="19.1342%" y="421" width="0.2319%" height="15" fill="rgb(217,163,10)" fg:x="1446757006" fg:w="17535624"/><text x="19.3842%" y="431.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (17,535,624 samples, 0.23%)</title><rect x="19.1342%" y="405" width="0.2319%" height="15" fill="rgb(213,25,53)" fg:x="1446757006" fg:w="17535624"/><text x="19.3842%" y="415.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (17,535,624 samples, 0.23%)</title><rect x="19.1342%" y="389" width="0.2319%" height="15" fill="rgb(252,105,26)" fg:x="1446757006" fg:w="17535624"/><text x="19.3842%" y="399.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (17,535,624 samples, 0.23%)</title><rect x="19.1342%" y="373" width="0.2319%" height="15" fill="rgb(220,39,43)" fg:x="1446757006" fg:w="17535624"/><text x="19.3842%" y="383.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (6,497,583 samples, 0.09%)</title><rect x="19.2802%" y="357" width="0.0859%" height="15" fill="rgb(229,68,48)" fg:x="1457795047" fg:w="6497583"/><text x="19.5302%" y="367.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (6,497,583 samples, 0.09%)</title><rect x="19.2802%" y="341" width="0.0859%" height="15" fill="rgb(252,8,32)" fg:x="1457795047" fg:w="6497583"/><text x="19.5302%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (11,968,809 samples, 0.16%)</title><rect x="19.3750%" y="389" width="0.1583%" height="15" fill="rgb(223,20,43)" fg:x="1464964551" fg:w="11968809"/><text x="19.6250%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (11,968,809 samples, 0.16%)</title><rect x="19.3750%" y="373" width="0.1583%" height="15" fill="rgb(229,81,49)" fg:x="1464964551" fg:w="11968809"/><text x="19.6250%" y="383.50"></text></g><g><title>core::ptr::write (11,968,809 samples, 0.16%)</title><rect x="19.3750%" y="357" width="0.1583%" height="15" fill="rgb(236,28,36)" fg:x="1464964551" fg:w="11968809"/><text x="19.6250%" y="367.50"></text></g><g><title>[unknown] (6,990,466 samples, 0.09%)</title><rect x="19.4409%" y="341" width="0.0925%" height="15" fill="rgb(249,185,26)" fg:x="1469942894" fg:w="6990466"/><text x="19.6909%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (25,584,356 samples, 0.34%)</title><rect x="19.3750%" y="405" width="0.3384%" height="15" fill="rgb(249,174,33)" fg:x="1464964551" fg:w="25584356"/><text x="19.6250%" y="415.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (13,615,547 samples, 0.18%)</title><rect x="19.5333%" y="389" width="0.1801%" height="15" fill="rgb(233,201,37)" fg:x="1476933360" fg:w="13615547"/><text x="19.7833%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28,873,675 samples, 0.38%)</title><rect x="19.3661%" y="421" width="0.3819%" height="15" fill="rgb(221,78,26)" fg:x="1464292630" fg:w="28873675"/><text x="19.6161%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2,617,398 samples, 0.03%)</title><rect x="19.7134%" y="405" width="0.0346%" height="15" fill="rgb(250,127,30)" fg:x="1490548907" fg:w="2617398"/><text x="19.9634%" y="415.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (12,569,646 samples, 0.17%)</title><rect x="19.7480%" y="357" width="0.1662%" height="15" fill="rgb(230,49,44)" fg:x="1493166305" fg:w="12569646"/><text x="19.9980%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (282,300,198 samples, 3.73%)</title><rect x="19.7480%" y="389" width="3.7336%" height="15" fill="rgb(229,67,23)" fg:x="1493166305" fg:w="282300198"/><text x="19.9980%" y="399.50">core..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (282,300,198 samples, 3.73%)</title><rect x="19.7480%" y="373" width="3.7336%" height="15" fill="rgb(249,83,47)" fg:x="1493166305" fg:w="282300198"/><text x="19.9980%" y="383.50">allo..</text></g><g><title>core::ptr::write (269,730,552 samples, 3.57%)</title><rect x="19.9143%" y="357" width="3.5673%" height="15" fill="rgb(215,43,3)" fg:x="1505735951" fg:w="269730552"/><text x="20.1643%" y="367.50">core..</text></g><g><title>[unknown] (4,683,524 samples, 0.06%)</title><rect x="23.4197%" y="341" width="0.0619%" height="15" fill="rgb(238,154,13)" fg:x="1770782979" fg:w="4683524"/><text x="23.6697%" y="351.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (7,451,982 samples, 0.10%)</title><rect x="23.5731%" y="357" width="0.0986%" height="15" fill="rgb(219,56,2)" fg:x="1782381528" fg:w="7451982"/><text x="23.8231%" y="367.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (7,451,982 samples, 0.10%)</title><rect x="23.5731%" y="341" width="0.0986%" height="15" fill="rgb(233,0,4)" fg:x="1782381528" fg:w="7451982"/><text x="23.8231%" y="351.50"></text></g><g><title>ndarray::dimension::stride_offset (7,451,982 samples, 0.10%)</title><rect x="23.5731%" y="325" width="0.0986%" height="15" fill="rgb(235,30,7)" fg:x="1782381528" fg:w="7451982"/><text x="23.8231%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (301,507,197 samples, 3.99%)</title><rect x="19.7480%" y="405" width="3.9876%" height="15" fill="rgb(250,79,13)" fg:x="1493166305" fg:w="301507197"/><text x="19.9980%" y="415.50">core..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (19,206,999 samples, 0.25%)</title><rect x="23.4816%" y="389" width="0.2540%" height="15" fill="rgb(211,146,34)" fg:x="1775466503" fg:w="19206999"/><text x="23.7316%" y="399.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (12,291,974 samples, 0.16%)</title><rect x="23.5731%" y="373" width="0.1626%" height="15" fill="rgb(228,22,38)" fg:x="1782381528" fg:w="12291974"/><text x="23.8231%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4,839,992 samples, 0.06%)</title><rect x="23.6716%" y="357" width="0.0640%" height="15" fill="rgb(235,168,5)" fg:x="1789833510" fg:w="4839992"/><text x="23.9216%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (331,397,425 samples, 4.38%)</title><rect x="19.3661%" y="549" width="4.3829%" height="15" fill="rgb(221,155,16)" fg:x="1464292630" fg:w="331397425"/><text x="19.6161%" y="559.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (331,397,425 samples, 4.38%)</title><rect x="19.3661%" y="533" width="4.3829%" height="15" fill="rgb(215,215,53)" fg:x="1464292630" fg:w="331397425"/><text x="19.6161%" y="543.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (331,397,425 samples, 4.38%)</title><rect x="19.3661%" y="517" width="4.3829%" height="15" fill="rgb(223,4,10)" fg:x="1464292630" fg:w="331397425"/><text x="19.6161%" y="527.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (331,397,425 samples, 4.38%)</title><rect x="19.3661%" y="501" width="4.3829%" height="15" fill="rgb(234,103,6)" fg:x="1464292630" fg:w="331397425"/><text x="19.6161%" y="511.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (331,397,425 samples, 4.38%)</title><rect x="19.3661%" y="485" width="4.3829%" height="15" fill="rgb(227,97,0)" fg:x="1464292630" fg:w="331397425"/><text x="19.6161%" y="495.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (331,397,425 samples, 4.38%)</title><rect x="19.3661%" y="469" width="4.3829%" height="15" fill="rgb(234,150,53)" fg:x="1464292630" fg:w="331397425"/><text x="19.6161%" y="479.50">alloc..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (331,397,425 samples, 4.38%)</title><rect x="19.3661%" y="453" width="4.3829%" height="15" fill="rgb(228,201,54)" fg:x="1464292630" fg:w="331397425"/><text x="19.6161%" y="463.50">core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (331,397,425 samples, 4.38%)</title><rect x="19.3661%" y="437" width="4.3829%" height="15" fill="rgb(222,22,37)" fg:x="1464292630" fg:w="331397425"/><text x="19.6161%" y="447.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (302,523,750 samples, 4.00%)</title><rect x="19.7480%" y="421" width="4.0011%" height="15" fill="rgb(237,53,32)" fg:x="1493166305" fg:w="302523750"/><text x="19.9980%" y="431.50">core..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,016,553 samples, 0.01%)</title><rect x="23.7356%" y="405" width="0.0134%" height="15" fill="rgb(233,25,53)" fg:x="1794673502" fg:w="1016553"/><text x="23.9856%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,016,553 samples, 0.01%)</title><rect x="23.7356%" y="389" width="0.0134%" height="15" fill="rgb(210,40,34)" fg:x="1794673502" fg:w="1016553"/><text x="23.9856%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1,016,553 samples, 0.01%)</title><rect x="23.7356%" y="373" width="0.0134%" height="15" fill="rgb(241,220,44)" fg:x="1794673502" fg:w="1016553"/><text x="23.9856%" y="383.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (114,535,369 samples, 1.51%)</title><rect x="23.7491%" y="549" width="1.5148%" height="15" fill="rgb(235,28,35)" fg:x="1795690055" fg:w="114535369"/><text x="23.9991%" y="559.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (114,535,369 samples, 1.51%)</title><rect x="23.7491%" y="533" width="1.5148%" height="15" fill="rgb(210,56,17)" fg:x="1795690055" fg:w="114535369"/><text x="23.9991%" y="543.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (114,535,369 samples, 1.51%)</title><rect x="23.7491%" y="517" width="1.5148%" height="15" fill="rgb(224,130,29)" fg:x="1795690055" fg:w="114535369"/><text x="23.9991%" y="527.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (114,535,369 samples, 1.51%)</title><rect x="23.7491%" y="501" width="1.5148%" height="15" fill="rgb(235,212,8)" fg:x="1795690055" fg:w="114535369"/><text x="23.9991%" y="511.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (114,535,369 samples, 1.51%)</title><rect x="23.7491%" y="485" width="1.5148%" height="15" fill="rgb(223,33,50)" fg:x="1795690055" fg:w="114535369"/><text x="23.9991%" y="495.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (69,583,272 samples, 0.92%)</title><rect x="24.3436%" y="469" width="0.9203%" height="15" fill="rgb(219,149,13)" fg:x="1840642152" fg:w="69583272"/><text x="24.5936%" y="479.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (69,583,272 samples, 0.92%)</title><rect x="24.3436%" y="453" width="0.9203%" height="15" fill="rgb(250,156,29)" fg:x="1840642152" fg:w="69583272"/><text x="24.5936%" y="463.50"></text></g><g><title>[unknown] (15,584,397 samples, 0.21%)</title><rect x="25.0578%" y="437" width="0.2061%" height="15" fill="rgb(216,193,19)" fg:x="1894641027" fg:w="15584397"/><text x="25.3078%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,835,980 samples, 0.35%)</title><rect x="25.3696%" y="501" width="0.3549%" height="15" fill="rgb(216,135,14)" fg:x="1918216931" fg:w="26835980"/><text x="25.6196%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (26,835,980 samples, 0.35%)</title><rect x="25.3696%" y="485" width="0.3549%" height="15" fill="rgb(241,47,5)" fg:x="1918216931" fg:w="26835980"/><text x="25.6196%" y="495.50"></text></g><g><title>profile::internal::sad_converged (42,029,960 samples, 0.56%)</title><rect x="25.2639%" y="549" width="0.5559%" height="15" fill="rgb(233,42,35)" fg:x="1910225424" fg:w="42029960"/><text x="25.5139%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (42,029,960 samples, 0.56%)</title><rect x="25.2639%" y="533" width="0.5559%" height="15" fill="rgb(231,13,6)" fg:x="1910225424" fg:w="42029960"/><text x="25.5139%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (42,029,960 samples, 0.56%)</title><rect x="25.2639%" y="517" width="0.5559%" height="15" fill="rgb(207,181,40)" fg:x="1910225424" fg:w="42029960"/><text x="25.5139%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (7,202,473 samples, 0.10%)</title><rect x="25.7245%" y="501" width="0.0953%" height="15" fill="rgb(254,173,49)" fg:x="1945052911" fg:w="7202473"/><text x="25.9745%" y="511.50"></text></g><g><title>profile::internal::sad_converged::_{{closure}} (7,202,473 samples, 0.10%)</title><rect x="25.7245%" y="485" width="0.0953%" height="15" fill="rgb(221,1,38)" fg:x="1945052911" fg:w="7202473"/><text x="25.9745%" y="495.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (322,633,618 samples, 4.27%)</title><rect x="25.8197%" y="453" width="4.2670%" height="15" fill="rgb(206,124,46)" fg:x="1952255384" fg:w="322633618"/><text x="26.0697%" y="463.50">&lt;usiz..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (322,633,618 samples, 4.27%)</title><rect x="25.8197%" y="437" width="4.2670%" height="15" fill="rgb(249,21,11)" fg:x="1952255384" fg:w="322633618"/><text x="26.0697%" y="447.50">core:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (328,859,671 samples, 4.35%)</title><rect x="25.8197%" y="485" width="4.3494%" height="15" fill="rgb(222,201,40)" fg:x="1952255384" fg:w="328859671"/><text x="26.0697%" y="495.50">core:..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (328,859,671 samples, 4.35%)</title><rect x="25.8197%" y="469" width="4.3494%" height="15" fill="rgb(235,61,29)" fg:x="1952255384" fg:w="328859671"/><text x="26.0697%" y="479.50">&lt;core..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6,226,053 samples, 0.08%)</title><rect x="30.0868%" y="453" width="0.0823%" height="15" fill="rgb(219,207,3)" fg:x="2274889002" fg:w="6226053"/><text x="30.3368%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (380,647,216 samples, 5.03%)</title><rect x="45.2573%" y="453" width="5.0343%" height="15" fill="rgb(222,56,46)" fg:x="3421945639" fg:w="380647216"/><text x="45.5073%" y="463.50">&lt;alloc..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (380,647,216 samples, 5.03%)</title><rect x="45.2573%" y="437" width="5.0343%" height="15" fill="rgb(239,76,54)" fg:x="3421945639" fg:w="380647216"/><text x="45.5073%" y="447.50">core::..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (380,647,216 samples, 5.03%)</title><rect x="45.2573%" y="421" width="5.0343%" height="15" fill="rgb(231,124,27)" fg:x="3421945639" fg:w="380647216"/><text x="45.5073%" y="431.50">&lt;usize..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="693" width="30.9654%" height="15" fill="rgb(249,195,6)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="703.50">rayon::iter::plumbing::Producer::fold_with</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="677" width="30.9654%" height="15" fill="rgb(237,174,47)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="687.50">&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="661" width="30.9654%" height="15" fill="rgb(206,201,31)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="671.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="645" width="30.9654%" height="15" fill="rgb(231,57,52)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="655.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="629" width="30.9654%" height="15" fill="rgb(248,177,22)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="639.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="613" width="30.9654%" height="15" fill="rgb(215,211,37)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="623.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="597" width="30.9654%" height="15" fill="rgb(241,128,51)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="607.50">core::iter::traits::iterator::Iterator::for_each::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="581" width="30.9654%" height="15" fill="rgb(227,165,31)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="591.50">core::ops::function::impls::&lt;impl core::ops::funct..</text></g><g><title>profile::demean_impl::_{{closure}} (2,341,322,123 samples, 30.97%)</title><rect x="19.3661%" y="565" width="30.9654%" height="15" fill="rgb(228,167,24)" fg:x="1464292630" fg:w="2341322123"/><text x="19.6161%" y="575.50">profile::demean_impl::_{{closure}}</text></g><g><title>profile::internal::subtract_weighted_group_mean (1,853,359,369 samples, 24.51%)</title><rect x="25.8197%" y="549" width="24.5118%" height="15" fill="rgb(228,143,12)" fg:x="1952255384" fg:w="1853359369"/><text x="26.0697%" y="559.50">profile::internal::subtract_weighted_gr..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,853,359,369 samples, 24.51%)</title><rect x="25.8197%" y="533" width="24.5118%" height="15" fill="rgb(249,149,8)" fg:x="1952255384" fg:w="1853359369"/><text x="26.0697%" y="543.50">core::iter::traits::iterator::Iterator:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,853,359,369 samples, 24.51%)</title><rect x="25.8197%" y="517" width="24.5118%" height="15" fill="rgb(243,35,44)" fg:x="1952255384" fg:w="1853359369"/><text x="26.0697%" y="527.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,853,359,369 samples, 24.51%)</title><rect x="25.8197%" y="501" width="24.5118%" height="15" fill="rgb(246,89,9)" fg:x="1952255384" fg:w="1853359369"/><text x="26.0697%" y="511.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,524,499,698 samples, 20.16%)</title><rect x="30.1691%" y="485" width="20.1624%" height="15" fill="rgb(233,213,13)" fg:x="2281115055" fg:w="1524499698"/><text x="30.4191%" y="495.50">core::iter::traits::iterator::It..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (1,524,499,698 samples, 20.16%)</title><rect x="30.1691%" y="469" width="20.1624%" height="15" fill="rgb(233,141,41)" fg:x="2281115055" fg:w="1524499698"/><text x="30.4191%" y="479.50">profile::internal::subtract_weig..</text></g><g><title>[unknown] (3,021,898 samples, 0.04%)</title><rect x="50.2916%" y="453" width="0.0400%" height="15" fill="rgb(239,167,4)" fg:x="3802592855" fg:w="3021898"/><text x="50.5416%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,002,718 samples, 0.04%)</title><rect x="50.3315%" y="213" width="0.0397%" height="15" fill="rgb(209,217,16)" fg:x="3805614753" fg:w="3002718"/><text x="50.5815%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (3,002,718 samples, 0.04%)</title><rect x="50.3315%" y="197" width="0.0397%" height="15" fill="rgb(219,88,35)" fg:x="3805614753" fg:w="3002718"/><text x="50.5815%" y="207.50"></text></g><g><title>core::ptr::write (3,002,718 samples, 0.04%)</title><rect x="50.3315%" y="181" width="0.0397%" height="15" fill="rgb(220,193,23)" fg:x="3805614753" fg:w="3002718"/><text x="50.5815%" y="191.50"></text></g><g><title>[unknown] (2,026,334 samples, 0.03%)</title><rect x="50.3444%" y="165" width="0.0268%" height="15" fill="rgb(230,90,52)" fg:x="3806591137" fg:w="2026334"/><text x="50.5944%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5,698,819 samples, 0.08%)</title><rect x="50.3315%" y="229" width="0.0754%" height="15" fill="rgb(252,106,19)" fg:x="3805614753" fg:w="5698819"/><text x="50.5815%" y="239.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (2,696,101 samples, 0.04%)</title><rect x="50.3712%" y="213" width="0.0357%" height="15" fill="rgb(206,74,20)" fg:x="3808617471" fg:w="2696101"/><text x="50.6212%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,268,850 samples, 0.08%)</title><rect x="50.3315%" y="245" width="0.0829%" height="15" fill="rgb(230,138,44)" fg:x="3805614753" fg:w="6268850"/><text x="50.5815%" y="255.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1,352,854 samples, 0.02%)</title><rect x="50.4144%" y="181" width="0.0179%" height="15" fill="rgb(235,182,43)" fg:x="3811883603" fg:w="1352854"/><text x="50.6644%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (69,954,123 samples, 0.93%)</title><rect x="50.4144%" y="213" width="0.9252%" height="15" fill="rgb(242,16,51)" fg:x="3811883603" fg:w="69954123"/><text x="50.6644%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (69,954,123 samples, 0.93%)</title><rect x="50.4144%" y="197" width="0.9252%" height="15" fill="rgb(248,9,4)" fg:x="3811883603" fg:w="69954123"/><text x="50.6644%" y="207.50"></text></g><g><title>core::ptr::write (68,601,269 samples, 0.91%)</title><rect x="50.4323%" y="181" width="0.9073%" height="15" fill="rgb(210,31,22)" fg:x="3813236457" fg:w="68601269"/><text x="50.6823%" y="191.50"></text></g><g><title>[unknown] (2,569,145 samples, 0.03%)</title><rect x="51.3056%" y="165" width="0.0340%" height="15" fill="rgb(239,54,39)" fg:x="3879268581" fg:w="2569145"/><text x="51.5556%" y="175.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (1,812,545 samples, 0.02%)</title><rect x="51.3396%" y="181" width="0.0240%" height="15" fill="rgb(230,99,41)" fg:x="3881837726" fg:w="1812545"/><text x="51.5896%" y="191.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (1,812,545 samples, 0.02%)</title><rect x="51.3396%" y="165" width="0.0240%" height="15" fill="rgb(253,106,12)" fg:x="3881837726" fg:w="1812545"/><text x="51.5896%" y="175.50"></text></g><g><title>ndarray::dimension::stride_offset (1,812,545 samples, 0.02%)</title><rect x="51.3396%" y="149" width="0.0240%" height="15" fill="rgb(213,46,41)" fg:x="3881837726" fg:w="1812545"/><text x="51.5896%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (79,475,086 samples, 1.05%)</title><rect x="50.3315%" y="373" width="1.0511%" height="15" fill="rgb(215,133,35)" fg:x="3805614753" fg:w="79475086"/><text x="50.5815%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (79,475,086 samples, 1.05%)</title><rect x="50.3315%" y="357" width="1.0511%" height="15" fill="rgb(213,28,5)" fg:x="3805614753" fg:w="79475086"/><text x="50.5815%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (79,475,086 samples, 1.05%)</title><rect x="50.3315%" y="341" width="1.0511%" height="15" fill="rgb(215,77,49)" fg:x="3805614753" fg:w="79475086"/><text x="50.5815%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (79,475,086 samples, 1.05%)</title><rect x="50.3315%" y="325" width="1.0511%" height="15" fill="rgb(248,100,22)" fg:x="3805614753" fg:w="79475086"/><text x="50.5815%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (79,475,086 samples, 1.05%)</title><rect x="50.3315%" y="309" width="1.0511%" height="15" fill="rgb(208,67,9)" fg:x="3805614753" fg:w="79475086"/><text x="50.5815%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (79,475,086 samples, 1.05%)</title><rect x="50.3315%" y="293" width="1.0511%" height="15" fill="rgb(219,133,21)" fg:x="3805614753" fg:w="79475086"/><text x="50.5815%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (79,475,086 samples, 1.05%)</title><rect x="50.3315%" y="277" width="1.0511%" height="15" fill="rgb(246,46,29)" fg:x="3805614753" fg:w="79475086"/><text x="50.5815%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (79,475,086 samples, 1.05%)</title><rect x="50.3315%" y="261" width="1.0511%" height="15" fill="rgb(246,185,52)" fg:x="3805614753" fg:w="79475086"/><text x="50.5815%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (73,206,236 samples, 0.97%)</title><rect x="50.4144%" y="245" width="0.9682%" height="15" fill="rgb(252,136,11)" fg:x="3811883603" fg:w="73206236"/><text x="50.6644%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (73,206,236 samples, 0.97%)</title><rect x="50.4144%" y="229" width="0.9682%" height="15" fill="rgb(219,138,53)" fg:x="3811883603" fg:w="73206236"/><text x="50.6644%" y="239.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (3,252,113 samples, 0.04%)</title><rect x="51.3396%" y="213" width="0.0430%" height="15" fill="rgb(211,51,23)" fg:x="3881837726" fg:w="3252113"/><text x="51.5896%" y="223.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (3,252,113 samples, 0.04%)</title><rect x="51.3396%" y="197" width="0.0430%" height="15" fill="rgb(247,221,28)" fg:x="3881837726" fg:w="3252113"/><text x="51.5896%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1,439,568 samples, 0.02%)</title><rect x="51.3636%" y="181" width="0.0190%" height="15" fill="rgb(251,222,45)" fg:x="3883650271" fg:w="1439568"/><text x="51.6136%" y="191.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (21,271,602 samples, 0.28%)</title><rect x="51.3826%" y="373" width="0.2813%" height="15" fill="rgb(217,162,53)" fg:x="3885089839" fg:w="21271602"/><text x="51.6326%" y="383.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (21,271,602 samples, 0.28%)</title><rect x="51.3826%" y="357" width="0.2813%" height="15" fill="rgb(229,93,14)" fg:x="3885089839" fg:w="21271602"/><text x="51.6326%" y="367.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (21,271,602 samples, 0.28%)</title><rect x="51.3826%" y="341" width="0.2813%" height="15" fill="rgb(209,67,49)" fg:x="3885089839" fg:w="21271602"/><text x="51.6326%" y="351.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (21,271,602 samples, 0.28%)</title><rect x="51.3826%" y="325" width="0.2813%" height="15" fill="rgb(213,87,29)" fg:x="3885089839" fg:w="21271602"/><text x="51.6326%" y="335.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (21,271,602 samples, 0.28%)</title><rect x="51.3826%" y="309" width="0.2813%" height="15" fill="rgb(205,151,52)" fg:x="3885089839" fg:w="21271602"/><text x="51.6326%" y="319.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (12,023,704 samples, 0.16%)</title><rect x="51.5049%" y="293" width="0.1590%" height="15" fill="rgb(253,215,39)" fg:x="3894337737" fg:w="12023704"/><text x="51.7549%" y="303.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (12,023,704 samples, 0.16%)</title><rect x="51.5049%" y="277" width="0.1590%" height="15" fill="rgb(221,220,41)" fg:x="3894337737" fg:w="12023704"/><text x="51.7549%" y="287.50"></text></g><g><title>[unknown] (2,267,782 samples, 0.03%)</title><rect x="51.6340%" y="261" width="0.0300%" height="15" fill="rgb(218,133,21)" fg:x="3904093659" fg:w="2267782"/><text x="51.8840%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,160,155 samples, 0.09%)</title><rect x="51.7031%" y="325" width="0.0947%" height="15" fill="rgb(221,193,43)" fg:x="3909320703" fg:w="7160155"/><text x="51.9531%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7,160,155 samples, 0.09%)</title><rect x="51.7031%" y="309" width="0.0947%" height="15" fill="rgb(240,128,52)" fg:x="3909320703" fg:w="7160155"/><text x="51.9531%" y="319.50"></text></g><g><title>profile::internal::sad_converged (13,244,616 samples, 0.18%)</title><rect x="51.6640%" y="373" width="0.1752%" height="15" fill="rgb(253,114,12)" fg:x="3906361441" fg:w="13244616"/><text x="51.9140%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (13,244,616 samples, 0.18%)</title><rect x="51.6640%" y="357" width="0.1752%" height="15" fill="rgb(215,223,47)" fg:x="3906361441" fg:w="13244616"/><text x="51.9140%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13,244,616 samples, 0.18%)</title><rect x="51.6640%" y="341" width="0.1752%" height="15" fill="rgb(248,225,23)" fg:x="3906361441" fg:w="13244616"/><text x="51.9140%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3,125,199 samples, 0.04%)</title><rect x="51.7978%" y="325" width="0.0413%" height="15" fill="rgb(250,108,0)" fg:x="3916480858" fg:w="3125199"/><text x="52.0478%" y="335.50"></text></g><g><title>profile::internal::sad_converged::_{{closure}} (3,125,199 samples, 0.04%)</title><rect x="51.7978%" y="309" width="0.0413%" height="15" fill="rgb(228,208,7)" fg:x="3916480858" fg:w="3125199"/><text x="52.0478%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (98,483,537 samples, 1.30%)</title><rect x="51.8391%" y="309" width="1.3025%" height="15" fill="rgb(244,45,10)" fg:x="3919606057" fg:w="98483537"/><text x="52.0891%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (98,483,537 samples, 1.30%)</title><rect x="51.8391%" y="293" width="1.3025%" height="15" fill="rgb(207,125,25)" fg:x="3919606057" fg:w="98483537"/><text x="52.0891%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (98,483,537 samples, 1.30%)</title><rect x="51.8391%" y="277" width="1.3025%" height="15" fill="rgb(210,195,18)" fg:x="3919606057" fg:w="98483537"/><text x="52.0891%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (98,483,537 samples, 1.30%)</title><rect x="51.8391%" y="261" width="1.3025%" height="15" fill="rgb(249,80,12)" fg:x="3919606057" fg:w="98483537"/><text x="52.0891%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (67,740,434 samples, 0.90%)</title><rect x="57.4649%" y="277" width="0.8959%" height="15" fill="rgb(221,65,9)" fg:x="4344979842" fg:w="67740434"/><text x="57.7149%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (67,740,434 samples, 0.90%)</title><rect x="57.4649%" y="261" width="0.8959%" height="15" fill="rgb(235,49,36)" fg:x="4344979842" fg:w="67740434"/><text x="57.7149%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (67,740,434 samples, 0.90%)</title><rect x="57.4649%" y="245" width="0.8959%" height="15" fill="rgb(225,32,20)" fg:x="4344979842" fg:w="67740434"/><text x="57.7149%" y="255.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (4,262,022,857 samples, 56.37%)</title><rect x="2.0160%" y="917" width="56.3678%" height="15" fill="rgb(215,141,46)" fg:x="152432475" fg:w="4262022857"/><text x="2.2660%" y="927.50">rayon_core::join::join_context::call_b::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4,262,022,857 samples, 56.37%)</title><rect x="2.0160%" y="901" width="56.3678%" height="15" fill="rgb(250,160,47)" fg:x="152432475" fg:w="4262022857"/><text x="2.2660%" y="911.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,262,022,857 samples, 56.37%)</title><rect x="2.0160%" y="885" width="56.3678%" height="15" fill="rgb(216,222,40)" fg:x="152432475" fg:w="4262022857"/><text x="2.2660%" y="895.50">rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>rayon_core::join::join_context (3,006,026,756 samples, 39.76%)</title><rect x="18.6273%" y="869" width="39.7565%" height="15" fill="rgb(234,217,39)" fg:x="1408428576" fg:w="3006026756"/><text x="18.8773%" y="879.50">rayon_core::join::join_context</text></g><g><title>rayon_core::registry::in_worker (3,006,026,756 samples, 39.76%)</title><rect x="18.6273%" y="853" width="39.7565%" height="15" fill="rgb(207,178,40)" fg:x="1408428576" fg:w="3006026756"/><text x="18.8773%" y="863.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::join::join_context::_{{closure}} (3,006,026,756 samples, 39.76%)</title><rect x="18.6273%" y="837" width="39.7565%" height="15" fill="rgb(221,136,13)" fg:x="1408428576" fg:w="3006026756"/><text x="18.8773%" y="847.50">rayon_core::join::join_context::_{{closure}}</text></g><g><title>rayon_core::unwind::halt_unwinding (2,950,162,702 samples, 39.02%)</title><rect x="19.3661%" y="821" width="39.0177%" height="15" fill="rgb(249,199,10)" fg:x="1464292630" fg:w="2950162702"/><text x="19.6161%" y="831.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (2,950,162,702 samples, 39.02%)</title><rect x="19.3661%" y="805" width="39.0177%" height="15" fill="rgb(249,222,13)" fg:x="1464292630" fg:w="2950162702"/><text x="19.6161%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,950,162,702 samples, 39.02%)</title><rect x="19.3661%" y="789" width="39.0177%" height="15" fill="rgb(244,185,38)" fg:x="1464292630" fg:w="2950162702"/><text x="19.6161%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,950,162,702 samples, 39.02%)</title><rect x="19.3661%" y="773" width="39.0177%" height="15" fill="rgb(236,202,9)" fg:x="1464292630" fg:w="2950162702"/><text x="19.6161%" y="783.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,950,162,702 samples, 39.02%)</title><rect x="19.3661%" y="757" width="39.0177%" height="15" fill="rgb(250,229,37)" fg:x="1464292630" fg:w="2950162702"/><text x="19.6161%" y="767.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::fun..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (2,950,162,702 samples, 39.02%)</title><rect x="19.3661%" y="741" width="39.0177%" height="15" fill="rgb(206,174,23)" fg:x="1464292630" fg:w="2950162702"/><text x="19.6161%" y="751.50">rayon_core::join::join_context::call_a::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2,950,162,702 samples, 39.02%)</title><rect x="19.3661%" y="725" width="39.0177%" height="15" fill="rgb(211,33,43)" fg:x="1464292630" fg:w="2950162702"/><text x="19.6161%" y="735.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{clos..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2,950,162,702 samples, 39.02%)</title><rect x="19.3661%" y="709" width="39.0177%" height="15" fill="rgb(245,58,50)" fg:x="1464292630" fg:w="2950162702"/><text x="19.6161%" y="719.50">rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>rayon_core::join::join_context (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="693" width="8.0523%" height="15" fill="rgb(244,68,36)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="703.50">rayon_core:..</text></g><g><title>rayon_core::registry::in_worker (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="677" width="8.0523%" height="15" fill="rgb(232,229,15)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="687.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="661" width="8.0523%" height="15" fill="rgb(254,30,23)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="671.50">rayon_core:..</text></g><g><title>rayon_core::unwind::halt_unwinding (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="645" width="8.0523%" height="15" fill="rgb(235,160,14)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="655.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="629" width="8.0523%" height="15" fill="rgb(212,155,44)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="639.50">std::panic:..</text></g><g><title>std::panicking::try (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="613" width="8.0523%" height="15" fill="rgb(226,2,50)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="623.50">std::panick..</text></g><g><title>std::panicking::try::do_call (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="597" width="8.0523%" height="15" fill="rgb(234,177,6)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="607.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="581" width="8.0523%" height="15" fill="rgb(217,24,9)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="591.50">&lt;core::pani..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="565" width="8.0523%" height="15" fill="rgb(220,13,46)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="575.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="549" width="8.0523%" height="15" fill="rgb(239,221,27)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="559.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="533" width="8.0523%" height="15" fill="rgb(222,198,25)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="543.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="517" width="8.0523%" height="15" fill="rgb(211,99,13)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="527.50">rayon::iter..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="501" width="8.0523%" height="15" fill="rgb(232,111,31)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="511.50">&lt;rayon::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="485" width="8.0523%" height="15" fill="rgb(245,82,37)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="495.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="469" width="8.0523%" height="15" fill="rgb(227,149,46)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="479.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="453" width="8.0523%" height="15" fill="rgb(218,36,50)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="463.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="437" width="8.0523%" height="15" fill="rgb(226,80,48)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="447.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="421" width="8.0523%" height="15" fill="rgb(238,224,15)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="431.50">core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="405" width="8.0523%" height="15" fill="rgb(241,136,10)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="415.50">core::ops::..</text></g><g><title>profile::demean_impl::_{{closure}} (608,840,579 samples, 8.05%)</title><rect x="50.3315%" y="389" width="8.0523%" height="15" fill="rgb(208,32,45)" fg:x="3805614753" fg:w="608840579"/><text x="50.5815%" y="399.50">profile::de..</text></g><g><title>profile::internal::subtract_weighted_group_mean (494,849,275 samples, 6.54%)</title><rect x="51.8391%" y="373" width="6.5447%" height="15" fill="rgb(207,135,9)" fg:x="3919606057" fg:w="494849275"/><text x="52.0891%" y="383.50">profile::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (494,849,275 samples, 6.54%)</title><rect x="51.8391%" y="357" width="6.5447%" height="15" fill="rgb(206,86,44)" fg:x="3919606057" fg:w="494849275"/><text x="52.0891%" y="367.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (494,849,275 samples, 6.54%)</title><rect x="51.8391%" y="341" width="6.5447%" height="15" fill="rgb(245,177,15)" fg:x="3919606057" fg:w="494849275"/><text x="52.0891%" y="351.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (494,849,275 samples, 6.54%)</title><rect x="51.8391%" y="325" width="6.5447%" height="15" fill="rgb(206,64,50)" fg:x="3919606057" fg:w="494849275"/><text x="52.0891%" y="335.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (396,365,738 samples, 5.24%)</title><rect x="53.1416%" y="309" width="5.2422%" height="15" fill="rgb(234,36,40)" fg:x="4018089594" fg:w="396365738"/><text x="53.3916%" y="319.50">core::..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (396,365,738 samples, 5.24%)</title><rect x="53.1416%" y="293" width="5.2422%" height="15" fill="rgb(213,64,8)" fg:x="4018089594" fg:w="396365738"/><text x="53.3916%" y="303.50">profil..</text></g><g><title>[unknown] (1,735,056 samples, 0.02%)</title><rect x="58.3609%" y="277" width="0.0229%" height="15" fill="rgb(210,75,36)" fg:x="4412720276" fg:w="1735056"/><text x="58.6109%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,147,740 samples, 0.04%)</title><rect x="58.3838%" y="101" width="0.0416%" height="15" fill="rgb(229,88,21)" fg:x="4414455332" fg:w="3147740"/><text x="58.6338%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (3,147,740 samples, 0.04%)</title><rect x="58.3838%" y="85" width="0.0416%" height="15" fill="rgb(252,204,47)" fg:x="4414455332" fg:w="3147740"/><text x="58.6338%" y="95.50"></text></g><g><title>core::ptr::write (3,147,740 samples, 0.04%)</title><rect x="58.3838%" y="69" width="0.0416%" height="15" fill="rgb(208,77,27)" fg:x="4414455332" fg:w="3147740"/><text x="58.6338%" y="79.50"></text></g><g><title>[unknown] (1,096,580 samples, 0.01%)</title><rect x="58.4109%" y="53" width="0.0145%" height="15" fill="rgb(221,76,26)" fg:x="4416506492" fg:w="1096580"/><text x="58.6609%" y="63.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8,055,732 samples, 0.11%)</title><rect x="58.3838%" y="117" width="0.1065%" height="15" fill="rgb(225,139,18)" fg:x="4414455332" fg:w="8055732"/><text x="58.6338%" y="127.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (4,907,992 samples, 0.06%)</title><rect x="58.4254%" y="101" width="0.0649%" height="15" fill="rgb(230,137,11)" fg:x="4417603072" fg:w="4907992"/><text x="58.6754%" y="111.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,162,903 samples, 0.13%)</title><rect x="58.3838%" y="133" width="0.1344%" height="15" fill="rgb(212,28,1)" fg:x="4414455332" fg:w="10162903"/><text x="58.6338%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2,107,171 samples, 0.03%)</title><rect x="58.4903%" y="117" width="0.0279%" height="15" fill="rgb(248,164,17)" fg:x="4422511064" fg:w="2107171"/><text x="58.7403%" y="127.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (4,282,694 samples, 0.06%)</title><rect x="58.5182%" y="69" width="0.0566%" height="15" fill="rgb(222,171,42)" fg:x="4424618235" fg:w="4282694"/><text x="58.7682%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (76,573,456 samples, 1.01%)</title><rect x="58.5182%" y="101" width="1.0127%" height="15" fill="rgb(243,84,45)" fg:x="4424618235" fg:w="76573456"/><text x="58.7682%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (76,573,456 samples, 1.01%)</title><rect x="58.5182%" y="85" width="1.0127%" height="15" fill="rgb(252,49,23)" fg:x="4424618235" fg:w="76573456"/><text x="58.7682%" y="95.50"></text></g><g><title>core::ptr::write (72,290,762 samples, 0.96%)</title><rect x="58.5748%" y="69" width="0.9561%" height="15" fill="rgb(215,19,7)" fg:x="4428900929" fg:w="72290762"/><text x="58.8248%" y="79.50"></text></g><g><title>[unknown] (2,659,937 samples, 0.04%)</title><rect x="59.4958%" y="53" width="0.0352%" height="15" fill="rgb(238,81,41)" fg:x="4498531754" fg:w="2659937"/><text x="59.7458%" y="63.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (3,939,074 samples, 0.05%)</title><rect x="59.5722%" y="69" width="0.0521%" height="15" fill="rgb(210,199,37)" fg:x="4504313493" fg:w="3939074"/><text x="59.8222%" y="79.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (3,939,074 samples, 0.05%)</title><rect x="59.5722%" y="53" width="0.0521%" height="15" fill="rgb(244,192,49)" fg:x="4504313493" fg:w="3939074"/><text x="59.8222%" y="63.50"></text></g><g><title>ndarray::dimension::stride_offset (1,671,987 samples, 0.02%)</title><rect x="59.6022%" y="37" width="0.0221%" height="15" fill="rgb(226,211,11)" fg:x="4506580580" fg:w="1671987"/><text x="59.8522%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (94,935,443 samples, 1.26%)</title><rect x="58.3838%" y="261" width="1.2556%" height="15" fill="rgb(236,162,54)" fg:x="4414455332" fg:w="94935443"/><text x="58.6338%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (94,935,443 samples, 1.26%)</title><rect x="58.3838%" y="245" width="1.2556%" height="15" fill="rgb(220,229,9)" fg:x="4414455332" fg:w="94935443"/><text x="58.6338%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (94,935,443 samples, 1.26%)</title><rect x="58.3838%" y="229" width="1.2556%" height="15" fill="rgb(250,87,22)" fg:x="4414455332" fg:w="94935443"/><text x="58.6338%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (94,935,443 samples, 1.26%)</title><rect x="58.3838%" y="213" width="1.2556%" height="15" fill="rgb(239,43,17)" fg:x="4414455332" fg:w="94935443"/><text x="58.6338%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (94,935,443 samples, 1.26%)</title><rect x="58.3838%" y="197" width="1.2556%" height="15" fill="rgb(231,177,25)" fg:x="4414455332" fg:w="94935443"/><text x="58.6338%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (94,935,443 samples, 1.26%)</title><rect x="58.3838%" y="181" width="1.2556%" height="15" fill="rgb(219,179,1)" fg:x="4414455332" fg:w="94935443"/><text x="58.6338%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (94,935,443 samples, 1.26%)</title><rect x="58.3838%" y="165" width="1.2556%" height="15" fill="rgb(238,219,53)" fg:x="4414455332" fg:w="94935443"/><text x="58.6338%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (94,935,443 samples, 1.26%)</title><rect x="58.3838%" y="149" width="1.2556%" height="15" fill="rgb(232,167,36)" fg:x="4414455332" fg:w="94935443"/><text x="58.6338%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (84,772,540 samples, 1.12%)</title><rect x="58.5182%" y="133" width="1.1212%" height="15" fill="rgb(244,19,51)" fg:x="4424618235" fg:w="84772540"/><text x="58.7682%" y="143.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (84,772,540 samples, 1.12%)</title><rect x="58.5182%" y="117" width="1.1212%" height="15" fill="rgb(224,6,22)" fg:x="4424618235" fg:w="84772540"/><text x="58.7682%" y="127.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (8,199,084 samples, 0.11%)</title><rect x="59.5309%" y="101" width="0.1084%" height="15" fill="rgb(224,145,5)" fg:x="4501191691" fg:w="8199084"/><text x="59.7809%" y="111.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (5,077,282 samples, 0.07%)</title><rect x="59.5722%" y="85" width="0.0672%" height="15" fill="rgb(234,130,49)" fg:x="4504313493" fg:w="5077282"/><text x="59.8222%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1,138,208 samples, 0.02%)</title><rect x="59.6243%" y="69" width="0.0151%" height="15" fill="rgb(254,6,2)" fg:x="4508252567" fg:w="1138208"/><text x="59.8743%" y="79.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (22,707,413 samples, 0.30%)</title><rect x="59.6394%" y="261" width="0.3003%" height="15" fill="rgb(208,96,46)" fg:x="4509390775" fg:w="22707413"/><text x="59.8894%" y="271.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (22,707,413 samples, 0.30%)</title><rect x="59.6394%" y="245" width="0.3003%" height="15" fill="rgb(239,3,39)" fg:x="4509390775" fg:w="22707413"/><text x="59.8894%" y="255.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (22,707,413 samples, 0.30%)</title><rect x="59.6394%" y="229" width="0.3003%" height="15" fill="rgb(233,210,1)" fg:x="4509390775" fg:w="22707413"/><text x="59.8894%" y="239.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (22,707,413 samples, 0.30%)</title><rect x="59.6394%" y="213" width="0.3003%" height="15" fill="rgb(244,137,37)" fg:x="4509390775" fg:w="22707413"/><text x="59.8894%" y="223.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (22,707,413 samples, 0.30%)</title><rect x="59.6394%" y="197" width="0.3003%" height="15" fill="rgb(240,136,2)" fg:x="4509390775" fg:w="22707413"/><text x="59.8894%" y="207.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (17,348,037 samples, 0.23%)</title><rect x="59.7103%" y="181" width="0.2294%" height="15" fill="rgb(239,18,37)" fg:x="4514750151" fg:w="17348037"/><text x="59.9603%" y="191.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (17,348,037 samples, 0.23%)</title><rect x="59.7103%" y="165" width="0.2294%" height="15" fill="rgb(218,185,22)" fg:x="4514750151" fg:w="17348037"/><text x="59.9603%" y="175.50"></text></g><g><title>[unknown] (8,193,821 samples, 0.11%)</title><rect x="59.8313%" y="149" width="0.1084%" height="15" fill="rgb(225,218,4)" fg:x="4523904367" fg:w="8193821"/><text x="60.0813%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,264,168 samples, 0.12%)</title><rect x="60.0314%" y="213" width="0.1225%" height="15" fill="rgb(230,182,32)" fg:x="4539035316" fg:w="9264168"/><text x="60.2814%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (9,264,168 samples, 0.12%)</title><rect x="60.0314%" y="197" width="0.1225%" height="15" fill="rgb(242,56,43)" fg:x="4539035316" fg:w="9264168"/><text x="60.2814%" y="207.50"></text></g><g><title>profile::internal::sad_converged (18,500,163 samples, 0.24%)</title><rect x="59.9397%" y="261" width="0.2447%" height="15" fill="rgb(233,99,24)" fg:x="4532098188" fg:w="18500163"/><text x="60.1897%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18,500,163 samples, 0.24%)</title><rect x="59.9397%" y="245" width="0.2447%" height="15" fill="rgb(234,209,42)" fg:x="4532098188" fg:w="18500163"/><text x="60.1897%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18,500,163 samples, 0.24%)</title><rect x="59.9397%" y="229" width="0.2447%" height="15" fill="rgb(227,7,12)" fg:x="4532098188" fg:w="18500163"/><text x="60.1897%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2,298,867 samples, 0.03%)</title><rect x="60.1540%" y="213" width="0.0304%" height="15" fill="rgb(245,203,43)" fg:x="4548299484" fg:w="2298867"/><text x="60.4040%" y="223.50"></text></g><g><title>profile::internal::sad_converged::_{{closure}} (2,298,867 samples, 0.03%)</title><rect x="60.1540%" y="197" width="0.0304%" height="15" fill="rgb(238,205,33)" fg:x="4548299484" fg:w="2298867"/><text x="60.4040%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="245" width="0.0243%" height="15" fill="rgb(231,56,7)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="229" width="0.0243%" height="15" fill="rgb(244,186,29)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="213" width="0.0243%" height="15" fill="rgb(234,111,31)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="197" width="0.0243%" height="15" fill="rgb(241,149,10)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="181" width="0.0243%" height="15" fill="rgb(249,206,44)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="165" width="0.0243%" height="15" fill="rgb(251,153,30)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="149" width="0.0243%" height="15" fill="rgb(239,152,38)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="133" width="0.0243%" height="15" fill="rgb(249,139,47)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="117" width="0.0243%" height="15" fill="rgb(244,64,35)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="101" width="0.0243%" height="15" fill="rgb(216,46,15)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="85" width="0.0243%" height="15" fill="rgb(250,74,19)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="95.50"></text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (1,833,927 samples, 0.02%)</title><rect x="60.1844%" y="69" width="0.0243%" height="15" fill="rgb(249,42,33)" fg:x="4550598351" fg:w="1833927"/><text x="60.4344%" y="79.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (77,162,950 samples, 1.02%)</title><rect x="60.2086%" y="165" width="1.0205%" height="15" fill="rgb(242,149,17)" fg:x="4552432278" fg:w="77162950"/><text x="60.4586%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (77,162,950 samples, 1.02%)</title><rect x="60.2086%" y="149" width="1.0205%" height="15" fill="rgb(244,29,21)" fg:x="4552432278" fg:w="77162950"/><text x="60.4586%" y="159.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (81,052,872 samples, 1.07%)</title><rect x="60.2086%" y="197" width="1.0720%" height="15" fill="rgb(220,130,37)" fg:x="4552432278" fg:w="81052872"/><text x="60.4586%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (81,052,872 samples, 1.07%)</title><rect x="60.2086%" y="181" width="1.0720%" height="15" fill="rgb(211,67,2)" fg:x="4552432278" fg:w="81052872"/><text x="60.4586%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3,889,922 samples, 0.05%)</title><rect x="61.2292%" y="165" width="0.0514%" height="15" fill="rgb(235,68,52)" fg:x="4629595228" fg:w="3889922"/><text x="61.4792%" y="175.50"></text></g><g><title>[libc.so.6] (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1365" width="64.1358%" height="15" fill="rgb(246,142,3)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1375.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1349" width="64.1358%" height="15" fill="rgb(241,25,7)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1359.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1333" width="64.1358%" height="15" fill="rgb(242,119,39)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1343.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1317" width="64.1358%" height="15" fill="rgb(241,98,45)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1327.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1301" width="64.1358%" height="15" fill="rgb(254,28,30)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1311.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1285" width="64.1358%" height="15" fill="rgb(241,142,54)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1295.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1269" width="64.1358%" height="15" fill="rgb(222,85,15)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1279.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1253" width="64.1358%" height="15" fill="rgb(210,85,47)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1263.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1237" width="64.1358%" height="15" fill="rgb(224,206,25)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1247.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1221" width="64.1358%" height="15" fill="rgb(243,201,19)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1231.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1205" width="64.1358%" height="15" fill="rgb(236,59,4)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1215.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1189" width="64.1358%" height="15" fill="rgb(254,179,45)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1199.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1173" width="64.1358%" height="15" fill="rgb(226,14,10)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1183.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}}</text></g><g><title>rayon_core::registry::ThreadBuilder::run (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1157" width="64.1358%" height="15" fill="rgb(244,27,41)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1167.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1141" width="64.1358%" height="15" fill="rgb(235,35,32)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1151.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1125" width="64.1358%" height="15" fill="rgb(218,68,31)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1135.50">rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1109" width="64.1358%" height="15" fill="rgb(207,120,37)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1119.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1093" width="64.1358%" height="15" fill="rgb(227,98,0)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1103.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::registry::WorkerThread::execute (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1077" width="64.1358%" height="15" fill="rgb(207,7,3)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1087.50">rayon_core::registry::WorkerThread::execute</text></g><g><title>rayon_core::job::JobRef::execute (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1061" width="64.1358%" height="15" fill="rgb(206,98,19)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1071.50">rayon_core::job::JobRef::execute</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1045" width="64.1358%" height="15" fill="rgb(217,5,26)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1055.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1029" width="64.1358%" height="15" fill="rgb(235,190,38)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1039.50">rayon_core::job::JobResult&lt;T&gt;::call</text></g><g><title>rayon_core::unwind::halt_unwinding (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="1013" width="64.1358%" height="15" fill="rgb(247,86,24)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1023.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="997" width="64.1358%" height="15" fill="rgb(205,101,16)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="981" width="64.1358%" height="15" fill="rgb(246,168,33)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="965" width="64.1358%" height="15" fill="rgb(231,114,1)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="975.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="949" width="64.1358%" height="15" fill="rgb(207,184,53)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="959.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (4,849,368,772 samples, 64.14%)</title><rect x="2.0160%" y="933" width="64.1358%" height="15" fill="rgb(224,95,51)" fg:x="152432475" fg:w="4849368772"/><text x="2.2660%" y="943.50">rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}}</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="917" width="7.7680%" height="15" fill="rgb(212,188,45)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="927.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="901" width="7.7680%" height="15" fill="rgb(223,154,38)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="911.50">rayon_core:..</text></g><g><title>rayon_core::unwind::halt_unwinding (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="885" width="7.7680%" height="15" fill="rgb(251,22,52)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="895.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="869" width="7.7680%" height="15" fill="rgb(229,209,22)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="879.50">std::panic:..</text></g><g><title>std::panicking::try (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="853" width="7.7680%" height="15" fill="rgb(234,138,34)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="863.50">std::panick..</text></g><g><title>std::panicking::try::do_call (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="837" width="7.7680%" height="15" fill="rgb(212,95,11)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="847.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="821" width="7.7680%" height="15" fill="rgb(240,179,47)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="831.50">&lt;core::pani..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="805" width="7.7680%" height="15" fill="rgb(240,163,11)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="815.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="789" width="7.7680%" height="15" fill="rgb(236,37,12)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="799.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="773" width="7.7680%" height="15" fill="rgb(232,164,16)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="783.50">rayon::iter..</text></g><g><title>rayon_core::join::join_context (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="757" width="7.7680%" height="15" fill="rgb(244,205,15)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="767.50">rayon_core:..</text></g><g><title>rayon_core::registry::in_worker (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="741" width="7.7680%" height="15" fill="rgb(223,117,47)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="751.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="725" width="7.7680%" height="15" fill="rgb(244,107,35)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="735.50">rayon_core:..</text></g><g><title>rayon_core::unwind::halt_unwinding (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="709" width="7.7680%" height="15" fill="rgb(205,140,8)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="719.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="693" width="7.7680%" height="15" fill="rgb(228,84,46)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="703.50">std::panic:..</text></g><g><title>std::panicking::try (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="677" width="7.7680%" height="15" fill="rgb(254,188,9)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="687.50">std::panick..</text></g><g><title>std::panicking::try::do_call (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="661" width="7.7680%" height="15" fill="rgb(206,112,54)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="671.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="645" width="7.7680%" height="15" fill="rgb(216,84,49)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="655.50">&lt;core::pani..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="629" width="7.7680%" height="15" fill="rgb(214,194,35)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="639.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="613" width="7.7680%" height="15" fill="rgb(249,28,3)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="623.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="597" width="7.7680%" height="15" fill="rgb(222,56,52)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="607.50">rayon::iter..</text></g><g><title>rayon_core::join::join_context (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="581" width="7.7680%" height="15" fill="rgb(245,217,50)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="591.50">rayon_core:..</text></g><g><title>rayon_core::registry::in_worker (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="565" width="7.7680%" height="15" fill="rgb(213,201,24)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="575.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="549" width="7.7680%" height="15" fill="rgb(248,116,28)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="559.50">rayon_core:..</text></g><g><title>rayon_core::unwind::halt_unwinding (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="533" width="7.7680%" height="15" fill="rgb(219,72,43)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="543.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="517" width="7.7680%" height="15" fill="rgb(209,138,14)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="527.50">std::panic:..</text></g><g><title>std::panicking::try (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="501" width="7.7680%" height="15" fill="rgb(222,18,33)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="511.50">std::panick..</text></g><g><title>std::panicking::try::do_call (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="485" width="7.7680%" height="15" fill="rgb(213,199,7)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="495.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="469" width="7.7680%" height="15" fill="rgb(250,110,10)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="479.50">&lt;core::pani..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="453" width="7.7680%" height="15" fill="rgb(248,123,6)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="463.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="437" width="7.7680%" height="15" fill="rgb(206,91,31)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="447.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="421" width="7.7680%" height="15" fill="rgb(211,154,13)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="431.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="405" width="7.7680%" height="15" fill="rgb(225,148,7)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="415.50">rayon::iter..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="389" width="7.7680%" height="15" fill="rgb(220,160,43)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="399.50">&lt;rayon::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="373" width="7.7680%" height="15" fill="rgb(213,52,39)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="383.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="357" width="7.7680%" height="15" fill="rgb(243,137,7)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="367.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="341" width="7.7680%" height="15" fill="rgb(230,79,13)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="351.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="325" width="7.7680%" height="15" fill="rgb(247,105,23)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="335.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="309" width="7.7680%" height="15" fill="rgb(223,179,41)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="319.50">core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="293" width="7.7680%" height="15" fill="rgb(218,9,34)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="303.50">core::ops::..</text></g><g><title>profile::demean_impl::_{{closure}} (587,345,915 samples, 7.77%)</title><rect x="58.3838%" y="277" width="7.7680%" height="15" fill="rgb(222,106,8)" fg:x="4414455332" fg:w="587345915"/><text x="58.6338%" y="287.50">profile::de..</text></g><g><title>profile::internal::subtract_weighted_group_mean (451,202,896 samples, 5.97%)</title><rect x="60.1844%" y="261" width="5.9674%" height="15" fill="rgb(211,220,0)" fg:x="4550598351" fg:w="451202896"/><text x="60.4344%" y="271.50">profile:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (449,368,969 samples, 5.94%)</title><rect x="60.2086%" y="245" width="5.9432%" height="15" fill="rgb(229,52,16)" fg:x="4552432278" fg:w="449368969"/><text x="60.4586%" y="255.50">core::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (449,368,969 samples, 5.94%)</title><rect x="60.2086%" y="229" width="5.9432%" height="15" fill="rgb(212,155,18)" fg:x="4552432278" fg:w="449368969"/><text x="60.4586%" y="239.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (449,368,969 samples, 5.94%)</title><rect x="60.2086%" y="213" width="5.9432%" height="15" fill="rgb(242,21,14)" fg:x="4552432278" fg:w="449368969"/><text x="60.4586%" y="223.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (368,316,097 samples, 4.87%)</title><rect x="61.2806%" y="197" width="4.8712%" height="15" fill="rgb(222,19,48)" fg:x="4633485150" fg:w="368316097"/><text x="61.5306%" y="207.50">core::..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (368,316,097 samples, 4.87%)</title><rect x="61.2806%" y="181" width="4.8712%" height="15" fill="rgb(232,45,27)" fg:x="4633485150" fg:w="368316097"/><text x="61.5306%" y="191.50">profil..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (123,481,622 samples, 1.63%)</title><rect x="64.5187%" y="165" width="1.6331%" height="15" fill="rgb(249,103,42)" fg:x="4878319625" fg:w="123481622"/><text x="64.7687%" y="175.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (123,481,622 samples, 1.63%)</title><rect x="64.5187%" y="149" width="1.6331%" height="15" fill="rgb(246,81,33)" fg:x="4878319625" fg:w="123481622"/><text x="64.7687%" y="159.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (123,481,622 samples, 1.63%)</title><rect x="64.5187%" y="133" width="1.6331%" height="15" fill="rgb(252,33,42)" fg:x="4878319625" fg:w="123481622"/><text x="64.7687%" y="143.50"></text></g><g><title>[unknown] (2,467,744 samples, 0.03%)</title><rect x="66.1192%" y="117" width="0.0326%" height="15" fill="rgb(209,212,41)" fg:x="4999333503" fg:w="2467744"/><text x="66.3692%" y="127.50"></text></g><g><title>[libgcc_s.so.1] (2,534,126 samples, 0.03%)</title><rect x="66.1655%" y="1269" width="0.0335%" height="15" fill="rgb(207,154,6)" fg:x="5002837536" fg:w="2534126"/><text x="66.4155%" y="1279.50"></text></g><g><title>_Unwind_Find_FDE (1,864,642 samples, 0.02%)</title><rect x="66.1744%" y="1253" width="0.0247%" height="15" fill="rgb(223,64,47)" fg:x="5003507020" fg:w="1864642"/><text x="66.4244%" y="1263.50"></text></g><g><title>[libgcc_s.so.1] (3,500,122 samples, 0.05%)</title><rect x="66.1627%" y="1285" width="0.0463%" height="15" fill="rgb(211,161,38)" fg:x="5002624623" fg:w="3500122"/><text x="66.4127%" y="1295.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (3,699,811 samples, 0.05%)</title><rect x="66.1627%" y="1349" width="0.0489%" height="15" fill="rgb(219,138,40)" fg:x="5002624623" fg:w="3699811"/><text x="66.4127%" y="1359.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (3,699,811 samples, 0.05%)</title><rect x="66.1627%" y="1333" width="0.0489%" height="15" fill="rgb(241,228,46)" fg:x="5002624623" fg:w="3699811"/><text x="66.4127%" y="1343.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (3,699,811 samples, 0.05%)</title><rect x="66.1627%" y="1317" width="0.0489%" height="15" fill="rgb(223,209,38)" fg:x="5002624623" fg:w="3699811"/><text x="66.4127%" y="1327.50"></text></g><g><title>_Unwind_Backtrace (3,699,811 samples, 0.05%)</title><rect x="66.1627%" y="1301" width="0.0489%" height="15" fill="rgb(236,164,45)" fg:x="5002624623" fg:w="3699811"/><text x="66.4127%" y="1311.50"></text></g><g><title>[libc.so.6] (5,002,840,182 samples, 66.17%)</title><rect x="0.0531%" y="1381" width="66.1655%" height="15" fill="rgb(231,15,5)" fg:x="4012696" fg:w="5002840182"/><text x="0.3031%" y="1391.50">[libc.so.6]</text></g><g><title>perf_signal_handler (5,051,631 samples, 0.07%)</title><rect x="66.1518%" y="1365" width="0.0668%" height="15" fill="rgb(252,35,15)" fg:x="5001801247" fg:w="5051631"/><text x="66.4018%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,282,950 samples, 0.02%)</title><rect x="66.2190%" y="1365" width="0.0170%" height="15" fill="rgb(248,181,18)" fg:x="5006885105" fg:w="1282950"/><text x="66.4690%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,282,950 samples, 0.02%)</title><rect x="66.2190%" y="1349" width="0.0170%" height="15" fill="rgb(233,39,42)" fg:x="5006885105" fg:w="1282950"/><text x="66.4690%" y="1359.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,282,950 samples, 0.02%)</title><rect x="66.2190%" y="1333" width="0.0170%" height="15" fill="rgb(238,110,33)" fg:x="5006885105" fg:w="1282950"/><text x="66.4690%" y="1343.50"></text></g><g><title>alloc::alloc::realloc (1,282,950 samples, 0.02%)</title><rect x="66.2190%" y="1317" width="0.0170%" height="15" fill="rgb(233,195,10)" fg:x="5006885105" fg:w="1282950"/><text x="66.4690%" y="1327.50"></text></g><g><title>__rustc::__rdl_realloc (1,282,950 samples, 0.02%)</title><rect x="66.2190%" y="1301" width="0.0170%" height="15" fill="rgb(254,105,3)" fg:x="5006885105" fg:w="1282950"/><text x="66.4690%" y="1311.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,282,950 samples, 0.02%)</title><rect x="66.2190%" y="1285" width="0.0170%" height="15" fill="rgb(221,225,9)" fg:x="5006885105" fg:w="1282950"/><text x="66.4690%" y="1295.50"></text></g><g><title>realloc (1,282,950 samples, 0.02%)</title><rect x="66.2190%" y="1269" width="0.0170%" height="15" fill="rgb(224,227,45)" fg:x="5006885105" fg:w="1282950"/><text x="66.4690%" y="1279.50"></text></g><g><title>[libc.so.6] (1,282,950 samples, 0.02%)</title><rect x="66.2190%" y="1253" width="0.0170%" height="15" fill="rgb(229,198,43)" fg:x="5006885105" fg:w="1282950"/><text x="66.4690%" y="1263.50"></text></g><g><title>[libc.so.6] (1,155,263 samples, 0.02%)</title><rect x="66.2207%" y="1237" width="0.0153%" height="15" fill="rgb(206,209,35)" fg:x="5007012792" fg:w="1155263"/><text x="66.4707%" y="1247.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1205" width="0.0290%" height="15" fill="rgb(245,195,53)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1189" width="0.0290%" height="15" fill="rgb(240,92,26)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1173" width="0.0290%" height="15" fill="rgb(207,40,23)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1157" width="0.0290%" height="15" fill="rgb(223,111,35)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1141" width="0.0290%" height="15" fill="rgb(229,147,28)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1125" width="0.0290%" height="15" fill="rgb(211,29,28)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1135.50"></text></g><g><title>__rustc::__rdl_alloc (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1109" width="0.0290%" height="15" fill="rgb(228,72,33)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1119.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1093" width="0.0290%" height="15" fill="rgb(205,214,31)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1103.50"></text></g><g><title>malloc (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1077" width="0.0290%" height="15" fill="rgb(224,111,15)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1087.50"></text></g><g><title>[libc.so.6] (2,196,167 samples, 0.03%)</title><rect x="66.2541%" y="1061" width="0.0290%" height="15" fill="rgb(253,21,26)" fg:x="5009533607" fg:w="2196167"/><text x="66.5041%" y="1071.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1365" width="0.0333%" height="15" fill="rgb(245,139,43)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1375.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1349" width="0.0333%" height="15" fill="rgb(252,170,7)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1333" width="0.0333%" height="15" fill="rgb(231,118,14)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1317" width="0.0333%" height="15" fill="rgb(238,83,0)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1301" width="0.0333%" height="15" fill="rgb(221,39,39)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1285" width="0.0333%" height="15" fill="rgb(222,119,46)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1295.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1269" width="0.0333%" height="15" fill="rgb(222,165,49)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1279.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1253" width="0.0333%" height="15" fill="rgb(219,113,52)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1263.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1237" width="0.0333%" height="15" fill="rgb(214,7,15)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (2,515,468 samples, 0.03%)</title><rect x="66.2541%" y="1221" width="0.0333%" height="15" fill="rgb(235,32,4)" fg:x="5009533607" fg:w="2515468"/><text x="66.5041%" y="1231.50"></text></g><g><title>[libgcc_s.so.1] (942,346 samples, 0.01%)</title><rect x="66.2967%" y="1189" width="0.0125%" height="15" fill="rgb(238,90,54)" fg:x="5012755246" fg:w="942346"/><text x="66.5467%" y="1199.50"></text></g><g><title>[libgcc_s.so.1] (942,346 samples, 0.01%)</title><rect x="66.2967%" y="1173" width="0.0125%" height="15" fill="rgb(213,208,19)" fg:x="5012755246" fg:w="942346"/><text x="66.5467%" y="1183.50"></text></g><g><title>[libc.so.6] (2,022,846 samples, 0.03%)</title><rect x="66.2873%" y="1285" width="0.0268%" height="15" fill="rgb(233,156,4)" fg:x="5012049075" fg:w="2022846"/><text x="66.5373%" y="1295.50"></text></g><g><title>perf_signal_handler (1,316,675 samples, 0.02%)</title><rect x="66.2967%" y="1269" width="0.0174%" height="15" fill="rgb(207,194,5)" fg:x="5012755246" fg:w="1316675"/><text x="66.5467%" y="1279.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1,316,675 samples, 0.02%)</title><rect x="66.2967%" y="1253" width="0.0174%" height="15" fill="rgb(206,111,30)" fg:x="5012755246" fg:w="1316675"/><text x="66.5467%" y="1263.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1,316,675 samples, 0.02%)</title><rect x="66.2967%" y="1237" width="0.0174%" height="15" fill="rgb(243,70,54)" fg:x="5012755246" fg:w="1316675"/><text x="66.5467%" y="1247.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1,316,675 samples, 0.02%)</title><rect x="66.2967%" y="1221" width="0.0174%" height="15" fill="rgb(242,28,8)" fg:x="5012755246" fg:w="1316675"/><text x="66.5467%" y="1231.50"></text></g><g><title>_Unwind_Backtrace (1,316,675 samples, 0.02%)</title><rect x="66.2967%" y="1205" width="0.0174%" height="15" fill="rgb(219,106,18)" fg:x="5012755246" fg:w="1316675"/><text x="66.5467%" y="1215.50"></text></g><g><title>[unknown] (11,427,132 samples, 0.15%)</title><rect x="66.2186%" y="1381" width="0.1511%" height="15" fill="rgb(244,222,10)" fg:x="5006852878" fg:w="11427132"/><text x="66.4686%" y="1391.50"></text></g><g><title>std::io::Write::write_all (6,230,935 samples, 0.08%)</title><rect x="66.2873%" y="1365" width="0.0824%" height="15" fill="rgb(236,179,52)" fg:x="5012049075" fg:w="6230935"/><text x="66.5373%" y="1375.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (6,230,935 samples, 0.08%)</title><rect x="66.2873%" y="1349" width="0.0824%" height="15" fill="rgb(213,23,39)" fg:x="5012049075" fg:w="6230935"/><text x="66.5373%" y="1359.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (6,230,935 samples, 0.08%)</title><rect x="66.2873%" y="1333" width="0.0824%" height="15" fill="rgb(238,48,10)" fg:x="5012049075" fg:w="6230935"/><text x="66.5373%" y="1343.50"></text></g><g><title>std::sys::fs::unix::File::write (6,230,935 samples, 0.08%)</title><rect x="66.2873%" y="1317" width="0.0824%" height="15" fill="rgb(251,196,23)" fg:x="5012049075" fg:w="6230935"/><text x="66.5373%" y="1327.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (6,230,935 samples, 0.08%)</title><rect x="66.2873%" y="1301" width="0.0824%" height="15" fill="rgb(250,152,24)" fg:x="5012049075" fg:w="6230935"/><text x="66.5373%" y="1311.50"></text></g><g><title>write (4,208,089 samples, 0.06%)</title><rect x="66.3141%" y="1285" width="0.0557%" height="15" fill="rgb(209,150,17)" fg:x="5014071921" fg:w="4208089"/><text x="66.5641%" y="1295.50"></text></g><g><title>__errno_location (2,046,786 samples, 0.03%)</title><rect x="66.3697%" y="1381" width="0.0271%" height="15" fill="rgb(234,202,34)" fg:x="5018280010" fg:w="2046786"/><text x="66.6197%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Collector&lt;pprof::frames::UnresolvedFrames&gt;&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1205" width="0.1139%" height="15" fill="rgb(253,148,53)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::HashCounter&lt;pprof::frames::UnresolvedFrames&gt;&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1189" width="0.1139%" height="15" fill="rgb(218,129,16)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt;&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1173" width="0.1139%" height="15" fill="rgb(216,85,19)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1157" width="0.1139%" height="15" fill="rgb(235,228,7)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1141" width="0.1139%" height="15" fill="rgb(245,175,0)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt;&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1125" width="0.1139%" height="15" fill="rgb(208,168,36)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1109" width="0.1139%" height="15" fill="rgb(246,171,24)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1093" width="0.1139%" height="15" fill="rgb(215,142,24)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::frames::UnresolvedFrames&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1077" width="0.1139%" height="15" fill="rgb(250,187,7)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[backtrace::backtrace::Frame: 128]&gt;&gt; (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1061" width="0.1139%" height="15" fill="rgb(228,66,33)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1071.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (8,614,580 samples, 0.11%)</title><rect x="66.4034%" y="1045" width="0.1139%" height="15" fill="rgb(234,215,21)" fg:x="5020828300" fg:w="8614580"/><text x="66.6534%" y="1055.50"></text></g><g><title>[libc.so.6] (3,228,753 samples, 0.04%)</title><rect x="66.5285%" y="933" width="0.0427%" height="15" fill="rgb(222,191,20)" fg:x="5030280455" fg:w="3228753"/><text x="66.7785%" y="943.50"></text></g><g><title>[unknown] (3,228,753 samples, 0.04%)</title><rect x="66.5285%" y="917" width="0.0427%" height="15" fill="rgb(245,79,54)" fg:x="5030280455" fg:w="3228753"/><text x="66.7785%" y="927.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (4,778,451 samples, 0.06%)</title><rect x="66.5174%" y="1045" width="0.0632%" height="15" fill="rgb(240,10,37)" fg:x="5029442880" fg:w="4778451"/><text x="66.7674%" y="1055.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (4,778,451 samples, 0.06%)</title><rect x="66.5174%" y="1029" width="0.0632%" height="15" fill="rgb(214,192,32)" fg:x="5029442880" fg:w="4778451"/><text x="66.7674%" y="1039.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (4,778,451 samples, 0.06%)</title><rect x="66.5174%" y="1013" width="0.0632%" height="15" fill="rgb(209,36,54)" fg:x="5029442880" fg:w="4778451"/><text x="66.7674%" y="1023.50"></text></g><g><title>std::time::SystemTime::now (4,778,451 samples, 0.06%)</title><rect x="66.5174%" y="997" width="0.0632%" height="15" fill="rgb(220,10,11)" fg:x="5029442880" fg:w="4778451"/><text x="66.7674%" y="1007.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (4,778,451 samples, 0.06%)</title><rect x="66.5174%" y="981" width="0.0632%" height="15" fill="rgb(221,106,17)" fg:x="5029442880" fg:w="4778451"/><text x="66.7674%" y="991.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4,778,451 samples, 0.06%)</title><rect x="66.5174%" y="965" width="0.0632%" height="15" fill="rgb(251,142,44)" fg:x="5029442880" fg:w="4778451"/><text x="66.7674%" y="975.50"></text></g><g><title>clock_gettime (3,940,876 samples, 0.05%)</title><rect x="66.5285%" y="949" width="0.0521%" height="15" fill="rgb(238,13,15)" fg:x="5030280455" fg:w="3940876"/><text x="66.7785%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::profiler::ProfilerGuard&gt; (24,435,149 samples, 0.32%)</title><rect x="66.4034%" y="1269" width="0.3232%" height="15" fill="rgb(208,107,27)" fg:x="5020828300" fg:w="24435149"/><text x="66.6534%" y="1279.50"></text></g><g><title>&lt;pprof::profiler::ProfilerGuard as core::ops::drop::Drop&gt;::drop (24,435,149 samples, 0.32%)</title><rect x="66.4034%" y="1253" width="0.3232%" height="15" fill="rgb(205,136,37)" fg:x="5020828300" fg:w="24435149"/><text x="66.6534%" y="1263.50"></text></g><g><title>pprof::profiler::Profiler::stop (24,435,149 samples, 0.32%)</title><rect x="66.4034%" y="1237" width="0.3232%" height="15" fill="rgb(250,205,27)" fg:x="5020828300" fg:w="24435149"/><text x="66.6534%" y="1247.50"></text></g><g><title>pprof::profiler::Profiler::init (24,435,149 samples, 0.32%)</title><rect x="66.4034%" y="1221" width="0.3232%" height="15" fill="rgb(210,80,43)" fg:x="5020828300" fg:w="24435149"/><text x="66.6534%" y="1231.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1205" width="0.2092%" height="15" fill="rgb(247,160,36)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1215.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1189" width="0.2092%" height="15" fill="rgb(234,13,49)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1173" width="0.2092%" height="15" fill="rgb(234,122,0)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1157" width="0.2092%" height="15" fill="rgb(207,146,38)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1141" width="0.2092%" height="15" fill="rgb(207,177,25)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1125" width="0.2092%" height="15" fill="rgb(211,178,42)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1135.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1109" width="0.2092%" height="15" fill="rgb(230,69,54)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1119.50"></text></g><g><title>core::ops::function::FnMut::call_mut (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1093" width="0.2092%" height="15" fill="rgb(214,135,41)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1103.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1077" width="0.2092%" height="15" fill="rgb(237,67,25)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (15,820,569 samples, 0.21%)</title><rect x="66.5174%" y="1061" width="0.2092%" height="15" fill="rgb(222,189,50)" fg:x="5029442880" fg:w="15820569"/><text x="66.7674%" y="1071.50"></text></g><g><title>core::ptr::write (11,042,118 samples, 0.15%)</title><rect x="66.5806%" y="1045" width="0.1460%" height="15" fill="rgb(245,148,34)" fg:x="5034221331" fg:w="11042118"/><text x="66.8306%" y="1055.50"></text></g><g><title>[unknown] (7,102,301 samples, 0.09%)</title><rect x="66.6327%" y="1029" width="0.0939%" height="15" fill="rgb(222,29,6)" fg:x="5038161148" fg:w="7102301"/><text x="66.8827%" y="1039.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::next_for (15,646,834 samples, 0.21%)</title><rect x="66.9167%" y="1221" width="0.2069%" height="15" fill="rgb(221,189,43)" fg:x="5059637944" fg:w="15646834"/><text x="67.1667%" y="1231.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15,488,613 samples, 0.20%)</title><rect x="67.1237%" y="1221" width="0.2048%" height="15" fill="rgb(207,36,27)" fg:x="5075284778" fg:w="15488613"/><text x="67.3737%" y="1231.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15,488,613 samples, 0.20%)</title><rect x="67.1237%" y="1205" width="0.2048%" height="15" fill="rgb(217,90,24)" fg:x="5075284778" fg:w="15488613"/><text x="67.3737%" y="1215.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (15,488,613 samples, 0.20%)</title><rect x="67.1237%" y="1189" width="0.2048%" height="15" fill="rgb(224,66,35)" fg:x="5075284778" fg:w="15488613"/><text x="67.3737%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (89,536,157 samples, 1.18%)</title><rect x="67.3285%" y="1205" width="1.1842%" height="15" fill="rgb(221,13,50)" fg:x="5090773391" fg:w="89536157"/><text x="67.5785%" y="1215.50"></text></g><g><title>core::ptr::write (282,784,506 samples, 3.74%)</title><rect x="68.5127%" y="1205" width="3.7400%" height="15" fill="rgb(236,68,49)" fg:x="5180309548" fg:w="282784506"/><text x="68.7627%" y="1215.50">core..</text></g><g><title>[unknown] (161,997,018 samples, 2.14%)</title><rect x="70.1102%" y="1189" width="2.1425%" height="15" fill="rgb(229,146,28)" fg:x="5301097036" fg:w="161997018"/><text x="70.3602%" y="1199.50">[..</text></g><g><title>&lt;f64 as rand::distr::utils::FloatSIMDUtils&gt;::cast_from_int (41,153,777 samples, 0.54%)</title><rect x="73.5100%" y="1157" width="0.5443%" height="15" fill="rgb(225,31,38)" fg:x="5558161786" fg:w="41153777"/><text x="73.7600%" y="1167.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (23,459,166 samples, 0.31%)</title><rect x="75.3660%" y="1077" width="0.3103%" height="15" fill="rgb(250,208,3)" fg:x="5698496276" fg:w="23459166"/><text x="75.6160%" y="1087.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::Add&gt;::add (13,792,808 samples, 0.18%)</title><rect x="75.8717%" y="965" width="0.1824%" height="15" fill="rgb(246,54,23)" fg:x="5736733940" fg:w="13792808"/><text x="76.1217%" y="975.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (13,792,808 samples, 0.18%)</title><rect x="75.8717%" y="949" width="0.1824%" height="15" fill="rgb(243,76,11)" fg:x="5736733940" fg:w="13792808"/><text x="76.1217%" y="959.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (13,792,808 samples, 0.18%)</title><rect x="75.8717%" y="933" width="0.1824%" height="15" fill="rgb(245,21,50)" fg:x="5736733940" fg:w="13792808"/><text x="76.1217%" y="943.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,539,977 samples, 0.05%)</title><rect x="76.0541%" y="965" width="0.0468%" height="15" fill="rgb(228,9,43)" fg:x="5750526748" fg:w="3539977"/><text x="76.3041%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,539,977 samples, 0.05%)</title><rect x="76.0541%" y="949" width="0.0468%" height="15" fill="rgb(208,100,47)" fg:x="5750526748" fg:w="3539977"/><text x="76.3041%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (3,539,977 samples, 0.05%)</title><rect x="76.0541%" y="933" width="0.0468%" height="15" fill="rgb(232,26,8)" fg:x="5750526748" fg:w="3539977"/><text x="76.3041%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (96,465,977 samples, 1.28%)</title><rect x="76.1010%" y="965" width="1.2758%" height="15" fill="rgb(216,166,38)" fg:x="5754066725" fg:w="96465977"/><text x="76.3510%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (96,465,977 samples, 1.28%)</title><rect x="76.1010%" y="949" width="1.2758%" height="15" fill="rgb(251,202,51)" fg:x="5754066725" fg:w="96465977"/><text x="76.3510%" y="959.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::&lt;impl ppv_lite86::types::Vec4Ext&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::transpose4 (15,026,825 samples, 0.20%)</title><rect x="77.3768%" y="965" width="0.1987%" height="15" fill="rgb(254,216,34)" fg:x="5850532702" fg:w="15026825"/><text x="77.6268%" y="975.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute2x128_si256 (15,026,825 samples, 0.20%)</title><rect x="77.3768%" y="949" width="0.1987%" height="15" fill="rgb(251,32,27)" fg:x="5850532702" fg:w="15026825"/><text x="77.6268%" y="959.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15,571,322 samples, 0.21%)</title><rect x="77.5755%" y="949" width="0.2059%" height="15" fill="rgb(208,127,28)" fg:x="5865559527" fg:w="15571322"/><text x="77.8255%" y="959.50"></text></g><g><title>ppv_lite86::soft::&lt;impl core::convert::From&lt;ppv_lite86::soft::x4&lt;W&gt;&gt; for ppv_lite86::x86_64::vec512_storage&gt;::from (15,571,322 samples, 0.21%)</title><rect x="77.5755%" y="933" width="0.2059%" height="15" fill="rgb(224,137,22)" fg:x="5865559527" fg:w="15571322"/><text x="77.8255%" y="943.50"></text></g><g><title>ppv_lite86::x86_64::vec512_storage::new128 (15,571,322 samples, 0.21%)</title><rect x="77.5755%" y="917" width="0.2059%" height="15" fill="rgb(254,70,32)" fg:x="5865559527" fg:w="15571322"/><text x="77.8255%" y="927.50"></text></g><g><title>rand_chacha::guts::d0123 (17,013,971 samples, 0.23%)</title><rect x="77.5755%" y="965" width="0.2250%" height="15" fill="rgb(229,75,37)" fg:x="5865559527" fg:w="17013971"/><text x="77.8255%" y="975.50"></text></g><g><title>&lt;ppv_lite86::soft::x4&lt;W&gt; as core::ops::arith::Add&gt;::add (1,442,649 samples, 0.02%)</title><rect x="77.7815%" y="949" width="0.0191%" height="15" fill="rgb(252,64,23)" fg:x="5881130849" fg:w="1442649"/><text x="78.0315%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u64x2_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (1,442,649 samples, 0.02%)</title><rect x="77.7815%" y="933" width="0.0191%" height="15" fill="rgb(232,162,48)" fg:x="5881130849" fg:w="1442649"/><text x="78.0315%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (1,442,649 samples, 0.02%)</title><rect x="77.7815%" y="917" width="0.0191%" height="15" fill="rgb(246,160,12)" fg:x="5881130849" fg:w="1442649"/><text x="78.0315%" y="927.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (6,109,921 samples, 0.08%)</title><rect x="77.8005%" y="949" width="0.0808%" height="15" fill="rgb(247,166,0)" fg:x="5882573498" fg:w="6109921"/><text x="78.0505%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (6,109,921 samples, 0.08%)</title><rect x="77.8005%" y="933" width="0.0808%" height="15" fill="rgb(249,219,21)" fg:x="5882573498" fg:w="6109921"/><text x="78.0505%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6,109,921 samples, 0.08%)</title><rect x="77.8005%" y="917" width="0.0808%" height="15" fill="rgb(205,209,3)" fg:x="5882573498" fg:w="6109921"/><text x="78.0505%" y="927.50"></text></g><g><title>rand_chacha::guts::diagonalize (10,925,384 samples, 0.14%)</title><rect x="77.8005%" y="965" width="0.1445%" height="15" fill="rgb(243,44,1)" fg:x="5882573498" fg:w="10925384"/><text x="78.0505%" y="975.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (4,815,463 samples, 0.06%)</title><rect x="77.8813%" y="949" width="0.0637%" height="15" fill="rgb(206,159,16)" fg:x="5888683419" fg:w="4815463"/><text x="78.1313%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (4,815,463 samples, 0.06%)</title><rect x="77.8813%" y="933" width="0.0637%" height="15" fill="rgb(244,77,30)" fg:x="5888683419" fg:w="4815463"/><text x="78.1313%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4,815,463 samples, 0.06%)</title><rect x="77.8813%" y="917" width="0.0637%" height="15" fill="rgb(218,69,12)" fg:x="5888683419" fg:w="4815463"/><text x="78.1313%" y="927.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (179,995,119 samples, 2.38%)</title><rect x="77.9450%" y="949" width="2.3805%" height="15" fill="rgb(212,87,7)" fg:x="5893498882" fg:w="179995119"/><text x="78.1950%" y="959.50">&lt;p..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (179,995,119 samples, 2.38%)</title><rect x="77.9450%" y="933" width="2.3805%" height="15" fill="rgb(245,114,25)" fg:x="5893498882" fg:w="179995119"/><text x="78.1950%" y="943.50">&lt;p..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (179,995,119 samples, 2.38%)</title><rect x="77.9450%" y="917" width="2.3805%" height="15" fill="rgb(210,61,42)" fg:x="5893498882" fg:w="179995119"/><text x="78.1950%" y="927.50">&lt;p..</text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (179,995,119 samples, 2.38%)</title><rect x="77.9450%" y="901" width="2.3805%" height="15" fill="rgb(211,52,33)" fg:x="5893498882" fg:w="179995119"/><text x="78.1950%" y="911.50">co..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (94,104,506 samples, 1.24%)</title><rect x="80.3256%" y="949" width="1.2446%" height="15" fill="rgb(234,58,33)" fg:x="6073494001" fg:w="94104506"/><text x="80.5756%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (94,104,506 samples, 1.24%)</title><rect x="80.3256%" y="933" width="1.2446%" height="15" fill="rgb(220,115,36)" fg:x="6073494001" fg:w="94104506"/><text x="80.5756%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (94,104,506 samples, 1.24%)</title><rect x="80.3256%" y="917" width="1.2446%" height="15" fill="rgb(243,153,54)" fg:x="6073494001" fg:w="94104506"/><text x="80.5756%" y="927.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (68,495,396 samples, 0.91%)</title><rect x="81.5702%" y="949" width="0.9059%" height="15" fill="rgb(251,47,18)" fg:x="6167598507" fg:w="68495396"/><text x="81.8202%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (68,495,396 samples, 0.91%)</title><rect x="81.5702%" y="933" width="0.9059%" height="15" fill="rgb(242,102,42)" fg:x="6167598507" fg:w="68495396"/><text x="81.8202%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (68,495,396 samples, 0.91%)</title><rect x="81.5702%" y="917" width="0.9059%" height="15" fill="rgb(234,31,38)" fg:x="6167598507" fg:w="68495396"/><text x="81.8202%" y="927.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (98,145,591 samples, 1.30%)</title><rect x="82.4761%" y="917" width="1.2980%" height="15" fill="rgb(221,117,51)" fg:x="6236093903" fg:w="98145591"/><text x="82.7261%" y="927.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (151,681,218 samples, 2.01%)</title><rect x="82.4761%" y="949" width="2.0061%" height="15" fill="rgb(212,20,18)" fg:x="6236093903" fg:w="151681218"/><text x="82.7261%" y="959.50">&lt;..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (151,681,218 samples, 2.01%)</title><rect x="82.4761%" y="933" width="2.0061%" height="15" fill="rgb(245,133,36)" fg:x="6236093903" fg:w="151681218"/><text x="82.7261%" y="943.50">&lt;..</text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (53,535,627 samples, 0.71%)</title><rect x="83.7741%" y="917" width="0.7080%" height="15" fill="rgb(212,6,19)" fg:x="6334239494" fg:w="53535627"/><text x="84.0241%" y="927.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (80,256,688 samples, 1.06%)</title><rect x="84.4821%" y="949" width="1.0614%" height="15" fill="rgb(218,1,36)" fg:x="6387775121" fg:w="80256688"/><text x="84.7321%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (80,256,688 samples, 1.06%)</title><rect x="84.4821%" y="933" width="1.0614%" height="15" fill="rgb(246,84,54)" fg:x="6387775121" fg:w="80256688"/><text x="84.7321%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (80,256,688 samples, 1.06%)</title><rect x="84.4821%" y="917" width="1.0614%" height="15" fill="rgb(242,110,6)" fg:x="6387775121" fg:w="80256688"/><text x="84.7321%" y="927.50"></text></g><g><title>rand_chacha::guts::round (679,318,470 samples, 8.98%)</title><rect x="77.9450%" y="965" width="8.9844%" height="15" fill="rgb(214,47,5)" fg:x="5893498882" fg:w="679318470"/><text x="78.1950%" y="975.50">rand_chacha::..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (104,785,543 samples, 1.39%)</title><rect x="85.5436%" y="949" width="1.3859%" height="15" fill="rgb(218,159,25)" fg:x="6468031809" fg:w="104785543"/><text x="85.7936%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (104,785,543 samples, 1.39%)</title><rect x="85.5436%" y="933" width="1.3859%" height="15" fill="rgb(215,211,28)" fg:x="6468031809" fg:w="104785543"/><text x="85.7936%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (104,785,543 samples, 1.39%)</title><rect x="85.5436%" y="917" width="1.3859%" height="15" fill="rgb(238,59,32)" fg:x="6468031809" fg:w="104785543"/><text x="85.7936%" y="927.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (6,641,571 samples, 0.09%)</title><rect x="86.9294%" y="949" width="0.0878%" height="15" fill="rgb(226,82,3)" fg:x="6572817352" fg:w="6641571"/><text x="87.1794%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (6,641,571 samples, 0.09%)</title><rect x="86.9294%" y="933" width="0.0878%" height="15" fill="rgb(240,164,32)" fg:x="6572817352" fg:w="6641571"/><text x="87.1794%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6,641,571 samples, 0.09%)</title><rect x="86.9294%" y="917" width="0.0878%" height="15" fill="rgb(232,46,7)" fg:x="6572817352" fg:w="6641571"/><text x="87.1794%" y="927.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (8,801,367 samples, 0.12%)</title><rect x="87.0173%" y="949" width="0.1164%" height="15" fill="rgb(229,129,53)" fg:x="6579458923" fg:w="8801367"/><text x="87.2673%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (8,801,367 samples, 0.12%)</title><rect x="87.0173%" y="933" width="0.1164%" height="15" fill="rgb(234,188,29)" fg:x="6579458923" fg:w="8801367"/><text x="87.2673%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (8,801,367 samples, 0.12%)</title><rect x="87.0173%" y="917" width="0.1164%" height="15" fill="rgb(246,141,4)" fg:x="6579458923" fg:w="8801367"/><text x="87.2673%" y="927.50"></text></g><g><title>rand::rng::Rng::random (1,132,119,956 samples, 14.97%)</title><rect x="72.2527%" y="1189" width="14.9730%" height="15" fill="rgb(229,23,39)" fg:x="5463094054" fg:w="1132119956"/><text x="72.5027%" y="1199.50">rand::rng::Rng::random</text></g><g><title>rand::distr::float::&lt;impl rand::distr::distribution::Distribution&lt;f64&gt; for rand::distr::StandardUniform&gt;::sample (1,132,119,956 samples, 14.97%)</title><rect x="72.2527%" y="1173" width="14.9730%" height="15" fill="rgb(206,12,3)" fg:x="5463094054" fg:w="1132119956"/><text x="72.5027%" y="1183.50">rand::distr::float::&lt;im..</text></g><g><title>rand::rng::Rng::random (995,898,447 samples, 13.17%)</title><rect x="74.0543%" y="1157" width="13.1713%" height="15" fill="rgb(252,226,20)" fg:x="5599315563" fg:w="995898447"/><text x="74.3043%" y="1167.50">rand::rng::Rng::rand..</text></g><g><title>rand::distr::integer::&lt;impl rand::distr::distribution::Distribution&lt;u64&gt; for rand::distr::StandardUniform&gt;::sample (995,898,447 samples, 13.17%)</title><rect x="74.0543%" y="1141" width="13.1713%" height="15" fill="rgb(216,123,35)" fg:x="5599315563" fg:w="995898447"/><text x="74.3043%" y="1151.50">rand::distr::integer..</text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (995,898,447 samples, 13.17%)</title><rect x="74.0543%" y="1125" width="13.1713%" height="15" fill="rgb(212,68,40)" fg:x="5599315563" fg:w="995898447"/><text x="74.3043%" y="1135.50">&lt;rand::rngs::std::St..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (995,898,447 samples, 13.17%)</title><rect x="74.0543%" y="1109" width="13.1713%" height="15" fill="rgb(254,125,32)" fg:x="5599315563" fg:w="995898447"/><text x="74.3043%" y="1119.50">&lt;rand_chacha::chacha..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (995,898,447 samples, 13.17%)</title><rect x="74.0543%" y="1093" width="13.1713%" height="15" fill="rgb(253,97,22)" fg:x="5599315563" fg:w="995898447"/><text x="74.3043%" y="1103.50">&lt;rand_core::block::B..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (873,258,568 samples, 11.55%)</title><rect x="75.6763%" y="1077" width="11.5494%" height="15" fill="rgb(241,101,14)" fg:x="5721955442" fg:w="873258568"/><text x="75.9263%" y="1087.50">rand_core::block:..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (873,258,568 samples, 11.55%)</title><rect x="75.6763%" y="1061" width="11.5494%" height="15" fill="rgb(238,103,29)" fg:x="5721955442" fg:w="873258568"/><text x="75.9263%" y="1071.50">&lt;rand_chacha::cha..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (873,258,568 samples, 11.55%)</title><rect x="75.6763%" y="1045" width="11.5494%" height="15" fill="rgb(233,195,47)" fg:x="5721955442" fg:w="873258568"/><text x="75.9263%" y="1055.50">rand_chacha::guts..</text></g><g><title>rand_chacha::guts::refill_wide (873,258,568 samples, 11.55%)</title><rect x="75.6763%" y="1029" width="11.5494%" height="15" fill="rgb(246,218,30)" fg:x="5721955442" fg:w="873258568"/><text x="75.9263%" y="1039.50">rand_chacha::guts..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (861,946,726 samples, 11.40%)</title><rect x="75.8259%" y="1013" width="11.3998%" height="15" fill="rgb(219,145,47)" fg:x="5733267284" fg:w="861946726"/><text x="76.0759%" y="1023.50">rand_chacha::guts..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (859,963,232 samples, 11.37%)</title><rect x="75.8521%" y="997" width="11.3735%" height="15" fill="rgb(243,12,26)" fg:x="5735250778" fg:w="859963232"/><text x="76.1021%" y="1007.50">rand_chacha::guts..</text></g><g><title>rand_chacha::guts::refill_wide_impl (859,963,232 samples, 11.37%)</title><rect x="75.8521%" y="981" width="11.3735%" height="15" fill="rgb(214,87,16)" fg:x="5735250778" fg:w="859963232"/><text x="76.1021%" y="991.50">rand_chacha::guts..</text></g><g><title>rand_chacha::guts::undiagonalize (22,396,658 samples, 0.30%)</title><rect x="86.9294%" y="965" width="0.2962%" height="15" fill="rgb(208,99,42)" fg:x="6572817352" fg:w="22396658"/><text x="87.1794%" y="975.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (6,953,720 samples, 0.09%)</title><rect x="87.1337%" y="949" width="0.0920%" height="15" fill="rgb(253,99,2)" fg:x="6588260290" fg:w="6953720"/><text x="87.3837%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (6,953,720 samples, 0.09%)</title><rect x="87.1337%" y="933" width="0.0920%" height="15" fill="rgb(220,168,23)" fg:x="6588260290" fg:w="6953720"/><text x="87.3837%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6,953,720 samples, 0.09%)</title><rect x="87.1337%" y="917" width="0.0920%" height="15" fill="rgb(242,38,24)" fg:x="6588260290" fg:w="6953720"/><text x="87.3837%" y="927.50"></text></g><g><title>&lt;u32 as rand::distr::utils::WideningMultiply&gt;::wmul (26,092,562 samples, 0.35%)</title><rect x="87.2605%" y="1109" width="0.3451%" height="15" fill="rgb(225,182,9)" fg:x="6597847744" fg:w="26092562"/><text x="87.5105%" y="1119.50"></text></g><g><title>rand_chacha::guts::refill_wide (1,130,911 samples, 0.01%)</title><rect x="88.0652%" y="981" width="0.0150%" height="15" fill="rgb(243,178,37)" fg:x="6658693582" fg:w="1130911"/><text x="88.3152%" y="991.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::Add&gt;::add (3,538,103 samples, 0.05%)</title><rect x="88.0801%" y="933" width="0.0468%" height="15" fill="rgb(232,139,19)" fg:x="6659824493" fg:w="3538103"/><text x="88.3301%" y="943.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (3,538,103 samples, 0.05%)</title><rect x="88.0801%" y="917" width="0.0468%" height="15" fill="rgb(225,201,24)" fg:x="6659824493" fg:w="3538103"/><text x="88.3301%" y="927.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3,538,103 samples, 0.05%)</title><rect x="88.0801%" y="901" width="0.0468%" height="15" fill="rgb(221,47,46)" fg:x="6659824493" fg:w="3538103"/><text x="88.3301%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15,180,951 samples, 0.20%)</title><rect x="88.1269%" y="933" width="0.2008%" height="15" fill="rgb(249,23,13)" fg:x="6663362596" fg:w="15180951"/><text x="88.3769%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15,180,951 samples, 0.20%)</title><rect x="88.1269%" y="917" width="0.2008%" height="15" fill="rgb(219,9,5)" fg:x="6663362596" fg:w="15180951"/><text x="88.3769%" y="927.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::&lt;impl ppv_lite86::types::Vec4Ext&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::transpose4 (6,559,301 samples, 0.09%)</title><rect x="88.3277%" y="933" width="0.0868%" height="15" fill="rgb(254,171,16)" fg:x="6678543547" fg:w="6559301"/><text x="88.5777%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute2x128_si256 (6,559,301 samples, 0.09%)</title><rect x="88.3277%" y="917" width="0.0868%" height="15" fill="rgb(230,171,20)" fg:x="6678543547" fg:w="6559301"/><text x="88.5777%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,262,887 samples, 0.04%)</title><rect x="88.4145%" y="917" width="0.0432%" height="15" fill="rgb(210,71,41)" fg:x="6685102848" fg:w="3262887"/><text x="88.6645%" y="927.50"></text></g><g><title>ppv_lite86::soft::&lt;impl core::convert::From&lt;ppv_lite86::soft::x4&lt;W&gt;&gt; for ppv_lite86::x86_64::vec512_storage&gt;::from (3,262,887 samples, 0.04%)</title><rect x="88.4145%" y="901" width="0.0432%" height="15" fill="rgb(206,173,20)" fg:x="6685102848" fg:w="3262887"/><text x="88.6645%" y="911.50"></text></g><g><title>ppv_lite86::x86_64::vec512_storage::new128 (3,262,887 samples, 0.04%)</title><rect x="88.4145%" y="885" width="0.0432%" height="15" fill="rgb(233,88,34)" fg:x="6685102848" fg:w="3262887"/><text x="88.6645%" y="895.50"></text></g><g><title>rand_chacha::guts::d0123 (5,486,121 samples, 0.07%)</title><rect x="88.4145%" y="933" width="0.0726%" height="15" fill="rgb(223,209,46)" fg:x="6685102848" fg:w="5486121"/><text x="88.6645%" y="943.50"></text></g><g><title>&lt;ppv_lite86::soft::x4&lt;W&gt; as core::ops::arith::Add&gt;::add (2,223,234 samples, 0.03%)</title><rect x="88.4576%" y="917" width="0.0294%" height="15" fill="rgb(250,43,18)" fg:x="6688365735" fg:w="2223234"/><text x="88.7076%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u64x2_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (2,223,234 samples, 0.03%)</title><rect x="88.4576%" y="901" width="0.0294%" height="15" fill="rgb(208,13,10)" fg:x="6688365735" fg:w="2223234"/><text x="88.7076%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (2,223,234 samples, 0.03%)</title><rect x="88.4576%" y="885" width="0.0294%" height="15" fill="rgb(212,200,36)" fg:x="6688365735" fg:w="2223234"/><text x="88.7076%" y="895.50"></text></g><g><title>rand_chacha::guts::diagonalize (1,086,946 samples, 0.01%)</title><rect x="88.4870%" y="933" width="0.0144%" height="15" fill="rgb(225,90,30)" fg:x="6690588969" fg:w="1086946"/><text x="88.7370%" y="943.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (1,086,946 samples, 0.01%)</title><rect x="88.4870%" y="917" width="0.0144%" height="15" fill="rgb(236,182,39)" fg:x="6690588969" fg:w="1086946"/><text x="88.7370%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (1,086,946 samples, 0.01%)</title><rect x="88.4870%" y="901" width="0.0144%" height="15" fill="rgb(212,144,35)" fg:x="6690588969" fg:w="1086946"/><text x="88.7370%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1,086,946 samples, 0.01%)</title><rect x="88.4870%" y="885" width="0.0144%" height="15" fill="rgb(228,63,44)" fg:x="6690588969" fg:w="1086946"/><text x="88.7370%" y="895.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (26,495,885 samples, 0.35%)</title><rect x="88.5014%" y="917" width="0.3504%" height="15" fill="rgb(228,109,6)" fg:x="6691675915" fg:w="26495885"/><text x="88.7514%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (26,495,885 samples, 0.35%)</title><rect x="88.5014%" y="901" width="0.3504%" height="15" fill="rgb(238,117,24)" fg:x="6691675915" fg:w="26495885"/><text x="88.7514%" y="911.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (26,495,885 samples, 0.35%)</title><rect x="88.5014%" y="885" width="0.3504%" height="15" fill="rgb(242,26,26)" fg:x="6691675915" fg:w="26495885"/><text x="88.7514%" y="895.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (26,495,885 samples, 0.35%)</title><rect x="88.5014%" y="869" width="0.3504%" height="15" fill="rgb(221,92,48)" fg:x="6691675915" fg:w="26495885"/><text x="88.7514%" y="879.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (15,485,859 samples, 0.20%)</title><rect x="88.8518%" y="917" width="0.2048%" height="15" fill="rgb(209,209,32)" fg:x="6718171800" fg:w="15485859"/><text x="89.1018%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (15,485,859 samples, 0.20%)</title><rect x="88.8518%" y="901" width="0.2048%" height="15" fill="rgb(221,70,22)" fg:x="6718171800" fg:w="15485859"/><text x="89.1018%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (15,485,859 samples, 0.20%)</title><rect x="88.8518%" y="885" width="0.2048%" height="15" fill="rgb(248,145,5)" fg:x="6718171800" fg:w="15485859"/><text x="89.1018%" y="895.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (15,320,930 samples, 0.20%)</title><rect x="89.0566%" y="917" width="0.2026%" height="15" fill="rgb(226,116,26)" fg:x="6733657659" fg:w="15320930"/><text x="89.3066%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (15,320,930 samples, 0.20%)</title><rect x="89.0566%" y="901" width="0.2026%" height="15" fill="rgb(244,5,17)" fg:x="6733657659" fg:w="15320930"/><text x="89.3066%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (15,320,930 samples, 0.20%)</title><rect x="89.0566%" y="885" width="0.2026%" height="15" fill="rgb(252,159,33)" fg:x="6733657659" fg:w="15320930"/><text x="89.3066%" y="895.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (19,625,104 samples, 0.26%)</title><rect x="89.2593%" y="885" width="0.2596%" height="15" fill="rgb(206,71,0)" fg:x="6748978589" fg:w="19625104"/><text x="89.5093%" y="895.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (26,221,623 samples, 0.35%)</title><rect x="89.2593%" y="917" width="0.3468%" height="15" fill="rgb(233,118,54)" fg:x="6748978589" fg:w="26221623"/><text x="89.5093%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (26,221,623 samples, 0.35%)</title><rect x="89.2593%" y="901" width="0.3468%" height="15" fill="rgb(234,83,48)" fg:x="6748978589" fg:w="26221623"/><text x="89.5093%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (6,596,519 samples, 0.09%)</title><rect x="89.5188%" y="885" width="0.0872%" height="15" fill="rgb(228,3,54)" fg:x="6768603693" fg:w="6596519"/><text x="89.7688%" y="895.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (7,584,492 samples, 0.10%)</title><rect x="89.6061%" y="917" width="0.1003%" height="15" fill="rgb(226,155,13)" fg:x="6775200212" fg:w="7584492"/><text x="89.8561%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (7,584,492 samples, 0.10%)</title><rect x="89.6061%" y="901" width="0.1003%" height="15" fill="rgb(241,28,37)" fg:x="6775200212" fg:w="7584492"/><text x="89.8561%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (7,584,492 samples, 0.10%)</title><rect x="89.6061%" y="885" width="0.1003%" height="15" fill="rgb(233,93,10)" fg:x="6775200212" fg:w="7584492"/><text x="89.8561%" y="895.50"></text></g><g><title>rand_chacha::guts::round (107,528,348 samples, 1.42%)</title><rect x="88.5014%" y="933" width="1.4221%" height="15" fill="rgb(225,113,19)" fg:x="6691675915" fg:w="107528348"/><text x="88.7514%" y="943.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (16,419,559 samples, 0.22%)</title><rect x="89.7064%" y="917" width="0.2172%" height="15" fill="rgb(241,2,18)" fg:x="6782784704" fg:w="16419559"/><text x="89.9564%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (16,419,559 samples, 0.22%)</title><rect x="89.7064%" y="901" width="0.2172%" height="15" fill="rgb(228,207,21)" fg:x="6782784704" fg:w="16419559"/><text x="89.9564%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (16,419,559 samples, 0.22%)</title><rect x="89.7064%" y="885" width="0.2172%" height="15" fill="rgb(213,211,35)" fg:x="6782784704" fg:w="16419559"/><text x="89.9564%" y="895.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (1,125,122 samples, 0.01%)</title><rect x="89.9235%" y="917" width="0.0149%" height="15" fill="rgb(209,83,10)" fg:x="6799204263" fg:w="1125122"/><text x="90.1735%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (1,125,122 samples, 0.01%)</title><rect x="89.9235%" y="901" width="0.0149%" height="15" fill="rgb(209,164,1)" fg:x="6799204263" fg:w="1125122"/><text x="90.1735%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1,125,122 samples, 0.01%)</title><rect x="89.9235%" y="885" width="0.0149%" height="15" fill="rgb(213,184,43)" fg:x="6799204263" fg:w="1125122"/><text x="90.1735%" y="895.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (5,423,826 samples, 0.07%)</title><rect x="89.9384%" y="917" width="0.0717%" height="15" fill="rgb(231,61,34)" fg:x="6800329385" fg:w="5423826"/><text x="90.1884%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (5,423,826 samples, 0.07%)</title><rect x="89.9384%" y="901" width="0.0717%" height="15" fill="rgb(235,75,3)" fg:x="6800329385" fg:w="5423826"/><text x="90.1884%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5,423,826 samples, 0.07%)</title><rect x="89.9384%" y="885" width="0.0717%" height="15" fill="rgb(220,106,47)" fg:x="6800329385" fg:w="5423826"/><text x="90.1884%" y="895.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (148,080,438 samples, 1.96%)</title><rect x="88.0801%" y="981" width="1.9585%" height="15" fill="rgb(210,196,33)" fg:x="6659824493" fg:w="148080438"/><text x="88.3301%" y="991.50">r..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (148,080,438 samples, 1.96%)</title><rect x="88.0801%" y="965" width="1.9585%" height="15" fill="rgb(229,154,42)" fg:x="6659824493" fg:w="148080438"/><text x="88.3301%" y="975.50">r..</text></g><g><title>rand_chacha::guts::refill_wide_impl (148,080,438 samples, 1.96%)</title><rect x="88.0801%" y="949" width="1.9585%" height="15" fill="rgb(228,114,26)" fg:x="6659824493" fg:w="148080438"/><text x="88.3301%" y="959.50">r..</text></g><g><title>rand_chacha::guts::undiagonalize (8,700,668 samples, 0.12%)</title><rect x="89.9235%" y="933" width="0.1151%" height="15" fill="rgb(208,144,1)" fg:x="6799204263" fg:w="8700668"/><text x="90.1735%" y="943.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (2,151,720 samples, 0.03%)</title><rect x="90.0101%" y="917" width="0.0285%" height="15" fill="rgb(239,112,37)" fg:x="6805753211" fg:w="2151720"/><text x="90.2601%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (2,151,720 samples, 0.03%)</title><rect x="90.0101%" y="901" width="0.0285%" height="15" fill="rgb(210,96,50)" fg:x="6805753211" fg:w="2151720"/><text x="90.2601%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2,151,720 samples, 0.03%)</title><rect x="90.0101%" y="885" width="0.0285%" height="15" fill="rgb(222,178,2)" fg:x="6805753211" fg:w="2151720"/><text x="90.2601%" y="895.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_fn (1,773,640,712 samples, 23.46%)</title><rect x="66.7297%" y="1269" width="23.4575%" height="15" fill="rgb(226,74,18)" fg:x="5045493340" fg:w="1773640712"/><text x="66.9797%" y="1279.50">ndarray::impl_constructors::&lt;impl nda..</text></g><g><title>ndarray::iterators::to_vec_mapped (1,773,640,712 samples, 23.46%)</title><rect x="66.7297%" y="1253" width="23.4575%" height="15" fill="rgb(225,67,54)" fg:x="5045493340" fg:w="1773640712"/><text x="66.9797%" y="1263.50">ndarray::iterators::to_vec_mapped</text></g><g><title>&lt;ndarray::indexes::IndicesIter&lt;D&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,773,640,712 samples, 23.46%)</title><rect x="66.7297%" y="1237" width="23.4575%" height="15" fill="rgb(251,92,32)" fg:x="5045493340" fg:w="1773640712"/><text x="66.9797%" y="1247.50">&lt;ndarray::indexes::IndicesIter&lt;D&gt; as ..</text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (1,728,360,661 samples, 22.86%)</title><rect x="67.3285%" y="1221" width="22.8586%" height="15" fill="rgb(228,149,22)" fg:x="5090773391" fg:w="1728360661"/><text x="67.5785%" y="1231.50">ndarray::iterators::to_vec_mapped::_..</text></g><g><title>profile::main::_{{closure}} (1,356,039,998 samples, 17.93%)</title><rect x="72.2527%" y="1205" width="17.9344%" height="15" fill="rgb(243,54,13)" fg:x="5463094054" fg:w="1356039998"/><text x="72.5027%" y="1215.50">profile::main::_{{closure}}</text></g><g><title>rand::rng::Rng::random_range (223,920,042 samples, 2.96%)</title><rect x="87.2256%" y="1189" width="2.9615%" height="15" fill="rgb(243,180,28)" fg:x="6595214010" fg:w="223920042"/><text x="87.4756%" y="1199.50">ran..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distr::uniform::SampleRange&lt;T&gt;&gt;::sample_single (223,920,042 samples, 2.96%)</title><rect x="87.2256%" y="1173" width="2.9615%" height="15" fill="rgb(208,167,24)" fg:x="6595214010" fg:w="223920042"/><text x="87.4756%" y="1183.50">&lt;co..</text></g><g><title>&lt;rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler&gt;::sample_single (223,920,042 samples, 2.96%)</title><rect x="87.2256%" y="1157" width="2.9615%" height="15" fill="rgb(245,73,45)" fg:x="6595214010" fg:w="223920042"/><text x="87.4756%" y="1167.50">&lt;ra..</text></g><g><title>&lt;rand::distr::uniform::int::UniformInt&lt;u32&gt; as rand::distr::uniform::UniformSampler&gt;::sample_single (223,920,042 samples, 2.96%)</title><rect x="87.2256%" y="1141" width="2.9615%" height="15" fill="rgb(237,203,48)" fg:x="6595214010" fg:w="223920042"/><text x="87.4756%" y="1151.50">&lt;ra..</text></g><g><title>&lt;rand::distr::uniform::int::UniformInt&lt;u32&gt; as rand::distr::uniform::UniformSampler&gt;::sample_single_inclusive (223,920,042 samples, 2.96%)</title><rect x="87.2256%" y="1125" width="2.9615%" height="15" fill="rgb(211,197,16)" fg:x="6595214010" fg:w="223920042"/><text x="87.4756%" y="1135.50">&lt;ra..</text></g><g><title>rand::rng::Rng::random (195,193,746 samples, 2.58%)</title><rect x="87.6056%" y="1109" width="2.5816%" height="15" fill="rgb(243,99,51)" fg:x="6623940306" fg:w="195193746"/><text x="87.8556%" y="1119.50">ra..</text></g><g><title>rand::distr::integer::&lt;impl rand::distr::distribution::Distribution&lt;u32&gt; for rand::distr::StandardUniform&gt;::sample (195,193,746 samples, 2.58%)</title><rect x="87.6056%" y="1093" width="2.5816%" height="15" fill="rgb(215,123,29)" fg:x="6623940306" fg:w="195193746"/><text x="87.8556%" y="1103.50">ra..</text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u32 (195,193,746 samples, 2.58%)</title><rect x="87.6056%" y="1077" width="2.5816%" height="15" fill="rgb(239,186,37)" fg:x="6623940306" fg:w="195193746"/><text x="87.8556%" y="1087.50">&lt;r..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u32 (195,193,746 samples, 2.58%)</title><rect x="87.6056%" y="1061" width="2.5816%" height="15" fill="rgb(252,136,39)" fg:x="6623940306" fg:w="195193746"/><text x="87.8556%" y="1071.50">&lt;r..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (195,193,746 samples, 2.58%)</title><rect x="87.6056%" y="1045" width="2.5816%" height="15" fill="rgb(223,213,32)" fg:x="6623940306" fg:w="195193746"/><text x="87.8556%" y="1055.50">&lt;r..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (164,774,616 samples, 2.18%)</title><rect x="88.0079%" y="1029" width="2.1792%" height="15" fill="rgb(233,115,5)" fg:x="6654359436" fg:w="164774616"/><text x="88.2579%" y="1039.50">r..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (164,774,616 samples, 2.18%)</title><rect x="88.0079%" y="1013" width="2.1792%" height="15" fill="rgb(207,226,44)" fg:x="6654359436" fg:w="164774616"/><text x="88.2579%" y="1023.50">&lt;..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (164,774,616 samples, 2.18%)</title><rect x="88.0079%" y="997" width="2.1792%" height="15" fill="rgb(208,126,0)" fg:x="6654359436" fg:w="164774616"/><text x="88.2579%" y="1007.50">r..</text></g><g><title>rand_chacha::guts::refill_wide (11,229,121 samples, 0.15%)</title><rect x="90.0386%" y="981" width="0.1485%" height="15" fill="rgb(244,66,21)" fg:x="6807904931" fg:w="11229121"/><text x="90.2886%" y="991.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx2 (11,229,121 samples, 0.15%)</title><rect x="90.0386%" y="965" width="0.1485%" height="15" fill="rgb(222,97,12)" fg:x="6807904931" fg:w="11229121"/><text x="90.2886%" y="975.50"></text></g><g><title>std_detect::detect::check_for (11,229,121 samples, 0.15%)</title><rect x="90.0386%" y="949" width="0.1485%" height="15" fill="rgb(219,213,19)" fg:x="6807904931" fg:w="11229121"/><text x="90.2886%" y="959.50"></text></g><g><title>std_detect::detect::cache::test (11,229,121 samples, 0.15%)</title><rect x="90.0386%" y="933" width="0.1485%" height="15" fill="rgb(252,169,30)" fg:x="6807904931" fg:w="11229121"/><text x="90.2886%" y="943.50"></text></g><g><title>std_detect::detect::cache::Cache::test (11,229,121 samples, 0.15%)</title><rect x="90.0386%" y="917" width="0.1485%" height="15" fill="rgb(206,32,51)" fg:x="6807904931" fg:w="11229121"/><text x="90.2886%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11,229,121 samples, 0.15%)</title><rect x="90.0386%" y="901" width="0.1485%" height="15" fill="rgb(250,172,42)" fg:x="6807904931" fg:w="11229121"/><text x="90.2886%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (11,229,121 samples, 0.15%)</title><rect x="90.0386%" y="885" width="0.1485%" height="15" fill="rgb(209,34,43)" fg:x="6807904931" fg:w="11229121"/><text x="90.2886%" y="895.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::ones (22,517,242 samples, 0.30%)</title><rect x="90.1871%" y="1269" width="0.2978%" height="15" fill="rgb(223,11,35)" fg:x="6819134052" fg:w="22517242"/><text x="90.4371%" y="1279.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_elem (22,517,242 samples, 0.30%)</title><rect x="90.1871%" y="1253" width="0.2978%" height="15" fill="rgb(251,219,26)" fg:x="6819134052" fg:w="22517242"/><text x="90.4371%" y="1263.50"></text></g><g><title>alloc::vec::from_elem (22,517,242 samples, 0.30%)</title><rect x="90.1871%" y="1237" width="0.2978%" height="15" fill="rgb(231,119,3)" fg:x="6819134052" fg:w="22517242"/><text x="90.4371%" y="1247.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (22,517,242 samples, 0.30%)</title><rect x="90.1871%" y="1221" width="0.2978%" height="15" fill="rgb(216,97,11)" fg:x="6819134052" fg:w="22517242"/><text x="90.4371%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (22,517,242 samples, 0.30%)</title><rect x="90.1871%" y="1205" width="0.2978%" height="15" fill="rgb(223,59,9)" fg:x="6819134052" fg:w="22517242"/><text x="90.4371%" y="1215.50"></text></g><g><title>core::ptr::write (22,517,242 samples, 0.30%)</title><rect x="90.1871%" y="1189" width="0.2978%" height="15" fill="rgb(233,93,31)" fg:x="6819134052" fg:w="22517242"/><text x="90.4371%" y="1199.50"></text></g><g><title>[unknown] (11,450,721 samples, 0.15%)</title><rect x="90.3335%" y="1173" width="0.1514%" height="15" fill="rgb(239,81,33)" fg:x="6830200573" fg:w="11450721"/><text x="90.5835%" y="1183.50"></text></g><g><title>[libc.so.6] (2,033,880 samples, 0.03%)</title><rect x="90.4849%" y="725" width="0.0269%" height="15" fill="rgb(213,120,34)" fg:x="6841651294" fg:w="2033880"/><text x="90.7349%" y="735.50"></text></g><g><title>[unknown] (2,033,880 samples, 0.03%)</title><rect x="90.4849%" y="709" width="0.0269%" height="15" fill="rgb(243,49,53)" fg:x="6841651294" fg:w="2033880"/><text x="90.7349%" y="719.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (3,979,906 samples, 0.05%)</title><rect x="90.4849%" y="837" width="0.0526%" height="15" fill="rgb(247,216,33)" fg:x="6841651294" fg:w="3979906"/><text x="90.7349%" y="847.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (3,979,906 samples, 0.05%)</title><rect x="90.4849%" y="821" width="0.0526%" height="15" fill="rgb(226,26,14)" fg:x="6841651294" fg:w="3979906"/><text x="90.7349%" y="831.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (3,979,906 samples, 0.05%)</title><rect x="90.4849%" y="805" width="0.0526%" height="15" fill="rgb(215,49,53)" fg:x="6841651294" fg:w="3979906"/><text x="90.7349%" y="815.50"></text></g><g><title>std::time::SystemTime::now (3,979,906 samples, 0.05%)</title><rect x="90.4849%" y="789" width="0.0526%" height="15" fill="rgb(245,162,40)" fg:x="6841651294" fg:w="3979906"/><text x="90.7349%" y="799.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (3,979,906 samples, 0.05%)</title><rect x="90.4849%" y="773" width="0.0526%" height="15" fill="rgb(229,68,17)" fg:x="6841651294" fg:w="3979906"/><text x="90.7349%" y="783.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,979,906 samples, 0.05%)</title><rect x="90.4849%" y="757" width="0.0526%" height="15" fill="rgb(213,182,10)" fg:x="6841651294" fg:w="3979906"/><text x="90.7349%" y="767.50"></text></g><g><title>clock_gettime (3,979,906 samples, 0.05%)</title><rect x="90.4849%" y="741" width="0.0526%" height="15" fill="rgb(245,125,30)" fg:x="6841651294" fg:w="3979906"/><text x="90.7349%" y="751.50"></text></g><g><title>__vdso_clock_gettime (1,946,026 samples, 0.03%)</title><rect x="90.5118%" y="725" width="0.0257%" height="15" fill="rgb(232,202,2)" fg:x="6843685174" fg:w="1946026"/><text x="90.7618%" y="735.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="981" width="0.1756%" height="15" fill="rgb(237,140,51)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="965" width="0.1756%" height="15" fill="rgb(236,157,25)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="949" width="0.1756%" height="15" fill="rgb(219,209,0)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="933" width="0.1756%" height="15" fill="rgb(240,116,54)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="917" width="0.1756%" height="15" fill="rgb(216,10,36)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="927.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="901" width="0.1756%" height="15" fill="rgb(222,72,44)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="885" width="0.1756%" height="15" fill="rgb(232,159,9)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="895.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="869" width="0.1756%" height="15" fill="rgb(210,39,32)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (13,275,050 samples, 0.18%)</title><rect x="90.4849%" y="853" width="0.1756%" height="15" fill="rgb(216,194,45)" fg:x="6841651294" fg:w="13275050"/><text x="90.7349%" y="863.50"></text></g><g><title>core::ptr::write (9,295,144 samples, 0.12%)</title><rect x="90.5375%" y="837" width="0.1229%" height="15" fill="rgb(218,18,35)" fg:x="6845631200" fg:w="9295144"/><text x="90.7875%" y="847.50"></text></g><g><title>[unknown] (5,528,382 samples, 0.07%)</title><rect x="90.5874%" y="821" width="0.0731%" height="15" fill="rgb(207,83,51)" fg:x="6849397962" fg:w="5528382"/><text x="90.8374%" y="831.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1221" width="0.1794%" height="15" fill="rgb(225,63,43)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1231.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1205" width="0.1794%" height="15" fill="rgb(207,57,36)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1215.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1189" width="0.1794%" height="15" fill="rgb(216,99,33)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1199.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1173" width="0.1794%" height="15" fill="rgb(225,42,16)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1183.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1157" width="0.1794%" height="15" fill="rgb(220,201,45)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1167.50"></text></g><g><title>once_cell::imp::initialize_or_wait (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1141" width="0.1794%" height="15" fill="rgb(225,33,4)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1125" width="0.1794%" height="15" fill="rgb(224,33,50)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1135.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1109" width="0.1794%" height="15" fill="rgb(246,198,51)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1119.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1093" width="0.1794%" height="15" fill="rgb(205,22,4)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1103.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1077" width="0.1794%" height="15" fill="rgb(206,3,8)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1061" width="0.1794%" height="15" fill="rgb(251,23,15)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1045" width="0.1794%" height="15" fill="rgb(252,88,28)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1055.50"></text></g><g><title>pprof::profiler::PROFILER::_{{closure}} (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1029" width="0.1794%" height="15" fill="rgb(212,127,14)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1039.50"></text></g><g><title>pprof::profiler::Profiler::new (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="1013" width="0.1794%" height="15" fill="rgb(247,145,37)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1023.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (13,562,368 samples, 0.18%)</title><rect x="90.4849%" y="997" width="0.1794%" height="15" fill="rgb(209,117,53)" fg:x="6841651294" fg:w="13562368"/><text x="90.7349%" y="1007.50"></text></g><g><title>gimli::read::abbrev::AttributeSpecification::parse (1,014,923 samples, 0.01%)</title><rect x="90.6895%" y="773" width="0.0134%" height="15" fill="rgb(212,90,42)" fg:x="6857123174" fg:w="1014923"/><text x="90.9395%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,573,588 samples, 0.02%)</title><rect x="90.7066%" y="693" width="0.0208%" height="15" fill="rgb(218,164,37)" fg:x="6858411593" fg:w="1573588"/><text x="90.9566%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,573,588 samples, 0.02%)</title><rect x="90.7066%" y="677" width="0.0208%" height="15" fill="rgb(246,65,34)" fg:x="6858411593" fg:w="1573588"/><text x="90.9566%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,573,588 samples, 0.02%)</title><rect x="90.7066%" y="661" width="0.0208%" height="15" fill="rgb(231,100,33)" fg:x="6858411593" fg:w="1573588"/><text x="90.9566%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1,573,588 samples, 0.02%)</title><rect x="90.7066%" y="645" width="0.0208%" height="15" fill="rgb(228,126,14)" fg:x="6858411593" fg:w="1573588"/><text x="90.9566%" y="655.50"></text></g><g><title>__rustc::__rdl_realloc (1,573,588 samples, 0.02%)</title><rect x="90.7066%" y="629" width="0.0208%" height="15" fill="rgb(215,173,21)" fg:x="6858411593" fg:w="1573588"/><text x="90.9566%" y="639.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,573,588 samples, 0.02%)</title><rect x="90.7066%" y="613" width="0.0208%" height="15" fill="rgb(210,6,40)" fg:x="6858411593" fg:w="1573588"/><text x="90.9566%" y="623.50"></text></g><g><title>realloc (1,573,588 samples, 0.02%)</title><rect x="90.7066%" y="597" width="0.0208%" height="15" fill="rgb(212,48,18)" fg:x="6858411593" fg:w="1573588"/><text x="90.9566%" y="607.50"></text></g><g><title>[libc.so.6] (1,573,588 samples, 0.02%)</title><rect x="90.7066%" y="581" width="0.0208%" height="15" fill="rgb(230,214,11)" fg:x="6858411593" fg:w="1573588"/><text x="90.9566%" y="591.50"></text></g><g><title>[libc.so.6] (1,306,213 samples, 0.02%)</title><rect x="90.7101%" y="565" width="0.0173%" height="15" fill="rgb(254,105,39)" fg:x="6858678968" fg:w="1306213"/><text x="90.9601%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,017,521 samples, 0.03%)</title><rect x="90.7066%" y="741" width="0.0267%" height="15" fill="rgb(245,158,5)" fg:x="6858411593" fg:w="2017521"/><text x="90.9566%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,017,521 samples, 0.03%)</title><rect x="90.7066%" y="725" width="0.0267%" height="15" fill="rgb(249,208,11)" fg:x="6858411593" fg:w="2017521"/><text x="90.9566%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,017,521 samples, 0.03%)</title><rect x="90.7066%" y="709" width="0.0267%" height="15" fill="rgb(210,39,28)" fg:x="6858411593" fg:w="2017521"/><text x="90.9566%" y="719.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse (4,245,439 samples, 0.06%)</title><rect x="90.6895%" y="805" width="0.0561%" height="15" fill="rgb(211,56,53)" fg:x="6857123174" fg:w="4245439"/><text x="90.9395%" y="815.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_attributes (4,245,439 samples, 0.06%)</title><rect x="90.6895%" y="789" width="0.0561%" height="15" fill="rgb(226,201,30)" fg:x="6857123174" fg:w="4245439"/><text x="90.9395%" y="799.50"></text></g><g><title>gimli::read::abbrev::Attributes::push (3,230,516 samples, 0.04%)</title><rect x="90.7030%" y="773" width="0.0427%" height="15" fill="rgb(239,101,34)" fg:x="6858138097" fg:w="3230516"/><text x="90.9530%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,957,020 samples, 0.04%)</title><rect x="90.7066%" y="757" width="0.0391%" height="15" fill="rgb(226,209,5)" fg:x="6858411593" fg:w="2957020"/><text x="90.9566%" y="767.50"></text></g><g><title>core::ptr::write (939,499 samples, 0.01%)</title><rect x="90.7333%" y="741" width="0.0124%" height="15" fill="rgb(250,105,47)" fg:x="6860429114" fg:w="939499"/><text x="90.9833%" y="751.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::abbreviations (6,019,483 samples, 0.08%)</title><rect x="90.6726%" y="869" width="0.0796%" height="15" fill="rgb(230,72,3)" fg:x="6855839148" fg:w="6019483"/><text x="90.9226%" y="879.50"></text></g><g><title>gimli::read::abbrev::AbbreviationsCache::get (6,019,483 samples, 0.08%)</title><rect x="90.6726%" y="853" width="0.0796%" height="15" fill="rgb(232,218,39)" fg:x="6855839148" fg:w="6019483"/><text x="90.9226%" y="863.50"></text></g><g><title>gimli::read::abbrev::DebugAbbrev&lt;R&gt;::abbreviations (6,019,483 samples, 0.08%)</title><rect x="90.6726%" y="837" width="0.0796%" height="15" fill="rgb(248,166,6)" fg:x="6855839148" fg:w="6019483"/><text x="90.9226%" y="847.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::parse (6,019,483 samples, 0.08%)</title><rect x="90.6726%" y="821" width="0.0796%" height="15" fill="rgb(247,89,20)" fg:x="6855839148" fg:w="6019483"/><text x="90.9226%" y="831.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::unit (7,140,622 samples, 0.09%)</title><rect x="90.6726%" y="901" width="0.0944%" height="15" fill="rgb(248,130,54)" fg:x="6855839148" fg:w="7140622"/><text x="90.9226%" y="911.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new (7,140,622 samples, 0.09%)</title><rect x="90.6726%" y="885" width="0.0944%" height="15" fill="rgb(234,196,4)" fg:x="6855839148" fg:w="7140622"/><text x="90.9226%" y="895.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new_with_abbreviations (1,121,139 samples, 0.01%)</title><rect x="90.7522%" y="869" width="0.0148%" height="15" fill="rgb(250,143,31)" fg:x="6861858631" fg:w="1121139"/><text x="91.0022%" y="879.50"></text></g><g><title>backtrace::symbolize::gimli::Context::new (8,364,087 samples, 0.11%)</title><rect x="90.6643%" y="965" width="0.1106%" height="15" fill="rgb(211,110,34)" fg:x="6855213662" fg:w="8364087"/><text x="90.9143%" y="975.50"></text></g><g><title>addr2line::Context&lt;R&gt;::from_dwarf (8,364,087 samples, 0.11%)</title><rect x="90.6643%" y="949" width="0.1106%" height="15" fill="rgb(215,124,48)" fg:x="6855213662" fg:w="8364087"/><text x="90.9143%" y="959.50"></text></g><g><title>addr2line::Context&lt;R&gt;::from_arc_dwarf (8,364,087 samples, 0.11%)</title><rect x="90.6643%" y="933" width="0.1106%" height="15" fill="rgb(216,46,13)" fg:x="6855213662" fg:w="8364087"/><text x="90.9143%" y="943.50"></text></g><g><title>addr2line::unit::ResUnits&lt;R&gt;::parse (8,364,087 samples, 0.11%)</title><rect x="90.6643%" y="917" width="0.1106%" height="15" fill="rgb(205,184,25)" fg:x="6855213662" fg:w="8364087"/><text x="90.9143%" y="927.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::mapping_for_lib (9,499,278 samples, 0.13%)</title><rect x="90.6643%" y="1045" width="0.1256%" height="15" fill="rgb(228,1,10)" fg:x="6855213662" fg:w="9499278"/><text x="90.9143%" y="1055.50"></text></g><g><title>backtrace::symbolize::gimli::create_mapping (9,499,278 samples, 0.13%)</title><rect x="90.6643%" y="1029" width="0.1256%" height="15" fill="rgb(213,116,27)" fg:x="6855213662" fg:w="9499278"/><text x="90.9143%" y="1039.50"></text></g><g><title>backtrace::symbolize::gimli::elf::&lt;impl backtrace::symbolize::gimli::Mapping&gt;::new (9,499,278 samples, 0.13%)</title><rect x="90.6643%" y="1013" width="0.1256%" height="15" fill="rgb(241,95,50)" fg:x="6855213662" fg:w="9499278"/><text x="90.9143%" y="1023.50"></text></g><g><title>backtrace::symbolize::gimli::Mapping::mk_or_other (9,499,278 samples, 0.13%)</title><rect x="90.6643%" y="997" width="0.1256%" height="15" fill="rgb(238,48,32)" fg:x="6855213662" fg:w="9499278"/><text x="90.9143%" y="1007.50"></text></g><g><title>backtrace::symbolize::gimli::elf::_&lt;impl backtrace::symbolize::gimli::Mapping&gt;::new::_{{closure}} (9,499,278 samples, 0.13%)</title><rect x="90.6643%" y="981" width="0.1256%" height="15" fill="rgb(235,113,49)" fg:x="6855213662" fg:w="9499278"/><text x="90.9143%" y="991.50"></text></g><g><title>backtrace::symbolize::gimli::elf::Object::parse (1,135,191 samples, 0.02%)</title><rect x="90.7749%" y="965" width="0.0150%" height="15" fill="rgb(205,127,43)" fg:x="6863577749" fg:w="1135191"/><text x="91.0249%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (1,135,191 samples, 0.02%)</title><rect x="90.7749%" y="949" width="0.0150%" height="15" fill="rgb(250,162,2)" fg:x="6863577749" fg:w="1135191"/><text x="91.0249%" y="959.50"></text></g><g><title>core::slice::sort::unstable::sort (1,135,191 samples, 0.02%)</title><rect x="90.7749%" y="933" width="0.0150%" height="15" fill="rgb(220,13,41)" fg:x="6863577749" fg:w="1135191"/><text x="91.0249%" y="943.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,135,191 samples, 0.02%)</title><rect x="90.7749%" y="917" width="0.0150%" height="15" fill="rgb(249,221,25)" fg:x="6863577749" fg:w="1135191"/><text x="91.0249%" y="927.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (1,135,191 samples, 0.02%)</title><rect x="90.7749%" y="901" width="0.0150%" height="15" fill="rgb(215,208,19)" fg:x="6863577749" fg:w="1135191"/><text x="91.0249%" y="911.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (1,135,191 samples, 0.02%)</title><rect x="90.7749%" y="885" width="0.0150%" height="15" fill="rgb(236,175,2)" fg:x="6863577749" fg:w="1135191"/><text x="91.0249%" y="895.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (1,135,191 samples, 0.02%)</title><rect x="90.7749%" y="869" width="0.0150%" height="15" fill="rgb(241,52,2)" fg:x="6863577749" fg:w="1135191"/><text x="91.0249%" y="879.50"></text></g><g><title>core::intrinsics::copy (1,135,191 samples, 0.02%)</title><rect x="90.7749%" y="853" width="0.0150%" height="15" fill="rgb(248,140,14)" fg:x="6863577749" fg:w="1135191"/><text x="91.0249%" y="863.50"></text></g><g><title>addr2line::RangeAttributes&lt;R&gt;::for_each_range (778,727 samples, 0.01%)</title><rect x="90.7899%" y="869" width="0.0103%" height="15" fill="rgb(253,22,42)" fg:x="6864712940" fg:w="778727"/><text x="91.0399%" y="879.50"></text></g><g><title>gimli::read::rnglists::RngListIter&lt;R&gt;::next (778,727 samples, 0.01%)</title><rect x="90.7899%" y="853" width="0.0103%" height="15" fill="rgb(234,61,47)" fg:x="6864712940" fg:w="778727"/><text x="91.0399%" y="863.50"></text></g><g><title>gimli::read::rnglists::RawRngListIter&lt;R&gt;::next (778,727 samples, 0.01%)</title><rect x="90.7899%" y="837" width="0.0103%" height="15" fill="rgb(208,226,15)" fg:x="6864712940" fg:w="778727"/><text x="91.0399%" y="847.50"></text></g><g><title>gimli::read::rnglists::RawRngListEntry&lt;T&gt;::parse (778,727 samples, 0.01%)</title><rect x="90.7899%" y="821" width="0.0103%" height="15" fill="rgb(217,221,4)" fg:x="6864712940" fg:w="778727"/><text x="91.0399%" y="831.50"></text></g><g><title>gimli::read::rnglists::RawRange::parse (778,727 samples, 0.01%)</title><rect x="90.7899%" y="805" width="0.0103%" height="15" fill="rgb(212,174,34)" fg:x="6864712940" fg:w="778727"/><text x="91.0399%" y="815.50"></text></g><g><title>gimli::read::reader::Reader::read_address (778,727 samples, 0.01%)</title><rect x="90.7899%" y="789" width="0.0103%" height="15" fill="rgb(253,83,4)" fg:x="6864712940" fg:w="778727"/><text x="91.0399%" y="799.50"></text></g><g><title>gimli::read::reader::Reader::read_u64 (778,727 samples, 0.01%)</title><rect x="90.7899%" y="773" width="0.0103%" height="15" fill="rgb(250,195,49)" fg:x="6864712940" fg:w="778727"/><text x="91.0399%" y="783.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (853,365 samples, 0.01%)</title><rect x="90.8002%" y="485" width="0.0113%" height="15" fill="rgb(241,192,25)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="495.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (853,365 samples, 0.01%)</title><rect x="90.8002%" y="469" width="0.0113%" height="15" fill="rgb(208,124,10)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="479.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (853,365 samples, 0.01%)</title><rect x="90.8002%" y="453" width="0.0113%" height="15" fill="rgb(222,33,0)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="463.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (853,365 samples, 0.01%)</title><rect x="90.8002%" y="437" width="0.0113%" height="15" fill="rgb(234,209,28)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="447.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (853,365 samples, 0.01%)</title><rect x="90.8002%" y="421" width="0.0113%" height="15" fill="rgb(224,11,23)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="431.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (853,365 samples, 0.01%)</title><rect x="90.8002%" y="405" width="0.0113%" height="15" fill="rgb(232,99,1)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="415.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (853,365 samples, 0.01%)</title><rect x="90.8002%" y="389" width="0.0113%" height="15" fill="rgb(237,95,45)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="399.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (853,365 samples, 0.01%)</title><rect x="90.8002%" y="373" width="0.0113%" height="15" fill="rgb(208,109,11)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="383.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (853,365 samples, 0.01%)</title><rect x="90.8002%" y="357" width="0.0113%" height="15" fill="rgb(216,190,48)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="367.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (853,365 samples, 0.01%)</title><rect x="90.8002%" y="341" width="0.0113%" height="15" fill="rgb(251,171,36)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="351.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (853,365 samples, 0.01%)</title><rect x="90.8002%" y="325" width="0.0113%" height="15" fill="rgb(230,62,22)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="335.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (853,365 samples, 0.01%)</title><rect x="90.8002%" y="309" width="0.0113%" height="15" fill="rgb(225,114,35)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="319.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (853,365 samples, 0.01%)</title><rect x="90.8002%" y="293" width="0.0113%" height="15" fill="rgb(215,118,42)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="303.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (853,365 samples, 0.01%)</title><rect x="90.8002%" y="277" width="0.0113%" height="15" fill="rgb(243,119,21)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="287.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_attribute (853,365 samples, 0.01%)</title><rect x="90.8002%" y="261" width="0.0113%" height="15" fill="rgb(252,177,53)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="271.50"></text></g><g><title>gimli::read::unit::parse_attribute (853,365 samples, 0.01%)</title><rect x="90.8002%" y="245" width="0.0113%" height="15" fill="rgb(237,209,29)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="255.50"></text></g><g><title>gimli::read::reader::Reader::read_u8 (853,365 samples, 0.01%)</title><rect x="90.8002%" y="229" width="0.0113%" height="15" fill="rgb(212,65,23)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="239.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (853,365 samples, 0.01%)</title><rect x="90.8002%" y="213" width="0.0113%" height="15" fill="rgb(230,222,46)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="223.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (853,365 samples, 0.01%)</title><rect x="90.8002%" y="197" width="0.0113%" height="15" fill="rgb(215,135,32)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="207.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (853,365 samples, 0.01%)</title><rect x="90.8002%" y="181" width="0.0113%" height="15" fill="rgb(246,101,22)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="191.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (853,365 samples, 0.01%)</title><rect x="90.8002%" y="165" width="0.0113%" height="15" fill="rgb(206,107,13)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="175.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (853,365 samples, 0.01%)</title><rect x="90.8002%" y="149" width="0.0113%" height="15" fill="rgb(250,100,44)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="159.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (853,365 samples, 0.01%)</title><rect x="90.8002%" y="133" width="0.0113%" height="15" fill="rgb(231,147,38)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="143.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (853,365 samples, 0.01%)</title><rect x="90.8002%" y="117" width="0.0113%" height="15" fill="rgb(229,8,40)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="127.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (853,365 samples, 0.01%)</title><rect x="90.8002%" y="101" width="0.0113%" height="15" fill="rgb(221,135,30)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="111.50"></text></g><g><title>core::slice::index::get_noubcheck (853,365 samples, 0.01%)</title><rect x="90.8002%" y="85" width="0.0113%" height="15" fill="rgb(249,193,18)" fg:x="6865491667" fg:w="853365"/><text x="91.0502%" y="95.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="773" width="0.0201%" height="15" fill="rgb(209,133,39)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="783.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="757" width="0.0201%" height="15" fill="rgb(232,100,14)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="767.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="741" width="0.0201%" height="15" fill="rgb(224,185,1)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="751.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="725" width="0.0201%" height="15" fill="rgb(223,139,8)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="735.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="709" width="0.0201%" height="15" fill="rgb(232,213,38)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="719.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="693" width="0.0201%" height="15" fill="rgb(207,94,22)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="703.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="677" width="0.0201%" height="15" fill="rgb(219,183,54)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="687.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="661" width="0.0201%" height="15" fill="rgb(216,185,54)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="671.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="645" width="0.0201%" height="15" fill="rgb(254,217,39)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="655.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="629" width="0.0201%" height="15" fill="rgb(240,178,23)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="639.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="613" width="0.0201%" height="15" fill="rgb(218,11,47)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="623.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="597" width="0.0201%" height="15" fill="rgb(218,51,51)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="607.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="581" width="0.0201%" height="15" fill="rgb(238,126,27)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="591.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="565" width="0.0201%" height="15" fill="rgb(249,202,22)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="575.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="549" width="0.0201%" height="15" fill="rgb(254,195,49)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="559.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="533" width="0.0201%" height="15" fill="rgb(208,123,14)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="543.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="517" width="0.0201%" height="15" fill="rgb(224,200,8)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="527.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,521,058 samples, 0.02%)</title><rect x="90.8002%" y="501" width="0.0201%" height="15" fill="rgb(217,61,36)" fg:x="6865491667" fg:w="1521058"/><text x="91.0502%" y="511.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow (3,027,224 samples, 0.04%)</title><rect x="90.7899%" y="965" width="0.0400%" height="15" fill="rgb(206,35,45)" fg:x="6864712940" fg:w="3027224"/><text x="91.0399%" y="975.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (3,027,224 samples, 0.04%)</title><rect x="90.7899%" y="949" width="0.0400%" height="15" fill="rgb(217,65,33)" fg:x="6864712940" fg:w="3027224"/><text x="91.0399%" y="959.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow::_{{closure}} (3,027,224 samples, 0.04%)</title><rect x="90.7899%" y="933" width="0.0400%" height="15" fill="rgb(222,158,48)" fg:x="6864712940" fg:w="3027224"/><text x="91.0399%" y="943.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse (3,027,224 samples, 0.04%)</title><rect x="90.7899%" y="917" width="0.0400%" height="15" fill="rgb(254,2,54)" fg:x="6864712940" fg:w="3027224"/><text x="91.0399%" y="927.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,027,224 samples, 0.04%)</title><rect x="90.7899%" y="901" width="0.0400%" height="15" fill="rgb(250,143,38)" fg:x="6864712940" fg:w="3027224"/><text x="91.0399%" y="911.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,027,224 samples, 0.04%)</title><rect x="90.7899%" y="885" width="0.0400%" height="15" fill="rgb(248,25,0)" fg:x="6864712940" fg:w="3027224"/><text x="91.0399%" y="895.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,248,497 samples, 0.03%)</title><rect x="90.8002%" y="869" width="0.0297%" height="15" fill="rgb(206,152,27)" fg:x="6865491667" fg:w="2248497"/><text x="91.0502%" y="879.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,248,497 samples, 0.03%)</title><rect x="90.8002%" y="853" width="0.0297%" height="15" fill="rgb(240,77,30)" fg:x="6865491667" fg:w="2248497"/><text x="91.0502%" y="863.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,248,497 samples, 0.03%)</title><rect x="90.8002%" y="837" width="0.0297%" height="15" fill="rgb(231,5,3)" fg:x="6865491667" fg:w="2248497"/><text x="91.0502%" y="847.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,248,497 samples, 0.03%)</title><rect x="90.8002%" y="821" width="0.0297%" height="15" fill="rgb(207,226,32)" fg:x="6865491667" fg:w="2248497"/><text x="91.0502%" y="831.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,248,497 samples, 0.03%)</title><rect x="90.8002%" y="805" width="0.0297%" height="15" fill="rgb(222,207,47)" fg:x="6865491667" fg:w="2248497"/><text x="91.0502%" y="815.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,248,497 samples, 0.03%)</title><rect x="90.8002%" y="789" width="0.0297%" height="15" fill="rgb(229,115,45)" fg:x="6865491667" fg:w="2248497"/><text x="91.0502%" y="799.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::get (1,206,541 samples, 0.02%)</title><rect x="90.8536%" y="885" width="0.0160%" height="15" fill="rgb(224,191,6)" fg:x="6869532191" fg:w="1206541"/><text x="91.1036%" y="895.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_abbreviation (2,666,746 samples, 0.04%)</title><rect x="90.8536%" y="901" width="0.0353%" height="15" fill="rgb(230,227,24)" fg:x="6869532191" fg:w="2666746"/><text x="91.1036%" y="911.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (1,460,205 samples, 0.02%)</title><rect x="90.8696%" y="885" width="0.0193%" height="15" fill="rgb(228,80,19)" fg:x="6870738732" fg:w="1460205"/><text x="91.1196%" y="895.50"></text></g><g><title>gimli::leb128::read::unsigned (1,460,205 samples, 0.02%)</title><rect x="90.8696%" y="869" width="0.0193%" height="15" fill="rgb(247,229,0)" fg:x="6870738732" fg:w="1460205"/><text x="91.1196%" y="879.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow (5,063,625 samples, 0.07%)</title><rect x="90.8299%" y="965" width="0.0670%" height="15" fill="rgb(237,194,15)" fg:x="6867740164" fg:w="5063625"/><text x="91.0799%" y="975.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (5,063,625 samples, 0.07%)</title><rect x="90.8299%" y="949" width="0.0670%" height="15" fill="rgb(219,203,20)" fg:x="6867740164" fg:w="5063625"/><text x="91.0799%" y="959.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow::_{{closure}} (5,063,625 samples, 0.07%)</title><rect x="90.8299%" y="933" width="0.0670%" height="15" fill="rgb(234,128,8)" fg:x="6867740164" fg:w="5063625"/><text x="91.0799%" y="943.50"></text></g><g><title>addr2line::function::Functions&lt;R&gt;::parse (5,063,625 samples, 0.07%)</title><rect x="90.8299%" y="917" width="0.0670%" height="15" fill="rgb(248,202,8)" fg:x="6867740164" fg:w="5063625"/><text x="91.0799%" y="927.50"></text></g><g><title>backtrace::symbolize::gimli::resolve::_{{closure}} (19,367,289 samples, 0.26%)</title><rect x="90.6643%" y="1061" width="0.2561%" height="15" fill="rgb(206,104,37)" fg:x="6855213662" fg:w="19367289"/><text x="90.9143%" y="1071.50"></text></g><g><title>backtrace::symbolize::gimli::Context::find_frames (9,868,011 samples, 0.13%)</title><rect x="90.7899%" y="1045" width="0.1305%" height="15" fill="rgb(223,8,27)" fg:x="6864712940" fg:w="9868011"/><text x="91.0399%" y="1055.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (9,868,011 samples, 0.13%)</title><rect x="90.7899%" y="1029" width="0.1305%" height="15" fill="rgb(216,217,28)" fg:x="6864712940" fg:w="9868011"/><text x="91.0399%" y="1039.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location (9,868,011 samples, 0.13%)</title><rect x="90.7899%" y="1013" width="0.1305%" height="15" fill="rgb(249,199,1)" fg:x="6864712940" fg:w="9868011"/><text x="91.0399%" y="1023.50"></text></g><g><title>addr2line::lookup::LookupResult&lt;L&gt;::map (9,868,011 samples, 0.13%)</title><rect x="90.7899%" y="997" width="0.1305%" height="15" fill="rgb(240,85,17)" fg:x="6864712940" fg:w="9868011"/><text x="91.0399%" y="1007.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location::_{{closure}} (9,868,011 samples, 0.13%)</title><rect x="90.7899%" y="981" width="0.1305%" height="15" fill="rgb(206,108,45)" fg:x="6864712940" fg:w="9868011"/><text x="91.0399%" y="991.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_location (1,777,162 samples, 0.02%)</title><rect x="90.8969%" y="965" width="0.0235%" height="15" fill="rgb(245,210,41)" fg:x="6872803789" fg:w="1777162"/><text x="91.1469%" y="975.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::parse_lines (1,777,162 samples, 0.02%)</title><rect x="90.8969%" y="949" width="0.0235%" height="15" fill="rgb(206,13,37)" fg:x="6872803789" fg:w="1777162"/><text x="91.1469%" y="959.50"></text></g><g><title>addr2line::line::LazyLines::borrow (1,777,162 samples, 0.02%)</title><rect x="90.8969%" y="933" width="0.0235%" height="15" fill="rgb(250,61,18)" fg:x="6872803789" fg:w="1777162"/><text x="91.1469%" y="943.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (1,777,162 samples, 0.02%)</title><rect x="90.8969%" y="917" width="0.0235%" height="15" fill="rgb(235,172,48)" fg:x="6872803789" fg:w="1777162"/><text x="91.1469%" y="927.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (1,777,162 samples, 0.02%)</title><rect x="90.8969%" y="901" width="0.0235%" height="15" fill="rgb(249,201,17)" fg:x="6872803789" fg:w="1777162"/><text x="91.1469%" y="911.50"></text></g><g><title>addr2line::line::Lines::parse (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="885" width="0.0148%" height="15" fill="rgb(219,208,6)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="869" width="0.0148%" height="15" fill="rgb(248,31,23)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="853" width="0.0148%" height="15" fill="rgb(245,15,42)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="837" width="0.0148%" height="15" fill="rgb(222,217,39)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="821" width="0.0148%" height="15" fill="rgb(210,219,27)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="805" width="0.0148%" height="15" fill="rgb(252,166,36)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="789" width="0.0148%" height="15" fill="rgb(245,132,34)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="773" width="0.0148%" height="15" fill="rgb(236,54,3)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="783.50"></text></g><g><title>alloc::alloc::realloc (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="757" width="0.0148%" height="15" fill="rgb(241,173,43)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="767.50"></text></g><g><title>__rustc::__rdl_realloc (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="741" width="0.0148%" height="15" fill="rgb(215,190,9)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="751.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="725" width="0.0148%" height="15" fill="rgb(242,101,16)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="735.50"></text></g><g><title>realloc (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="709" width="0.0148%" height="15" fill="rgb(223,190,21)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="719.50"></text></g><g><title>[libc.so.6] (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="693" width="0.0148%" height="15" fill="rgb(215,228,25)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="703.50"></text></g><g><title>[unknown] (1,121,038 samples, 0.01%)</title><rect x="90.9056%" y="677" width="0.0148%" height="15" fill="rgb(225,36,22)" fg:x="6873459913" fg:w="1121038"/><text x="91.1556%" y="687.50"></text></g><g><title>pprof::profiler::ProfilerGuard::new (33,252,141 samples, 0.44%)</title><rect x="90.4849%" y="1269" width="0.4398%" height="15" fill="rgb(251,106,46)" fg:x="6841651294" fg:w="33252141"/><text x="90.7349%" y="1279.50"></text></g><g><title>pprof::profiler::ProfilerGuardBuilder::build (33,252,141 samples, 0.44%)</title><rect x="90.4849%" y="1253" width="0.4398%" height="15" fill="rgb(208,90,1)" fg:x="6841651294" fg:w="33252141"/><text x="90.7349%" y="1263.50"></text></g><g><title>pprof::profiler::trigger_lazy (33,252,141 samples, 0.44%)</title><rect x="90.4849%" y="1237" width="0.4398%" height="15" fill="rgb(243,10,4)" fg:x="6841651294" fg:w="33252141"/><text x="90.7349%" y="1247.50"></text></g><g><title>backtrace::capture::Backtrace::new (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1221" width="0.2604%" height="15" fill="rgb(212,137,27)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1231.50"></text></g><g><title>backtrace::capture::Backtrace::resolve (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1205" width="0.2604%" height="15" fill="rgb(231,220,49)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1189" width="0.2604%" height="15" fill="rgb(237,96,20)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1199.50"></text></g><g><title>core::ops::function::FnMut::call_mut (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1173" width="0.2604%" height="15" fill="rgb(239,229,30)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1183.50"></text></g><g><title>backtrace::capture::BacktraceFrame::resolve (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1157" width="0.2604%" height="15" fill="rgb(219,65,33)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1167.50"></text></g><g><title>backtrace::capture::Frame::resolve_symbols (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1141" width="0.2604%" height="15" fill="rgb(243,134,7)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1151.50"></text></g><g><title>backtrace::symbolize::resolve_frame (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1125" width="0.2604%" height="15" fill="rgb(216,177,54)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1135.50"></text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1109" width="0.2604%" height="15" fill="rgb(211,160,20)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1119.50"></text></g><g><title>backtrace::symbolize::gimli::resolve (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1093" width="0.2604%" height="15" fill="rgb(239,85,39)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1103.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (19,689,773 samples, 0.26%)</title><rect x="90.6643%" y="1077" width="0.2604%" height="15" fill="rgb(232,125,22)" fg:x="6855213662" fg:w="19689773"/><text x="90.9143%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;quick_xml::events::Event&gt; (919,879 samples, 0.01%)</title><rect x="90.9404%" y="1221" width="0.0122%" height="15" fill="rgb(244,57,34)" fg:x="6876091272" fg:w="919879"/><text x="91.1904%" y="1231.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (1,219,642 samples, 0.02%)</title><rect x="90.9717%" y="1205" width="0.0161%" height="15" fill="rgb(214,203,32)" fg:x="6878459433" fg:w="1219642"/><text x="91.2217%" y="1215.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (1,219,642 samples, 0.02%)</title><rect x="90.9717%" y="1189" width="0.0161%" height="15" fill="rgb(207,58,43)" fg:x="6878459433" fg:w="1219642"/><text x="91.2217%" y="1199.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (940,368 samples, 0.01%)</title><rect x="90.9754%" y="1173" width="0.0124%" height="15" fill="rgb(215,193,15)" fg:x="6878738707" fg:w="940368"/><text x="91.2254%" y="1183.50"></text></g><g><title>std::io::Write::write_all (940,368 samples, 0.01%)</title><rect x="90.9754%" y="1157" width="0.0124%" height="15" fill="rgb(232,15,44)" fg:x="6878738707" fg:w="940368"/><text x="91.2254%" y="1167.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (780,538 samples, 0.01%)</title><rect x="90.9775%" y="1141" width="0.0103%" height="15" fill="rgb(212,3,48)" fg:x="6878898537" fg:w="780538"/><text x="91.2275%" y="1151.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (780,538 samples, 0.01%)</title><rect x="90.9775%" y="1125" width="0.0103%" height="15" fill="rgb(218,128,7)" fg:x="6878898537" fg:w="780538"/><text x="91.2275%" y="1135.50"></text></g><g><title>std::sys::fs::unix::File::write (780,538 samples, 0.01%)</title><rect x="90.9775%" y="1109" width="0.0103%" height="15" fill="rgb(226,216,39)" fg:x="6878898537" fg:w="780538"/><text x="91.2275%" y="1119.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (780,538 samples, 0.01%)</title><rect x="90.9775%" y="1093" width="0.0103%" height="15" fill="rgb(243,47,51)" fg:x="6878898537" fg:w="780538"/><text x="91.2275%" y="1103.50"></text></g><g><title>std::sys::pal::unix::cvt (780,538 samples, 0.01%)</title><rect x="90.9775%" y="1077" width="0.0103%" height="15" fill="rgb(241,183,40)" fg:x="6878898537" fg:w="780538"/><text x="91.2275%" y="1087.50"></text></g><g><title>[libc.so.6] (1,076,482 samples, 0.01%)</title><rect x="90.9928%" y="1109" width="0.0142%" height="15" fill="rgb(231,217,32)" fg:x="6880055661" fg:w="1076482"/><text x="91.2428%" y="1119.50"></text></g><g><title>core::num::flt2dec::decoder::decode (940,368 samples, 0.01%)</title><rect x="91.0083%" y="1077" width="0.0124%" height="15" fill="rgb(229,61,38)" fg:x="6881228680" fg:w="940368"/><text x="91.2583%" y="1087.50"></text></g><g><title>&lt;f64 as core::num::dec2flt::float::RawFloat&gt;::classify (780,538 samples, 0.01%)</title><rect x="91.0105%" y="1061" width="0.0103%" height="15" fill="rgb(225,210,5)" fg:x="6881388510" fg:w="780538"/><text x="91.2605%" y="1071.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::classify (780,538 samples, 0.01%)</title><rect x="91.0105%" y="1045" width="0.0103%" height="15" fill="rgb(231,79,45)" fg:x="6881388510" fg:w="780538"/><text x="91.2605%" y="1055.50"></text></g><g><title>inferno::flamegraph::filled_rectangle (5,799,577 samples, 0.08%)</title><rect x="90.9608%" y="1221" width="0.0767%" height="15" fill="rgb(224,100,7)" fg:x="6877630293" fg:w="5799577"/><text x="91.2108%" y="1231.50"></text></g><g><title>str_stack::StrStack::write_fmt (3,750,795 samples, 0.05%)</title><rect x="90.9878%" y="1205" width="0.0496%" height="15" fill="rgb(241,198,18)" fg:x="6879679075" fg:w="3750795"/><text x="91.2378%" y="1215.50"></text></g><g><title>core::fmt::Write::write_fmt (3,750,795 samples, 0.05%)</title><rect x="90.9878%" y="1189" width="0.0496%" height="15" fill="rgb(252,97,53)" fg:x="6879679075" fg:w="3750795"/><text x="91.2378%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,750,795 samples, 0.05%)</title><rect x="90.9878%" y="1173" width="0.0496%" height="15" fill="rgb(220,88,7)" fg:x="6879679075" fg:w="3750795"/><text x="91.2378%" y="1183.50"></text></g><g><title>core::fmt::write (3,750,795 samples, 0.05%)</title><rect x="90.9878%" y="1157" width="0.0496%" height="15" fill="rgb(213,176,14)" fg:x="6879679075" fg:w="3750795"/><text x="91.2378%" y="1167.50"></text></g><g><title>core::fmt::run (3,374,209 samples, 0.04%)</title><rect x="90.9928%" y="1141" width="0.0446%" height="15" fill="rgb(246,73,7)" fg:x="6880055661" fg:w="3374209"/><text x="91.2428%" y="1151.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,374,209 samples, 0.04%)</title><rect x="90.9928%" y="1125" width="0.0446%" height="15" fill="rgb(245,64,36)" fg:x="6880055661" fg:w="3374209"/><text x="91.2428%" y="1135.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (2,269,019 samples, 0.03%)</title><rect x="91.0074%" y="1109" width="0.0300%" height="15" fill="rgb(245,80,10)" fg:x="6881160851" fg:w="2269019"/><text x="91.2574%" y="1119.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (2,201,190 samples, 0.03%)</title><rect x="91.0083%" y="1093" width="0.0291%" height="15" fill="rgb(232,107,50)" fg:x="6881228680" fg:w="2201190"/><text x="91.2583%" y="1103.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,236,214 samples, 0.02%)</title><rect x="91.0211%" y="1077" width="0.0163%" height="15" fill="rgb(253,3,0)" fg:x="6882193656" fg:w="1236214"/><text x="91.2711%" y="1087.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (1,236,214 samples, 0.02%)</title><rect x="91.0211%" y="1061" width="0.0163%" height="15" fill="rgb(212,99,53)" fg:x="6882193656" fg:w="1236214"/><text x="91.2711%" y="1071.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (779,125 samples, 0.01%)</title><rect x="91.0383%" y="1205" width="0.0103%" height="15" fill="rgb(249,111,54)" fg:x="6883497400" fg:w="779125"/><text x="91.2883%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,261,974 samples, 0.02%)</title><rect x="91.0487%" y="1205" width="0.0167%" height="15" fill="rgb(249,55,30)" fg:x="6884276525" fg:w="1261974"/><text x="91.2987%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,261,974 samples, 0.02%)</title><rect x="91.0487%" y="1189" width="0.0167%" height="15" fill="rgb(237,47,42)" fg:x="6884276525" fg:w="1261974"/><text x="91.2987%" y="1199.50"></text></g><g><title>inferno::flamegraph::svg::write_str::_{{closure}} (1,261,974 samples, 0.02%)</title><rect x="91.0487%" y="1173" width="0.0167%" height="15" fill="rgb(211,20,18)" fg:x="6884276525" fg:w="1261974"/><text x="91.2987%" y="1183.50"></text></g><g><title>inferno::flamegraph::svg::write_str (3,232,257 samples, 0.04%)</title><rect x="91.0375%" y="1221" width="0.0427%" height="15" fill="rgb(231,203,46)" fg:x="6883429870" fg:w="3232257"/><text x="91.2875%" y="1231.50"></text></g><g><title>str_stack::StrStack::write_fmt (1,123,628 samples, 0.01%)</title><rect x="91.0653%" y="1205" width="0.0149%" height="15" fill="rgb(237,142,3)" fg:x="6885538499" fg:w="1123628"/><text x="91.3153%" y="1215.50"></text></g><g><title>core::fmt::Write::write_fmt (1,123,628 samples, 0.01%)</title><rect x="91.0653%" y="1189" width="0.0149%" height="15" fill="rgb(241,107,1)" fg:x="6885538499" fg:w="1123628"/><text x="91.3153%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1,123,628 samples, 0.01%)</title><rect x="91.0653%" y="1173" width="0.0149%" height="15" fill="rgb(229,83,13)" fg:x="6885538499" fg:w="1123628"/><text x="91.3153%" y="1183.50"></text></g><g><title>core::fmt::write (1,123,628 samples, 0.01%)</title><rect x="91.0653%" y="1157" width="0.0149%" height="15" fill="rgb(241,91,40)" fg:x="6885538499" fg:w="1123628"/><text x="91.3153%" y="1167.50"></text></g><g><title>core::fmt::run (1,123,628 samples, 0.01%)</title><rect x="91.0653%" y="1141" width="0.0149%" height="15" fill="rgb(225,3,45)" fg:x="6885538499" fg:w="1123628"/><text x="91.3153%" y="1151.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1,123,628 samples, 0.01%)</title><rect x="91.0653%" y="1125" width="0.0149%" height="15" fill="rgb(244,223,14)" fg:x="6885538499" fg:w="1123628"/><text x="91.3153%" y="1135.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (764,752 samples, 0.01%)</title><rect x="91.0701%" y="1109" width="0.0101%" height="15" fill="rgb(224,124,37)" fg:x="6885897375" fg:w="764752"/><text x="91.3201%" y="1119.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (764,752 samples, 0.01%)</title><rect x="91.0701%" y="1093" width="0.0101%" height="15" fill="rgb(251,171,30)" fg:x="6885897375" fg:w="764752"/><text x="91.3201%" y="1103.50"></text></g><g><title>core::ops::function::FnMut::call_mut (764,752 samples, 0.01%)</title><rect x="91.0701%" y="1077" width="0.0101%" height="15" fill="rgb(236,46,54)" fg:x="6885897375" fg:w="764752"/><text x="91.3201%" y="1087.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (764,752 samples, 0.01%)</title><rect x="91.0701%" y="1061" width="0.0101%" height="15" fill="rgb(245,213,5)" fg:x="6885897375" fg:w="764752"/><text x="91.3201%" y="1071.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (764,752 samples, 0.01%)</title><rect x="91.0701%" y="1045" width="0.0101%" height="15" fill="rgb(230,144,27)" fg:x="6885897375" fg:w="764752"/><text x="91.3201%" y="1055.50"></text></g><g><title>inferno::flamegraph::write_container_start (2,150,603 samples, 0.03%)</title><rect x="91.0802%" y="1221" width="0.0284%" height="15" fill="rgb(220,86,6)" fg:x="6886662127" fg:w="2150603"/><text x="91.3302%" y="1231.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (1,682,692 samples, 0.02%)</title><rect x="91.0864%" y="1205" width="0.0223%" height="15" fill="rgb(240,20,13)" fg:x="6887130038" fg:w="1682692"/><text x="91.3364%" y="1215.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (1,269,663 samples, 0.02%)</title><rect x="91.0919%" y="1189" width="0.0168%" height="15" fill="rgb(217,89,34)" fg:x="6887543067" fg:w="1269663"/><text x="91.3419%" y="1199.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (1,269,663 samples, 0.02%)</title><rect x="91.0919%" y="1173" width="0.0168%" height="15" fill="rgb(229,13,5)" fg:x="6887543067" fg:w="1269663"/><text x="91.3419%" y="1183.50"></text></g><g><title>std::io::Write::write_all (1,269,663 samples, 0.02%)</title><rect x="91.0919%" y="1157" width="0.0168%" height="15" fill="rgb(244,67,35)" fg:x="6887543067" fg:w="1269663"/><text x="91.3419%" y="1167.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1,000,295 samples, 0.01%)</title><rect x="91.0954%" y="1141" width="0.0132%" height="15" fill="rgb(221,40,2)" fg:x="6887812435" fg:w="1000295"/><text x="91.3454%" y="1151.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,000,295 samples, 0.01%)</title><rect x="91.0954%" y="1125" width="0.0132%" height="15" fill="rgb(237,157,21)" fg:x="6887812435" fg:w="1000295"/><text x="91.3454%" y="1135.50"></text></g><g><title>std::sys::fs::unix::File::write (1,000,295 samples, 0.01%)</title><rect x="91.0954%" y="1109" width="0.0132%" height="15" fill="rgb(222,94,11)" fg:x="6887812435" fg:w="1000295"/><text x="91.3454%" y="1119.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,000,295 samples, 0.01%)</title><rect x="91.0954%" y="1093" width="0.0132%" height="15" fill="rgb(249,113,6)" fg:x="6887812435" fg:w="1000295"/><text x="91.3454%" y="1103.50"></text></g><g><title>std::sys::pal::unix::cvt (1,000,295 samples, 0.01%)</title><rect x="91.0954%" y="1077" width="0.0132%" height="15" fill="rgb(238,137,36)" fg:x="6887812435" fg:w="1000295"/><text x="91.3454%" y="1087.50"></text></g><g><title>quick_xml::events::BytesText::new (1,085,607 samples, 0.01%)</title><rect x="91.1086%" y="1221" width="0.0144%" height="15" fill="rgb(210,102,26)" fg:x="6888812730" fg:w="1085607"/><text x="91.3586%" y="1231.50"></text></g><g><title>quick_xml::escapei::escape (1,085,607 samples, 0.01%)</title><rect x="91.1086%" y="1205" width="0.0144%" height="15" fill="rgb(218,30,30)" fg:x="6888812730" fg:w="1085607"/><text x="91.3586%" y="1215.50"></text></g><g><title>quick_xml::escapei::_escape (1,085,607 samples, 0.01%)</title><rect x="91.1086%" y="1189" width="0.0144%" height="15" fill="rgb(214,67,26)" fg:x="6888812730" fg:w="1085607"/><text x="91.3586%" y="1199.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (2,304,497 samples, 0.03%)</title><rect x="91.1230%" y="1221" width="0.0305%" height="15" fill="rgb(251,9,53)" fg:x="6889898337" fg:w="2304497"/><text x="91.3730%" y="1231.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (1,642,606 samples, 0.02%)</title><rect x="91.1318%" y="1205" width="0.0217%" height="15" fill="rgb(228,204,25)" fg:x="6890560228" fg:w="1642606"/><text x="91.3818%" y="1215.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (1,642,606 samples, 0.02%)</title><rect x="91.1318%" y="1189" width="0.0217%" height="15" fill="rgb(207,153,8)" fg:x="6890560228" fg:w="1642606"/><text x="91.3818%" y="1199.50"></text></g><g><title>std::io::Write::write_all (1,147,537 samples, 0.02%)</title><rect x="91.1383%" y="1173" width="0.0152%" height="15" fill="rgb(242,9,16)" fg:x="6891055297" fg:w="1147537"/><text x="91.3883%" y="1183.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1,123,685 samples, 0.01%)</title><rect x="91.1386%" y="1157" width="0.0149%" height="15" fill="rgb(217,211,10)" fg:x="6891079149" fg:w="1123685"/><text x="91.3886%" y="1167.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1,123,685 samples, 0.01%)</title><rect x="91.1386%" y="1141" width="0.0149%" height="15" fill="rgb(219,228,52)" fg:x="6891079149" fg:w="1123685"/><text x="91.3886%" y="1151.50"></text></g><g><title>std::sys::fs::unix::File::write (1,123,685 samples, 0.01%)</title><rect x="91.1386%" y="1125" width="0.0149%" height="15" fill="rgb(231,92,29)" fg:x="6891079149" fg:w="1123685"/><text x="91.3886%" y="1135.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,123,685 samples, 0.01%)</title><rect x="91.1386%" y="1109" width="0.0149%" height="15" fill="rgb(232,8,23)" fg:x="6891079149" fg:w="1123685"/><text x="91.3886%" y="1119.50"></text></g><g><title>std::sys::pal::unix::cvt (1,123,685 samples, 0.01%)</title><rect x="91.1386%" y="1093" width="0.0149%" height="15" fill="rgb(216,211,34)" fg:x="6891079149" fg:w="1123685"/><text x="91.3886%" y="1103.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (926,925 samples, 0.01%)</title><rect x="91.1538%" y="1125" width="0.0123%" height="15" fill="rgb(236,151,0)" fg:x="6892228014" fg:w="926925"/><text x="91.4038%" y="1135.50"></text></g><g><title>core::fmt::Write::write_fmt (2,456,060 samples, 0.03%)</title><rect x="91.1538%" y="1205" width="0.0325%" height="15" fill="rgb(209,168,3)" fg:x="6892228014" fg:w="2456060"/><text x="91.4038%" y="1215.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,456,060 samples, 0.03%)</title><rect x="91.1538%" y="1189" width="0.0325%" height="15" fill="rgb(208,129,28)" fg:x="6892228014" fg:w="2456060"/><text x="91.4038%" y="1199.50"></text></g><g><title>core::fmt::write (2,456,060 samples, 0.03%)</title><rect x="91.1538%" y="1173" width="0.0325%" height="15" fill="rgb(229,78,22)" fg:x="6892228014" fg:w="2456060"/><text x="91.4038%" y="1183.50"></text></g><g><title>core::fmt::run (2,456,060 samples, 0.03%)</title><rect x="91.1538%" y="1157" width="0.0325%" height="15" fill="rgb(228,187,13)" fg:x="6892228014" fg:w="2456060"/><text x="91.4038%" y="1167.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,456,060 samples, 0.03%)</title><rect x="91.1538%" y="1141" width="0.0325%" height="15" fill="rgb(240,119,24)" fg:x="6892228014" fg:w="2456060"/><text x="91.4038%" y="1151.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (830,201 samples, 0.01%)</title><rect x="91.1753%" y="1125" width="0.0110%" height="15" fill="rgb(209,194,42)" fg:x="6893853873" fg:w="830201"/><text x="91.4253%" y="1135.50"></text></g><g><title>pprof::report::flamegraph::&lt;impl pprof::report::Report&gt;::flamegraph (20,024,048 samples, 0.26%)</title><rect x="90.9247%" y="1269" width="0.2648%" height="15" fill="rgb(247,200,46)" fg:x="6874903435" fg:w="20024048"/><text x="91.1747%" y="1279.50"></text></g><g><title>pprof::report::flamegraph::&lt;impl pprof::report::Report&gt;::flamegraph_with_options (20,024,048 samples, 0.26%)</title><rect x="90.9247%" y="1253" width="0.2648%" height="15" fill="rgb(218,76,16)" fg:x="6874903435" fg:w="20024048"/><text x="91.1747%" y="1263.50"></text></g><g><title>inferno::flamegraph::from_lines (20,024,048 samples, 0.26%)</title><rect x="90.9247%" y="1237" width="0.2648%" height="15" fill="rgb(225,21,48)" fg:x="6874903435" fg:w="20024048"/><text x="91.1747%" y="1247.50"></text></g><g><title>str_stack::StrStack::write_fmt (2,699,469 samples, 0.04%)</title><rect x="91.1538%" y="1221" width="0.0357%" height="15" fill="rgb(239,223,50)" fg:x="6892228014" fg:w="2699469"/><text x="91.4038%" y="1231.50"></text></g><g><title>&lt;ndarray::iterators::Iter&lt;A,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,844,282 samples, 0.45%)</title><rect x="92.6749%" y="1141" width="0.4476%" height="15" fill="rgb(244,45,21)" fg:x="7007235899" fg:w="33844282"/><text x="92.9249%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,844,282 samples, 0.45%)</title><rect x="92.6749%" y="1125" width="0.4476%" height="15" fill="rgb(232,33,43)" fg:x="7007235899" fg:w="33844282"/><text x="92.9249%" y="1135.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (33,844,282 samples, 0.45%)</title><rect x="92.6749%" y="1109" width="0.4476%" height="15" fill="rgb(209,8,3)" fg:x="7007235899" fg:w="33844282"/><text x="92.9249%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (35,372,882 samples, 0.47%)</title><rect x="92.6749%" y="1157" width="0.4678%" height="15" fill="rgb(214,25,53)" fg:x="7007235899" fg:w="35372882"/><text x="92.9249%" y="1167.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1,528,600 samples, 0.02%)</title><rect x="93.1225%" y="1141" width="0.0202%" height="15" fill="rgb(254,186,54)" fg:x="7041080181" fg:w="1528600"/><text x="93.3725%" y="1151.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (1,528,600 samples, 0.02%)</title><rect x="93.1225%" y="1125" width="0.0202%" height="15" fill="rgb(208,174,49)" fg:x="7041080181" fg:w="1528600"/><text x="93.3725%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1,366,011 samples, 0.02%)</title><rect x="93.1427%" y="1157" width="0.0181%" height="15" fill="rgb(233,191,51)" fg:x="7042608781" fg:w="1366011"/><text x="93.3927%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (208,712,066 samples, 2.76%)</title><rect x="91.3067%" y="1173" width="2.7603%" height="15" fill="rgb(222,134,10)" fg:x="6903790205" fg:w="208712066"/><text x="91.5567%" y="1183.50">al..</text></g><g><title>core::ptr::write (68,527,479 samples, 0.91%)</title><rect x="93.1608%" y="1157" width="0.9063%" height="15" fill="rgb(230,226,20)" fg:x="7043974792" fg:w="68527479"/><text x="93.4108%" y="1167.50"></text></g><g><title>[unknown] (54,052,446 samples, 0.71%)</title><rect x="93.3522%" y="1141" width="0.7149%" height="15" fill="rgb(251,111,25)" fg:x="7058449825" fg:w="54052446"/><text x="93.6022%" y="1151.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (43,278,334 samples, 0.57%)</title><rect x="94.0671%" y="885" width="0.5724%" height="15" fill="rgb(224,40,46)" fg:x="7112502271" fg:w="43278334"/><text x="94.3171%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (178,577,662 samples, 2.36%)</title><rect x="94.0671%" y="917" width="2.3618%" height="15" fill="rgb(236,108,47)" fg:x="7112502271" fg:w="178577662"/><text x="94.3171%" y="927.50">co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (178,577,662 samples, 2.36%)</title><rect x="94.0671%" y="901" width="2.3618%" height="15" fill="rgb(234,93,0)" fg:x="7112502271" fg:w="178577662"/><text x="94.3171%" y="911.50">al..</text></g><g><title>core::ptr::write (135,299,328 samples, 1.79%)</title><rect x="94.6395%" y="885" width="1.7894%" height="15" fill="rgb(224,213,32)" fg:x="7155780605" fg:w="135299328"/><text x="94.8895%" y="895.50">c..</text></g><g><title>[unknown] (34,273,825 samples, 0.45%)</title><rect x="95.9756%" y="869" width="0.4533%" height="15" fill="rgb(251,11,48)" fg:x="7256806108" fg:w="34273825"/><text x="96.2256%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (430,932,107 samples, 5.70%)</title><rect x="91.1895%" y="1253" width="5.6993%" height="15" fill="rgb(236,173,5)" fg:x="6894927483" fg:w="430932107"/><text x="91.4395%" y="1263.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (430,932,107 samples, 5.70%)</title><rect x="91.1895%" y="1237" width="5.6993%" height="15" fill="rgb(230,95,12)" fg:x="6894927483" fg:w="430932107"/><text x="91.4395%" y="1247.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (430,932,107 samples, 5.70%)</title><rect x="91.1895%" y="1221" width="5.6993%" height="15" fill="rgb(232,209,1)" fg:x="6894927483" fg:w="430932107"/><text x="91.4395%" y="1231.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (430,932,107 samples, 5.70%)</title><rect x="91.1895%" y="1205" width="5.6993%" height="15" fill="rgb(232,6,1)" fg:x="6894927483" fg:w="430932107"/><text x="91.4395%" y="1215.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (422,069,385 samples, 5.58%)</title><rect x="91.3067%" y="1189" width="5.5821%" height="15" fill="rgb(210,224,50)" fg:x="6903790205" fg:w="422069385"/><text x="91.5567%" y="1199.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1173" width="2.8218%" height="15" fill="rgb(228,127,35)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1183.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1157" width="2.8218%" height="15" fill="rgb(245,102,45)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1167.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1141" width="2.8218%" height="15" fill="rgb(214,1,49)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1151.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1125" width="2.8218%" height="15" fill="rgb(226,163,40)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1135.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1109" width="2.8218%" height="15" fill="rgb(239,212,28)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1119.50">co..</text></g><g><title>profile::demean_impl::_{{closure}} (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1093" width="2.8218%" height="15" fill="rgb(220,20,13)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1103.50">pr..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1077" width="2.8218%" height="15" fill="rgb(210,164,35)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1087.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1061" width="2.8218%" height="15" fill="rgb(248,109,41)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1071.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1045" width="2.8218%" height="15" fill="rgb(238,23,50)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1055.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1029" width="2.8218%" height="15" fill="rgb(211,48,49)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1039.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="1013" width="2.8218%" height="15" fill="rgb(223,36,21)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1023.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="997" width="2.8218%" height="15" fill="rgb(207,123,46)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="1007.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="981" width="2.8218%" height="15" fill="rgb(240,218,32)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="991.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="965" width="2.8218%" height="15" fill="rgb(252,5,43)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="975.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="949" width="2.8218%" height="15" fill="rgb(252,84,19)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="959.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (213,357,319 samples, 2.82%)</title><rect x="94.0671%" y="933" width="2.8218%" height="15" fill="rgb(243,152,39)" fg:x="7112502271" fg:w="213357319"/><text x="94.3171%" y="943.50">co..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (34,779,657 samples, 0.46%)</title><rect x="96.4289%" y="917" width="0.4600%" height="15" fill="rgb(234,160,15)" fg:x="7291079933" fg:w="34779657"/><text x="96.6789%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (98,452,829 samples, 1.30%)</title><rect x="96.8889%" y="1253" width="1.3021%" height="15" fill="rgb(237,34,20)" fg:x="7325859590" fg:w="98452829"/><text x="97.1389%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (98,452,829 samples, 1.30%)</title><rect x="96.8889%" y="1237" width="1.3021%" height="15" fill="rgb(229,97,13)" fg:x="7325859590" fg:w="98452829"/><text x="97.1389%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (98,452,829 samples, 1.30%)</title><rect x="96.8889%" y="1221" width="1.3021%" height="15" fill="rgb(234,71,50)" fg:x="7325859590" fg:w="98452829"/><text x="97.1389%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (98,452,829 samples, 1.30%)</title><rect x="96.8889%" y="1205" width="1.3021%" height="15" fill="rgb(253,155,4)" fg:x="7325859590" fg:w="98452829"/><text x="97.1389%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (98,452,829 samples, 1.30%)</title><rect x="96.8889%" y="1189" width="1.3021%" height="15" fill="rgb(222,185,37)" fg:x="7325859590" fg:w="98452829"/><text x="97.1389%" y="1199.50"></text></g><g><title>&lt;ndarray::iterators::Iter&lt;A,D&gt; as core::iter::traits::iterator::Iterator&gt;::fold (98,452,829 samples, 1.30%)</title><rect x="96.8889%" y="1173" width="1.3021%" height="15" fill="rgb(251,177,13)" fg:x="7325859590" fg:w="98452829"/><text x="97.1389%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (98,452,829 samples, 1.30%)</title><rect x="96.8889%" y="1157" width="1.3021%" height="15" fill="rgb(250,179,40)" fg:x="7325859590" fg:w="98452829"/><text x="97.1389%" y="1167.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (75,641,586 samples, 1.00%)</title><rect x="97.1905%" y="1141" width="1.0004%" height="15" fill="rgb(242,44,2)" fg:x="7348670833" fg:w="75641586"/><text x="97.4405%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::_{{closure}} (75,641,586 samples, 1.00%)</title><rect x="97.1905%" y="1125" width="1.0004%" height="15" fill="rgb(216,177,13)" fg:x="7348670833" fg:w="75641586"/><text x="97.4405%" y="1135.50"></text></g><g><title>core::cmp::max_by (75,641,586 samples, 1.00%)</title><rect x="97.1905%" y="1109" width="1.0004%" height="15" fill="rgb(216,106,43)" fg:x="7348670833" fg:w="75641586"/><text x="97.4405%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (24,330,812 samples, 0.32%)</title><rect x="99.2213%" y="1237" width="0.3218%" height="15" fill="rgb(216,183,2)" fg:x="7502220955" fg:w="24330812"/><text x="99.4713%" y="1247.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (24,330,812 samples, 0.32%)</title><rect x="99.2213%" y="1221" width="0.3218%" height="15" fill="rgb(249,75,3)" fg:x="7502220955" fg:w="24330812"/><text x="99.4713%" y="1231.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (24,330,812 samples, 0.32%)</title><rect x="99.2213%" y="1205" width="0.3218%" height="15" fill="rgb(219,67,39)" fg:x="7502220955" fg:w="24330812"/><text x="99.4713%" y="1215.50"></text></g><g><title>profile::internal::calc_group_weights (131,823,517 samples, 1.74%)</title><rect x="98.1909%" y="1253" width="1.7434%" height="15" fill="rgb(253,228,2)" fg:x="7424312419" fg:w="131823517"/><text x="98.4409%" y="1263.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (29,584,169 samples, 0.39%)</title><rect x="99.5431%" y="1237" width="0.3913%" height="15" fill="rgb(235,138,27)" fg:x="7526551767" fg:w="29584169"/><text x="99.7931%" y="1247.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (29,584,169 samples, 0.39%)</title><rect x="99.5431%" y="1221" width="0.3913%" height="15" fill="rgb(236,97,51)" fg:x="7526551767" fg:w="29584169"/><text x="99.7931%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (29,584,169 samples, 0.39%)</title><rect x="99.5431%" y="1205" width="0.3913%" height="15" fill="rgb(240,80,30)" fg:x="7526551767" fg:w="29584169"/><text x="99.7931%" y="1215.50"></text></g><g><title>_start (2,536,579,628 samples, 33.55%)</title><rect x="66.3968%" y="1381" width="33.5478%" height="15" fill="rgb(230,178,19)" fg:x="5020326796" fg:w="2536579628"/><text x="66.6468%" y="1391.50">_start</text></g><g><title>__libc_start_main (2,536,579,628 samples, 33.55%)</title><rect x="66.3968%" y="1365" width="33.5478%" height="15" fill="rgb(210,190,27)" fg:x="5020326796" fg:w="2536579628"/><text x="66.6468%" y="1375.50">__libc_start_main</text></g><g><title>[libc.so.6] (2,536,579,628 samples, 33.55%)</title><rect x="66.3968%" y="1349" width="33.5478%" height="15" fill="rgb(222,107,31)" fg:x="5020326796" fg:w="2536579628"/><text x="66.6468%" y="1359.50">[libc.so.6]</text></g><g><title>main (2,536,579,628 samples, 33.55%)</title><rect x="66.3968%" y="1333" width="33.5478%" height="15" fill="rgb(216,127,34)" fg:x="5020326796" fg:w="2536579628"/><text x="66.6468%" y="1343.50">main</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,536,078,124 samples, 33.54%)</title><rect x="66.4034%" y="1317" width="33.5411%" height="15" fill="rgb(234,116,52)" fg:x="5020828300" fg:w="2536078124"/><text x="66.6534%" y="1327.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,536,078,124 samples, 33.54%)</title><rect x="66.4034%" y="1301" width="33.5411%" height="15" fill="rgb(222,124,15)" fg:x="5020828300" fg:w="2536078124"/><text x="66.6534%" y="1311.50">core::ops::function::FnOnce::call_once</text></g><g><title>profile::main (2,536,078,124 samples, 33.54%)</title><rect x="66.4034%" y="1285" width="33.5411%" height="15" fill="rgb(231,179,28)" fg:x="5020828300" fg:w="2536078124"/><text x="66.6534%" y="1295.50">profile::main</text></g><g><title>profile::demean_impl (661,978,941 samples, 8.76%)</title><rect x="91.1895%" y="1269" width="8.7551%" height="15" fill="rgb(226,93,45)" fg:x="6894927483" fg:w="661978941"/><text x="91.4395%" y="1279.50">profile::dem..</text></g><g><title>rayon::iter::ParallelIterator::for_each (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1253" width="0.0102%" height="15" fill="rgb(215,8,51)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1263.50"></text></g><g><title>rayon::iter::for_each::for_each (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1237" width="0.0102%" height="15" fill="rgb(223,106,5)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1247.50"></text></g><g><title>&lt;rayon::iter::enumerate::Enumerate&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1221" width="0.0102%" height="15" fill="rgb(250,191,5)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1205" width="0.0102%" height="15" fill="rgb(242,132,44)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1215.50"></text></g><g><title>&lt;rayon::iter::enumerate::Enumerate&lt;I&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1189" width="0.0102%" height="15" fill="rgb(251,152,29)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1199.50"></text></g><g><title>&lt;ndarray::parallel::par::Parallel&lt;ndarray::iterators::AxisIterMut&lt;A,D&gt;&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1173" width="0.0102%" height="15" fill="rgb(218,179,5)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1183.50"></text></g><g><title>&lt;&lt;rayon::iter::enumerate::Enumerate&lt;I&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer::Callback&lt;CB&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1157" width="0.0102%" height="15" fill="rgb(227,67,19)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1167.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1141" width="0.0102%" height="15" fill="rgb(233,119,31)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1125" width="0.0102%" height="15" fill="rgb(241,120,22)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::new (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1109" width="0.0102%" height="15" fill="rgb(224,102,30)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Splitter::new (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1093" width="0.0102%" height="15" fill="rgb(210,164,37)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1103.50"></text></g><g><title>rayon_core::current_num_threads (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1077" width="0.0102%" height="15" fill="rgb(226,191,16)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1087.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1061" width="0.0102%" height="15" fill="rgb(214,40,45)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1071.50"></text></g><g><title>rayon_core::registry::global_registry (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1045" width="0.0102%" height="15" fill="rgb(244,29,26)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1055.50"></text></g><g><title>rayon_core::registry::set_global_registry (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1029" width="0.0102%" height="15" fill="rgb(216,16,5)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1039.50"></text></g><g><title>std::sync::poison::once::Once::call_once (770,488 samples, 0.01%)</title><rect x="99.9344%" y="1013" width="0.0102%" height="15" fill="rgb(249,76,35)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1023.50"></text></g><g><title>std::sys::sync::once::futex::Once::call (770,488 samples, 0.01%)</title><rect x="99.9344%" y="997" width="0.0102%" height="15" fill="rgb(207,11,44)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="1007.50"></text></g><g><title>std::sync::poison::once::Once::call_once::_{{closure}} (770,488 samples, 0.01%)</title><rect x="99.9344%" y="981" width="0.0102%" height="15" fill="rgb(228,190,49)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="991.50"></text></g><g><title>rayon_core::registry::set_global_registry::_{{closure}} (770,488 samples, 0.01%)</title><rect x="99.9344%" y="965" width="0.0102%" height="15" fill="rgb(214,173,12)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (770,488 samples, 0.01%)</title><rect x="99.9344%" y="949" width="0.0102%" height="15" fill="rgb(218,26,35)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="959.50"></text></g><g><title>rayon_core::registry::default_global_registry (770,488 samples, 0.01%)</title><rect x="99.9344%" y="933" width="0.0102%" height="15" fill="rgb(220,200,19)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="943.50"></text></g><g><title>rayon_core::registry::Registry::new (770,488 samples, 0.01%)</title><rect x="99.9344%" y="917" width="0.0102%" height="15" fill="rgb(239,95,49)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="927.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn (770,488 samples, 0.01%)</title><rect x="99.9344%" y="901" width="0.0102%" height="15" fill="rgb(235,85,53)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="911.50"></text></g><g><title>std::thread::Builder::spawn (770,488 samples, 0.01%)</title><rect x="99.9344%" y="885" width="0.0102%" height="15" fill="rgb(233,133,31)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="895.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (770,488 samples, 0.01%)</title><rect x="99.9344%" y="869" width="0.0102%" height="15" fill="rgb(218,25,20)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="879.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (770,488 samples, 0.01%)</title><rect x="99.9344%" y="853" width="0.0102%" height="15" fill="rgb(252,210,38)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="863.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (770,488 samples, 0.01%)</title><rect x="99.9344%" y="837" width="0.0102%" height="15" fill="rgb(242,134,21)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="847.50"></text></g><g><title>[libc.so.6] (770,488 samples, 0.01%)</title><rect x="99.9344%" y="821" width="0.0102%" height="15" fill="rgb(213,28,48)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="831.50"></text></g><g><title>perf_signal_handler (770,488 samples, 0.01%)</title><rect x="99.9344%" y="805" width="0.0102%" height="15" fill="rgb(250,196,2)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="815.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (770,488 samples, 0.01%)</title><rect x="99.9344%" y="789" width="0.0102%" height="15" fill="rgb(227,5,17)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="799.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (770,488 samples, 0.01%)</title><rect x="99.9344%" y="773" width="0.0102%" height="15" fill="rgb(221,226,24)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="783.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (770,488 samples, 0.01%)</title><rect x="99.9344%" y="757" width="0.0102%" height="15" fill="rgb(211,5,48)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="767.50"></text></g><g><title>_Unwind_Backtrace (770,488 samples, 0.01%)</title><rect x="99.9344%" y="741" width="0.0102%" height="15" fill="rgb(219,150,6)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="751.50"></text></g><g><title>[libgcc_s.so.1] (770,488 samples, 0.01%)</title><rect x="99.9344%" y="725" width="0.0102%" height="15" fill="rgb(251,46,16)" fg:x="7556135936" fg:w="770488"/><text x="100.1844%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Collector&lt;pprof::frames::UnresolvedFrames&gt;&gt; (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1381" width="0.0275%" height="15" fill="rgb(220,204,40)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::HashCounter&lt;pprof::frames::UnresolvedFrames&gt;&gt; (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1365" width="0.0275%" height="15" fill="rgb(211,85,2)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt;&gt; (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1349" width="0.0275%" height="15" fill="rgb(229,17,7)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt; (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1333" width="0.0275%" height="15" fill="rgb(239,72,28)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;&gt; (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1317" width="0.0275%" height="15" fill="rgb(230,47,54)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt;&gt; (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1301" width="0.0275%" height="15" fill="rgb(214,50,8)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1285" width="0.0275%" height="15" fill="rgb(216,198,43)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1269" width="0.0275%" height="15" fill="rgb(234,20,35)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1253" width="0.0275%" height="15" fill="rgb(254,45,19)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1263.50"></text></g><g><title>__rustc::__rdl_dealloc (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1237" width="0.0275%" height="15" fill="rgb(219,14,44)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1247.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1221" width="0.0275%" height="15" fill="rgb(217,220,26)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1231.50"></text></g><g><title>cfree (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1205" width="0.0275%" height="15" fill="rgb(213,158,28)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1215.50"></text></g><g><title>[libc.so.6] (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1189" width="0.0275%" height="15" fill="rgb(252,51,52)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1199.50"></text></g><g><title>[libc.so.6] (2,079,081 samples, 0.03%)</title><rect x="99.9446%" y="1173" width="0.0275%" height="15" fill="rgb(246,89,16)" fg:x="7556906424" fg:w="2079081"/><text x="100.1946%" y="1183.50"></text></g><g><title>all (7,561,096,643 samples, 100%)</title><rect x="0.0000%" y="1413" width="100.0000%" height="15" fill="rgb(216,158,49)" fg:x="0" fg:w="7561096643"/><text x="0.2500%" y="1423.50"></text></g><g><title>profile (7,561,096,643 samples, 100.00%)</title><rect x="0.0000%" y="1397" width="100.0000%" height="15" fill="rgb(236,107,19)" fg:x="0" fg:w="7561096643"/><text x="0.2500%" y="1407.50">profile</text></g><g><title>write (2,111,138 samples, 0.03%)</title><rect x="99.9721%" y="1381" width="0.0279%" height="15" fill="rgb(228,185,30)" fg:x="7558985505" fg:w="2111138"/><text x="100.2221%" y="1391.50"></text></g></svg></svg>