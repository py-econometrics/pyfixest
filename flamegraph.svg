<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="8182" onload="init(evt)" viewBox="0 0 1200 8182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="8182" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="8165.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="8165.00"> </text><svg id="frames" x="10" width="1180" total_samples="326673963"><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="8101" width="0.5174%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="8111.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="8085" width="0.5174%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="8095.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="8069" width="0.5174%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="8079.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="8053" width="0.5174%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="8063.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="8037" width="0.5174%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="8047.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="8021" width="0.5174%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="8031.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="8005" width="0.5174%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="8015.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7989" width="0.5174%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7999.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7973" width="0.5174%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7983.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7957" width="0.5174%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7967.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7941" width="0.5174%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7951.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7925" width="0.5174%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7935.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7909" width="0.5174%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7919.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7893" width="0.5174%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7903.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7877" width="0.5174%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7887.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7861" width="0.5174%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7871.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7845" width="0.5174%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7855.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7829" width="0.5174%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7839.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7813" width="0.5174%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7823.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7797" width="0.5174%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7807.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7781" width="0.5174%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7791.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7765" width="0.5174%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7775.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7749" width="0.5174%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7759.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7733" width="0.5174%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7743.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7717" width="0.5174%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7727.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7701" width="0.5174%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7711.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7685" width="0.5174%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7695.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7669" width="0.5174%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7679.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7653" width="0.5174%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7663.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7637" width="0.5174%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7647.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7621" width="0.5174%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7631.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7605" width="0.5174%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7615.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7589" width="0.5174%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7599.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7573" width="0.5174%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7583.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7557" width="0.5174%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7567.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7541" width="0.5174%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7551.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7525" width="0.5174%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7535.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7509" width="0.5174%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7519.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7493" width="0.5174%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7503.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7477" width="0.5174%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7487.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7461" width="0.5174%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7471.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7445" width="0.5174%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7455.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7429" width="0.5174%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7439.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7413" width="0.5174%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7423.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7397" width="0.5174%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7407.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7381" width="0.5174%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7391.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7365" width="0.5174%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7375.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7349" width="0.5174%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7359.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7333" width="0.5174%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7343.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7317" width="0.5174%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7327.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7301" width="0.5174%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7311.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7285" width="0.5174%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7295.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7269" width="0.5174%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7279.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7253" width="0.5174%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7237" width="0.5174%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7247.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7221" width="0.5174%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7231.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7205" width="0.5174%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7215.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7189" width="0.5174%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7199.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7173" width="0.5174%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7183.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7157" width="0.5174%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7167.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7141" width="0.5174%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7151.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7125" width="0.5174%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7135.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7109" width="0.5174%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7119.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7093" width="0.5174%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7103.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7077" width="0.5174%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7087.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7061" width="0.5174%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7045" width="0.5174%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7055.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7029" width="0.5174%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7039.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="7013" width="0.5174%" height="15" fill="rgb(246,177,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7023.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6997" width="0.5174%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="7007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6981" width="0.5174%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6991.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6965" width="0.5174%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6975.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6949" width="0.5174%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6959.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6933" width="0.5174%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6917" width="0.5174%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6927.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6901" width="0.5174%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6911.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6885" width="0.5174%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6895.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6869" width="0.5174%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6853" width="0.5174%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6863.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6837" width="0.5174%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6847.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6821" width="0.5174%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6831.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6805" width="0.5174%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6789" width="0.5174%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6799.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6773" width="0.5174%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6783.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6757" width="0.5174%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6767.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6741" width="0.5174%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6725" width="0.5174%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6735.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6709" width="0.5174%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6719.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6693" width="0.5174%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6703.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6677" width="0.5174%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6661" width="0.5174%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6671.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6645" width="0.5174%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6629" width="0.5174%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6639.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6613" width="0.5174%" height="15" fill="rgb(230,116,27)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6597" width="0.5174%" height="15" fill="rgb(228,99,48)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6607.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6581" width="0.5174%" height="15" fill="rgb(253,11,6)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6565" width="0.5174%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6575.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6549" width="0.5174%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6533" width="0.5174%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6543.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6517" width="0.5174%" height="15" fill="rgb(216,164,2)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6501" width="0.5174%" height="15" fill="rgb(220,129,5)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6511.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6485" width="0.5174%" height="15" fill="rgb(242,17,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6469" width="0.5174%" height="15" fill="rgb(242,107,0)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6479.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6453" width="0.5174%" height="15" fill="rgb(251,28,31)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6437" width="0.5174%" height="15" fill="rgb(233,223,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6447.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6421" width="0.5174%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6405" width="0.5174%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6415.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6389" width="0.5174%" height="15" fill="rgb(244,5,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6373" width="0.5174%" height="15" fill="rgb(226,81,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6383.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6357" width="0.5174%" height="15" fill="rgb(247,70,30)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6341" width="0.5174%" height="15" fill="rgb(212,68,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6351.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6325" width="0.5174%" height="15" fill="rgb(240,187,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6335.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6309" width="0.5174%" height="15" fill="rgb(223,113,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6319.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6293" width="0.5174%" height="15" fill="rgb(206,192,2)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6303.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6277" width="0.5174%" height="15" fill="rgb(241,108,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6287.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6261" width="0.5174%" height="15" fill="rgb(247,173,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6271.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6245" width="0.5174%" height="15" fill="rgb(224,114,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6255.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6229" width="0.5174%" height="15" fill="rgb(245,159,27)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6239.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6213" width="0.5174%" height="15" fill="rgb(245,172,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6223.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6197" width="0.5174%" height="15" fill="rgb(236,23,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6207.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6181" width="0.5174%" height="15" fill="rgb(205,117,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6191.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6165" width="0.5174%" height="15" fill="rgb(237,72,25)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6175.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6149" width="0.5174%" height="15" fill="rgb(244,70,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6159.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6133" width="0.5174%" height="15" fill="rgb(217,125,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6143.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6117" width="0.5174%" height="15" fill="rgb(235,36,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6127.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6101" width="0.5174%" height="15" fill="rgb(251,123,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6111.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6085" width="0.5174%" height="15" fill="rgb(221,13,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6095.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6069" width="0.5174%" height="15" fill="rgb(238,131,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6079.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6053" width="0.5174%" height="15" fill="rgb(211,50,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6063.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6037" width="0.5174%" height="15" fill="rgb(245,182,24)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6047.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6021" width="0.5174%" height="15" fill="rgb(242,14,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6031.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="6005" width="0.5174%" height="15" fill="rgb(246,228,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="6015.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5989" width="0.5174%" height="15" fill="rgb(213,55,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5999.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5973" width="0.5174%" height="15" fill="rgb(209,9,3)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5983.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5957" width="0.5174%" height="15" fill="rgb(230,59,30)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5967.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5941" width="0.5174%" height="15" fill="rgb(209,121,21)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5951.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5925" width="0.5174%" height="15" fill="rgb(220,109,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5935.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5909" width="0.5174%" height="15" fill="rgb(232,18,1)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5919.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5893" width="0.5174%" height="15" fill="rgb(215,41,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5903.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5877" width="0.5174%" height="15" fill="rgb(224,123,36)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5887.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5861" width="0.5174%" height="15" fill="rgb(240,125,3)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5871.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5845" width="0.5174%" height="15" fill="rgb(205,98,50)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5855.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5829" width="0.5174%" height="15" fill="rgb(205,185,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5839.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5813" width="0.5174%" height="15" fill="rgb(238,207,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5823.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5797" width="0.5174%" height="15" fill="rgb(213,199,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5807.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5781" width="0.5174%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5791.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5765" width="0.5174%" height="15" fill="rgb(207,46,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5775.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5749" width="0.5174%" height="15" fill="rgb(241,35,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5759.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5733" width="0.5174%" height="15" fill="rgb(243,32,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5743.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5717" width="0.5174%" height="15" fill="rgb(247,202,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5727.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5701" width="0.5174%" height="15" fill="rgb(219,102,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5711.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5685" width="0.5174%" height="15" fill="rgb(243,110,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5695.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5669" width="0.5174%" height="15" fill="rgb(222,74,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5679.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5653" width="0.5174%" height="15" fill="rgb(216,99,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5637" width="0.5174%" height="15" fill="rgb(226,22,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5647.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5621" width="0.5174%" height="15" fill="rgb(217,163,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5631.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5605" width="0.5174%" height="15" fill="rgb(213,25,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5615.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5589" width="0.5174%" height="15" fill="rgb(252,105,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5599.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5573" width="0.5174%" height="15" fill="rgb(220,39,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5583.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5557" width="0.5174%" height="15" fill="rgb(229,68,48)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5567.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5541" width="0.5174%" height="15" fill="rgb(252,8,32)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5551.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5525" width="0.5174%" height="15" fill="rgb(223,20,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5535.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5509" width="0.5174%" height="15" fill="rgb(229,81,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5519.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5493" width="0.5174%" height="15" fill="rgb(236,28,36)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5503.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5477" width="0.5174%" height="15" fill="rgb(249,185,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5487.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5461" width="0.5174%" height="15" fill="rgb(249,174,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5471.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5445" width="0.5174%" height="15" fill="rgb(233,201,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5455.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5429" width="0.5174%" height="15" fill="rgb(221,78,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5439.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5413" width="0.5174%" height="15" fill="rgb(250,127,30)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5423.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5397" width="0.5174%" height="15" fill="rgb(230,49,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5407.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5381" width="0.5174%" height="15" fill="rgb(229,67,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5391.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5365" width="0.5174%" height="15" fill="rgb(249,83,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5375.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5349" width="0.5174%" height="15" fill="rgb(215,43,3)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5359.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5333" width="0.5174%" height="15" fill="rgb(238,154,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5343.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5317" width="0.5174%" height="15" fill="rgb(219,56,2)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5327.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5301" width="0.5174%" height="15" fill="rgb(233,0,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5311.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5285" width="0.5174%" height="15" fill="rgb(235,30,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5295.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5269" width="0.5174%" height="15" fill="rgb(250,79,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5253" width="0.5174%" height="15" fill="rgb(211,146,34)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5263.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5237" width="0.5174%" height="15" fill="rgb(228,22,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5247.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5221" width="0.5174%" height="15" fill="rgb(235,168,5)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5231.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5205" width="0.5174%" height="15" fill="rgb(221,155,16)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5215.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5189" width="0.5174%" height="15" fill="rgb(215,215,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5199.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5173" width="0.5174%" height="15" fill="rgb(223,4,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5183.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5157" width="0.5174%" height="15" fill="rgb(234,103,6)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5167.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5141" width="0.5174%" height="15" fill="rgb(227,97,0)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5125" width="0.5174%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5135.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5109" width="0.5174%" height="15" fill="rgb(228,201,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5119.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5093" width="0.5174%" height="15" fill="rgb(222,22,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5103.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5077" width="0.5174%" height="15" fill="rgb(237,53,32)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5061" width="0.5174%" height="15" fill="rgb(233,25,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5071.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5045" width="0.5174%" height="15" fill="rgb(210,40,34)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5055.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5029" width="0.5174%" height="15" fill="rgb(241,220,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5039.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="5013" width="0.5174%" height="15" fill="rgb(235,28,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4997" width="0.5174%" height="15" fill="rgb(210,56,17)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="5007.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4981" width="0.5174%" height="15" fill="rgb(224,130,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4991.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4965" width="0.5174%" height="15" fill="rgb(235,212,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4975.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4949" width="0.5174%" height="15" fill="rgb(223,33,50)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4933" width="0.5174%" height="15" fill="rgb(219,149,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4943.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4917" width="0.5174%" height="15" fill="rgb(250,156,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4927.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4901" width="0.5174%" height="15" fill="rgb(216,193,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4911.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4885" width="0.5174%" height="15" fill="rgb(216,135,14)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4869" width="0.5174%" height="15" fill="rgb(241,47,5)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4879.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4853" width="0.5174%" height="15" fill="rgb(233,42,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4863.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4837" width="0.5174%" height="15" fill="rgb(231,13,6)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4847.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4821" width="0.5174%" height="15" fill="rgb(207,181,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4805" width="0.5174%" height="15" fill="rgb(254,173,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4815.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4789" width="0.5174%" height="15" fill="rgb(221,1,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4799.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4773" width="0.5174%" height="15" fill="rgb(206,124,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4783.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4757" width="0.5174%" height="15" fill="rgb(249,21,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4741" width="0.5174%" height="15" fill="rgb(222,201,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4751.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4725" width="0.5174%" height="15" fill="rgb(235,61,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4735.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4709" width="0.5174%" height="15" fill="rgb(219,207,3)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4719.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4693" width="0.5174%" height="15" fill="rgb(222,56,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4677" width="0.5174%" height="15" fill="rgb(239,76,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4687.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4661" width="0.5174%" height="15" fill="rgb(231,124,27)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4671.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4645" width="0.5174%" height="15" fill="rgb(249,195,6)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4655.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4629" width="0.5174%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4613" width="0.5174%" height="15" fill="rgb(206,201,31)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4623.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4597" width="0.5174%" height="15" fill="rgb(231,57,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4581" width="0.5174%" height="15" fill="rgb(248,177,22)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4591.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4565" width="0.5174%" height="15" fill="rgb(215,211,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4549" width="0.5174%" height="15" fill="rgb(241,128,51)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4559.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4533" width="0.5174%" height="15" fill="rgb(227,165,31)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4517" width="0.5174%" height="15" fill="rgb(228,167,24)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4527.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4501" width="0.5174%" height="15" fill="rgb(228,143,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4485" width="0.5174%" height="15" fill="rgb(249,149,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4495.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4469" width="0.5174%" height="15" fill="rgb(243,35,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4453" width="0.5174%" height="15" fill="rgb(246,89,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4463.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4437" width="0.5174%" height="15" fill="rgb(233,213,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4421" width="0.5174%" height="15" fill="rgb(233,141,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4431.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4405" width="0.5174%" height="15" fill="rgb(239,167,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4415.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4389" width="0.5174%" height="15" fill="rgb(209,217,16)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4399.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4373" width="0.5174%" height="15" fill="rgb(219,88,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4357" width="0.5174%" height="15" fill="rgb(220,193,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4367.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4341" width="0.5174%" height="15" fill="rgb(230,90,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4325" width="0.5174%" height="15" fill="rgb(252,106,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4335.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4309" width="0.5174%" height="15" fill="rgb(206,74,20)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4293" width="0.5174%" height="15" fill="rgb(230,138,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4303.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4277" width="0.5174%" height="15" fill="rgb(235,182,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4287.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4261" width="0.5174%" height="15" fill="rgb(242,16,51)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4271.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4245" width="0.5174%" height="15" fill="rgb(248,9,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4229" width="0.5174%" height="15" fill="rgb(210,31,22)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4239.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4213" width="0.5174%" height="15" fill="rgb(239,54,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4223.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4197" width="0.5174%" height="15" fill="rgb(230,99,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4207.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4181" width="0.5174%" height="15" fill="rgb(253,106,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4165" width="0.5174%" height="15" fill="rgb(213,46,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4175.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4149" width="0.5174%" height="15" fill="rgb(215,133,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4159.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4133" width="0.5174%" height="15" fill="rgb(213,28,5)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4143.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4117" width="0.5174%" height="15" fill="rgb(215,77,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4127.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4101" width="0.5174%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4111.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4085" width="0.5174%" height="15" fill="rgb(208,67,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4095.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4069" width="0.5174%" height="15" fill="rgb(219,133,21)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4079.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4053" width="0.5174%" height="15" fill="rgb(246,46,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4063.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4037" width="0.5174%" height="15" fill="rgb(246,185,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4047.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4021" width="0.5174%" height="15" fill="rgb(252,136,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4031.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="4005" width="0.5174%" height="15" fill="rgb(219,138,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="4015.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3989" width="0.5174%" height="15" fill="rgb(211,51,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3999.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3973" width="0.5174%" height="15" fill="rgb(247,221,28)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3983.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3957" width="0.5174%" height="15" fill="rgb(251,222,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3967.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3941" width="0.5174%" height="15" fill="rgb(217,162,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3951.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3925" width="0.5174%" height="15" fill="rgb(229,93,14)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3935.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3909" width="0.5174%" height="15" fill="rgb(209,67,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3919.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3893" width="0.5174%" height="15" fill="rgb(213,87,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3903.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3877" width="0.5174%" height="15" fill="rgb(205,151,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3887.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3861" width="0.5174%" height="15" fill="rgb(253,215,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3871.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3845" width="0.5174%" height="15" fill="rgb(221,220,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3855.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3829" width="0.5174%" height="15" fill="rgb(218,133,21)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3839.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3813" width="0.5174%" height="15" fill="rgb(221,193,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3823.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3797" width="0.5174%" height="15" fill="rgb(240,128,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3807.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3781" width="0.5174%" height="15" fill="rgb(253,114,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3791.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3765" width="0.5174%" height="15" fill="rgb(215,223,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3775.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3749" width="0.5174%" height="15" fill="rgb(248,225,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3759.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3733" width="0.5174%" height="15" fill="rgb(250,108,0)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3743.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3717" width="0.5174%" height="15" fill="rgb(228,208,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3727.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3701" width="0.5174%" height="15" fill="rgb(244,45,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3711.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3685" width="0.5174%" height="15" fill="rgb(207,125,25)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3695.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3669" width="0.5174%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3679.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3653" width="0.5174%" height="15" fill="rgb(249,80,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3663.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3637" width="0.5174%" height="15" fill="rgb(221,65,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3647.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3621" width="0.5174%" height="15" fill="rgb(235,49,36)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3631.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3605" width="0.5174%" height="15" fill="rgb(225,32,20)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3589" width="0.5174%" height="15" fill="rgb(215,141,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3599.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3573" width="0.5174%" height="15" fill="rgb(250,160,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3583.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3557" width="0.5174%" height="15" fill="rgb(216,222,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3567.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3541" width="0.5174%" height="15" fill="rgb(234,217,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3525" width="0.5174%" height="15" fill="rgb(207,178,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3535.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3509" width="0.5174%" height="15" fill="rgb(221,136,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3519.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3493" width="0.5174%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3503.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3477" width="0.5174%" height="15" fill="rgb(249,222,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3487.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3461" width="0.5174%" height="15" fill="rgb(244,185,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3471.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3445" width="0.5174%" height="15" fill="rgb(236,202,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3455.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3429" width="0.5174%" height="15" fill="rgb(250,229,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3439.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3413" width="0.5174%" height="15" fill="rgb(206,174,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3423.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3397" width="0.5174%" height="15" fill="rgb(211,33,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3407.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3381" width="0.5174%" height="15" fill="rgb(245,58,50)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3391.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3365" width="0.5174%" height="15" fill="rgb(244,68,36)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3375.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3349" width="0.5174%" height="15" fill="rgb(232,229,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3359.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3333" width="0.5174%" height="15" fill="rgb(254,30,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3343.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3317" width="0.5174%" height="15" fill="rgb(235,160,14)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3327.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3301" width="0.5174%" height="15" fill="rgb(212,155,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3311.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3285" width="0.5174%" height="15" fill="rgb(226,2,50)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3269" width="0.5174%" height="15" fill="rgb(234,177,6)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3279.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3253" width="0.5174%" height="15" fill="rgb(217,24,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3263.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3237" width="0.5174%" height="15" fill="rgb(220,13,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3247.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3221" width="0.5174%" height="15" fill="rgb(239,221,27)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3231.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3205" width="0.5174%" height="15" fill="rgb(222,198,25)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3215.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3189" width="0.5174%" height="15" fill="rgb(211,99,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3199.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3173" width="0.5174%" height="15" fill="rgb(232,111,31)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3183.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3157" width="0.5174%" height="15" fill="rgb(245,82,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3141" width="0.5174%" height="15" fill="rgb(227,149,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3151.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3125" width="0.5174%" height="15" fill="rgb(218,36,50)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3135.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3109" width="0.5174%" height="15" fill="rgb(226,80,48)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3119.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3093" width="0.5174%" height="15" fill="rgb(238,224,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3103.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3077" width="0.5174%" height="15" fill="rgb(241,136,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3087.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3061" width="0.5174%" height="15" fill="rgb(208,32,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3071.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3045" width="0.5174%" height="15" fill="rgb(207,135,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3055.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3029" width="0.5174%" height="15" fill="rgb(206,86,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="3013" width="0.5174%" height="15" fill="rgb(245,177,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3023.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2997" width="0.5174%" height="15" fill="rgb(206,64,50)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="3007.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2981" width="0.5174%" height="15" fill="rgb(234,36,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2991.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2965" width="0.5174%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2949" width="0.5174%" height="15" fill="rgb(210,75,36)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2959.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2933" width="0.5174%" height="15" fill="rgb(229,88,21)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2943.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2917" width="0.5174%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2927.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2901" width="0.5174%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2911.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2885" width="0.5174%" height="15" fill="rgb(221,76,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2895.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2869" width="0.5174%" height="15" fill="rgb(225,139,18)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2879.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2853" width="0.5174%" height="15" fill="rgb(230,137,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2863.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2837" width="0.5174%" height="15" fill="rgb(212,28,1)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2821" width="0.5174%" height="15" fill="rgb(248,164,17)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2831.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2805" width="0.5174%" height="15" fill="rgb(222,171,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2815.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2789" width="0.5174%" height="15" fill="rgb(243,84,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2799.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2773" width="0.5174%" height="15" fill="rgb(252,49,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2757" width="0.5174%" height="15" fill="rgb(215,19,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2767.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2741" width="0.5174%" height="15" fill="rgb(238,81,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2751.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2725" width="0.5174%" height="15" fill="rgb(210,199,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2735.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2709" width="0.5174%" height="15" fill="rgb(244,192,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2693" width="0.5174%" height="15" fill="rgb(226,211,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2703.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2677" width="0.5174%" height="15" fill="rgb(236,162,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2661" width="0.5174%" height="15" fill="rgb(220,229,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2671.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2645" width="0.5174%" height="15" fill="rgb(250,87,22)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2629" width="0.5174%" height="15" fill="rgb(239,43,17)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2639.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2613" width="0.5174%" height="15" fill="rgb(231,177,25)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2597" width="0.5174%" height="15" fill="rgb(219,179,1)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2607.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2581" width="0.5174%" height="15" fill="rgb(238,219,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2565" width="0.5174%" height="15" fill="rgb(232,167,36)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2575.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2549" width="0.5174%" height="15" fill="rgb(244,19,51)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2533" width="0.5174%" height="15" fill="rgb(224,6,22)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2543.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2517" width="0.5174%" height="15" fill="rgb(224,145,5)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2501" width="0.5174%" height="15" fill="rgb(234,130,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2511.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2485" width="0.5174%" height="15" fill="rgb(254,6,2)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2469" width="0.5174%" height="15" fill="rgb(208,96,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2479.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2453" width="0.5174%" height="15" fill="rgb(239,3,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2437" width="0.5174%" height="15" fill="rgb(233,210,1)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2447.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2421" width="0.5174%" height="15" fill="rgb(244,137,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2405" width="0.5174%" height="15" fill="rgb(240,136,2)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2415.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2389" width="0.5174%" height="15" fill="rgb(239,18,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2373" width="0.5174%" height="15" fill="rgb(218,185,22)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2383.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2357" width="0.5174%" height="15" fill="rgb(225,218,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2341" width="0.5174%" height="15" fill="rgb(230,182,32)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2351.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2325" width="0.5174%" height="15" fill="rgb(242,56,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2309" width="0.5174%" height="15" fill="rgb(233,99,24)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2319.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2293" width="0.5174%" height="15" fill="rgb(234,209,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2303.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2277" width="0.5174%" height="15" fill="rgb(227,7,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2287.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2261" width="0.5174%" height="15" fill="rgb(245,203,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2271.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2245" width="0.5174%" height="15" fill="rgb(238,205,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2255.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2229" width="0.5174%" height="15" fill="rgb(231,56,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2239.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2213" width="0.5174%" height="15" fill="rgb(244,186,29)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2223.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2197" width="0.5174%" height="15" fill="rgb(234,111,31)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2181" width="0.5174%" height="15" fill="rgb(241,149,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2191.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2165" width="0.5174%" height="15" fill="rgb(249,206,44)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2175.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2149" width="0.5174%" height="15" fill="rgb(251,153,30)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2159.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2133" width="0.5174%" height="15" fill="rgb(239,152,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2143.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2117" width="0.5174%" height="15" fill="rgb(249,139,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2127.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2101" width="0.5174%" height="15" fill="rgb(244,64,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2111.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2085" width="0.5174%" height="15" fill="rgb(216,46,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2095.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2069" width="0.5174%" height="15" fill="rgb(250,74,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2079.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2053" width="0.5174%" height="15" fill="rgb(249,42,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2063.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2037" width="0.5174%" height="15" fill="rgb(242,149,17)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2047.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2021" width="0.5174%" height="15" fill="rgb(244,29,21)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2031.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="2005" width="0.5174%" height="15" fill="rgb(220,130,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="2015.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1989" width="0.5174%" height="15" fill="rgb(211,67,2)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1999.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1973" width="0.5174%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1957" width="0.5174%" height="15" fill="rgb(246,142,3)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1967.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1941" width="0.5174%" height="15" fill="rgb(241,25,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1951.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1925" width="0.5174%" height="15" fill="rgb(242,119,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1935.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1909" width="0.5174%" height="15" fill="rgb(241,98,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1893" width="0.5174%" height="15" fill="rgb(254,28,30)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1903.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1877" width="0.5174%" height="15" fill="rgb(241,142,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1887.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1861" width="0.5174%" height="15" fill="rgb(222,85,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1871.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1845" width="0.5174%" height="15" fill="rgb(210,85,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1829" width="0.5174%" height="15" fill="rgb(224,206,25)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1839.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1813" width="0.5174%" height="15" fill="rgb(243,201,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1823.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1797" width="0.5174%" height="15" fill="rgb(236,59,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1807.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1781" width="0.5174%" height="15" fill="rgb(254,179,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1765" width="0.5174%" height="15" fill="rgb(226,14,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1775.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1749" width="0.5174%" height="15" fill="rgb(244,27,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1759.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1733" width="0.5174%" height="15" fill="rgb(235,35,32)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1743.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1717" width="0.5174%" height="15" fill="rgb(218,68,31)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1701" width="0.5174%" height="15" fill="rgb(207,120,37)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1711.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1685" width="0.5174%" height="15" fill="rgb(227,98,0)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1695.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1669" width="0.5174%" height="15" fill="rgb(207,7,3)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1679.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1653" width="0.5174%" height="15" fill="rgb(206,98,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1637" width="0.5174%" height="15" fill="rgb(217,5,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1647.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1621" width="0.5174%" height="15" fill="rgb(235,190,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1605" width="0.5174%" height="15" fill="rgb(247,86,24)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1615.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1589" width="0.5174%" height="15" fill="rgb(205,101,16)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1573" width="0.5174%" height="15" fill="rgb(246,168,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1583.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1557" width="0.5174%" height="15" fill="rgb(231,114,1)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1567.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1541" width="0.5174%" height="15" fill="rgb(207,184,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1551.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1525" width="0.5174%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1509" width="0.5174%" height="15" fill="rgb(212,188,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1519.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1493" width="0.5174%" height="15" fill="rgb(223,154,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1503.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1477" width="0.5174%" height="15" fill="rgb(251,22,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1487.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1461" width="0.5174%" height="15" fill="rgb(229,209,22)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1445" width="0.5174%" height="15" fill="rgb(234,138,34)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1455.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1429" width="0.5174%" height="15" fill="rgb(212,95,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1439.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1413" width="0.5174%" height="15" fill="rgb(240,179,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1423.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1397" width="0.5174%" height="15" fill="rgb(240,163,11)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1381" width="0.5174%" height="15" fill="rgb(236,37,12)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1391.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1365" width="0.5174%" height="15" fill="rgb(232,164,16)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1375.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1349" width="0.5174%" height="15" fill="rgb(244,205,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1359.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1333" width="0.5174%" height="15" fill="rgb(223,117,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1317" width="0.5174%" height="15" fill="rgb(244,107,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1327.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1301" width="0.5174%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1285" width="0.5174%" height="15" fill="rgb(228,84,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1295.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1269" width="0.5174%" height="15" fill="rgb(254,188,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1253" width="0.5174%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1263.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1237" width="0.5174%" height="15" fill="rgb(216,84,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1221" width="0.5174%" height="15" fill="rgb(214,194,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1231.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1205" width="0.5174%" height="15" fill="rgb(249,28,3)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1189" width="0.5174%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1199.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1173" width="0.5174%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1157" width="0.5174%" height="15" fill="rgb(213,201,24)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1167.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1141" width="0.5174%" height="15" fill="rgb(248,116,28)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1125" width="0.5174%" height="15" fill="rgb(219,72,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1135.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1109" width="0.5174%" height="15" fill="rgb(209,138,14)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1093" width="0.5174%" height="15" fill="rgb(222,18,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1103.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1077" width="0.5174%" height="15" fill="rgb(213,199,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1061" width="0.5174%" height="15" fill="rgb(250,110,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1071.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1045" width="0.5174%" height="15" fill="rgb(248,123,6)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1029" width="0.5174%" height="15" fill="rgb(206,91,31)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1039.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="1013" width="0.5174%" height="15" fill="rgb(211,154,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="997" width="0.5174%" height="15" fill="rgb(225,148,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="1007.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="981" width="0.5174%" height="15" fill="rgb(220,160,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="965" width="0.5174%" height="15" fill="rgb(213,52,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="975.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="949" width="0.5174%" height="15" fill="rgb(243,137,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="933" width="0.5174%" height="15" fill="rgb(230,79,13)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="943.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="917" width="0.5174%" height="15" fill="rgb(247,105,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="901" width="0.5174%" height="15" fill="rgb(223,179,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="911.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="885" width="0.5174%" height="15" fill="rgb(218,9,34)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="869" width="0.5174%" height="15" fill="rgb(222,106,8)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="879.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="853" width="0.5174%" height="15" fill="rgb(211,220,0)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="837" width="0.5174%" height="15" fill="rgb(229,52,16)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="847.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="821" width="0.5174%" height="15" fill="rgb(212,155,18)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="805" width="0.5174%" height="15" fill="rgb(242,21,14)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="815.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="789" width="0.5174%" height="15" fill="rgb(222,19,48)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="773" width="0.5174%" height="15" fill="rgb(232,45,27)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="783.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="757" width="0.5174%" height="15" fill="rgb(249,103,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="741" width="0.5174%" height="15" fill="rgb(246,81,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="751.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="725" width="0.5174%" height="15" fill="rgb(252,33,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="709" width="0.5174%" height="15" fill="rgb(209,212,41)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="719.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="693" width="0.5174%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="677" width="0.5174%" height="15" fill="rgb(223,64,47)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="687.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="661" width="0.5174%" height="15" fill="rgb(211,161,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="645" width="0.5174%" height="15" fill="rgb(219,138,40)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="655.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="629" width="0.5174%" height="15" fill="rgb(241,228,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="613" width="0.5174%" height="15" fill="rgb(223,209,38)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="623.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="597" width="0.5174%" height="15" fill="rgb(236,164,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="581" width="0.5174%" height="15" fill="rgb(231,15,5)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="591.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="565" width="0.5174%" height="15" fill="rgb(252,35,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="549" width="0.5174%" height="15" fill="rgb(248,181,18)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="559.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="533" width="0.5174%" height="15" fill="rgb(233,39,42)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="517" width="0.5174%" height="15" fill="rgb(238,110,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="527.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="501" width="0.5174%" height="15" fill="rgb(233,195,10)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="485" width="0.5174%" height="15" fill="rgb(254,105,3)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="495.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="469" width="0.5174%" height="15" fill="rgb(221,225,9)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="453" width="0.5174%" height="15" fill="rgb(224,227,45)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="463.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="437" width="0.5174%" height="15" fill="rgb(229,198,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="421" width="0.5174%" height="15" fill="rgb(206,209,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="431.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="405" width="0.5174%" height="15" fill="rgb(245,195,53)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="389" width="0.5174%" height="15" fill="rgb(240,92,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="399.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="373" width="0.5174%" height="15" fill="rgb(207,40,23)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="357" width="0.5174%" height="15" fill="rgb(223,111,35)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="367.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="341" width="0.5174%" height="15" fill="rgb(229,147,28)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="325" width="0.5174%" height="15" fill="rgb(211,29,28)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="335.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="309" width="0.5174%" height="15" fill="rgb(228,72,33)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="293" width="0.5174%" height="15" fill="rgb(205,214,31)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="303.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="277" width="0.5174%" height="15" fill="rgb(224,111,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="261" width="0.5174%" height="15" fill="rgb(253,21,26)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="271.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="245" width="0.5174%" height="15" fill="rgb(245,139,43)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="229" width="0.5174%" height="15" fill="rgb(252,170,7)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="239.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="213" width="0.5174%" height="15" fill="rgb(231,118,14)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="223.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="197" width="0.5174%" height="15" fill="rgb(238,83,0)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="207.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="181" width="0.5174%" height="15" fill="rgb(221,39,39)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="165" width="0.5174%" height="15" fill="rgb(222,119,46)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="175.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="149" width="0.5174%" height="15" fill="rgb(222,165,49)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="159.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="133" width="0.5174%" height="15" fill="rgb(219,113,52)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="143.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="117" width="0.5174%" height="15" fill="rgb(214,7,15)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="101" width="0.5174%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="111.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="85" width="0.5174%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="95.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="69" width="0.5174%" height="15" fill="rgb(213,208,19)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="79.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="53" width="0.5174%" height="15" fill="rgb(233,156,4)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,690,204 samples, 0.52%)</title><rect x="0.0000%" y="37" width="0.5174%" height="15" fill="rgb(207,194,5)" fg:x="0" fg:w="1690204"/><text x="0.2500%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (960,705 samples, 0.29%)</title><rect x="5.4567%" y="7285" width="0.2941%" height="15" fill="rgb(206,111,30)" fg:x="17825462" fg:w="960705"/><text x="5.7067%" y="7295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (960,705 samples, 0.29%)</title><rect x="5.4567%" y="7269" width="0.2941%" height="15" fill="rgb(243,70,54)" fg:x="17825462" fg:w="960705"/><text x="5.7067%" y="7279.50"></text></g><g><title>core::ptr::write (960,705 samples, 0.29%)</title><rect x="5.4567%" y="7253" width="0.2941%" height="15" fill="rgb(242,28,8)" fg:x="17825462" fg:w="960705"/><text x="5.7067%" y="7263.50"></text></g><g><title>[unknown] (960,705 samples, 0.29%)</title><rect x="5.4567%" y="7237" width="0.2941%" height="15" fill="rgb(219,106,18)" fg:x="17825462" fg:w="960705"/><text x="5.7067%" y="7247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,462,209 samples, 0.45%)</title><rect x="5.4567%" y="7317" width="0.4476%" height="15" fill="rgb(244,222,10)" fg:x="17825462" fg:w="1462209"/><text x="5.7067%" y="7327.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,462,209 samples, 0.45%)</title><rect x="5.4567%" y="7301" width="0.4476%" height="15" fill="rgb(236,179,52)" fg:x="17825462" fg:w="1462209"/><text x="5.7067%" y="7311.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (501,504 samples, 0.15%)</title><rect x="5.7507%" y="7285" width="0.1535%" height="15" fill="rgb(213,23,39)" fg:x="18786167" fg:w="501504"/><text x="6.0007%" y="7295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,815,060 samples, 1.47%)</title><rect x="5.4567%" y="7445" width="1.4740%" height="15" fill="rgb(238,48,10)" fg:x="17825462" fg:w="4815060"/><text x="5.7067%" y="7455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,815,060 samples, 1.47%)</title><rect x="5.4567%" y="7429" width="1.4740%" height="15" fill="rgb(251,196,23)" fg:x="17825462" fg:w="4815060"/><text x="5.7067%" y="7439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,815,060 samples, 1.47%)</title><rect x="5.4567%" y="7413" width="1.4740%" height="15" fill="rgb(250,152,24)" fg:x="17825462" fg:w="4815060"/><text x="5.7067%" y="7423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,815,060 samples, 1.47%)</title><rect x="5.4567%" y="7397" width="1.4740%" height="15" fill="rgb(209,150,17)" fg:x="17825462" fg:w="4815060"/><text x="5.7067%" y="7407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,815,060 samples, 1.47%)</title><rect x="5.4567%" y="7381" width="1.4740%" height="15" fill="rgb(234,202,34)" fg:x="17825462" fg:w="4815060"/><text x="5.7067%" y="7391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4,815,060 samples, 1.47%)</title><rect x="5.4567%" y="7365" width="1.4740%" height="15" fill="rgb(253,148,53)" fg:x="17825462" fg:w="4815060"/><text x="5.7067%" y="7375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,815,060 samples, 1.47%)</title><rect x="5.4567%" y="7349" width="1.4740%" height="15" fill="rgb(218,129,16)" fg:x="17825462" fg:w="4815060"/><text x="5.7067%" y="7359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,815,060 samples, 1.47%)</title><rect x="5.4567%" y="7333" width="1.4740%" height="15" fill="rgb(216,85,19)" fg:x="17825462" fg:w="4815060"/><text x="5.7067%" y="7343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,352,851 samples, 1.03%)</title><rect x="5.9043%" y="7317" width="1.0264%" height="15" fill="rgb(235,228,7)" fg:x="19287671" fg:w="3352851"/><text x="6.1543%" y="7327.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,352,851 samples, 1.03%)</title><rect x="5.9043%" y="7301" width="1.0264%" height="15" fill="rgb(245,175,0)" fg:x="19287671" fg:w="3352851"/><text x="6.1543%" y="7311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,352,851 samples, 1.03%)</title><rect x="5.9043%" y="7285" width="1.0264%" height="15" fill="rgb(208,168,36)" fg:x="19287671" fg:w="3352851"/><text x="6.1543%" y="7295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (3,352,851 samples, 1.03%)</title><rect x="5.9043%" y="7269" width="1.0264%" height="15" fill="rgb(246,171,24)" fg:x="19287671" fg:w="3352851"/><text x="6.1543%" y="7279.50"></text></g><g><title>core::ptr::write (3,352,851 samples, 1.03%)</title><rect x="5.9043%" y="7253" width="1.0264%" height="15" fill="rgb(215,142,24)" fg:x="19287671" fg:w="3352851"/><text x="6.1543%" y="7263.50"></text></g><g><title>[unknown] (701,459 samples, 0.21%)</title><rect x="6.7159%" y="7237" width="0.2147%" height="15" fill="rgb(250,187,7)" fg:x="21939063" fg:w="701459"/><text x="6.9659%" y="7247.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (2,639,632 samples, 0.81%)</title><rect x="6.9306%" y="7445" width="0.8080%" height="15" fill="rgb(228,66,33)" fg:x="22640522" fg:w="2639632"/><text x="7.1806%" y="7455.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (2,639,632 samples, 0.81%)</title><rect x="6.9306%" y="7429" width="0.8080%" height="15" fill="rgb(234,215,21)" fg:x="22640522" fg:w="2639632"/><text x="7.1806%" y="7439.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (2,639,632 samples, 0.81%)</title><rect x="6.9306%" y="7413" width="0.8080%" height="15" fill="rgb(222,191,20)" fg:x="22640522" fg:w="2639632"/><text x="7.1806%" y="7423.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (2,639,632 samples, 0.81%)</title><rect x="6.9306%" y="7397" width="0.8080%" height="15" fill="rgb(245,79,54)" fg:x="22640522" fg:w="2639632"/><text x="7.1806%" y="7407.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (2,639,632 samples, 0.81%)</title><rect x="6.9306%" y="7381" width="0.8080%" height="15" fill="rgb(240,10,37)" fg:x="22640522" fg:w="2639632"/><text x="7.1806%" y="7391.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (2,639,632 samples, 0.81%)</title><rect x="6.9306%" y="7365" width="0.8080%" height="15" fill="rgb(214,192,32)" fg:x="22640522" fg:w="2639632"/><text x="7.1806%" y="7375.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (2,639,632 samples, 0.81%)</title><rect x="6.9306%" y="7349" width="0.8080%" height="15" fill="rgb(209,36,54)" fg:x="22640522" fg:w="2639632"/><text x="7.1806%" y="7359.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12,210,412 samples, 3.74%)</title><rect x="7.7386%" y="7381" width="3.7378%" height="15" fill="rgb(220,10,11)" fg:x="25280154" fg:w="12210412"/><text x="7.9886%" y="7391.50">core..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12,210,412 samples, 3.74%)</title><rect x="7.7386%" y="7365" width="3.7378%" height="15" fill="rgb(221,106,17)" fg:x="25280154" fg:w="12210412"/><text x="7.9886%" y="7375.50">&lt;cor..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (12,210,412 samples, 3.74%)</title><rect x="7.7386%" y="7349" width="3.7378%" height="15" fill="rgb(251,142,44)" fg:x="25280154" fg:w="12210412"/><text x="7.9886%" y="7359.50">&lt;usi..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (12,210,412 samples, 3.74%)</title><rect x="7.7386%" y="7333" width="3.7378%" height="15" fill="rgb(238,13,15)" fg:x="25280154" fg:w="12210412"/><text x="7.9886%" y="7343.50">core..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7589" width="17.0196%" height="15" fill="rgb(208,107,27)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7599.50">rayon::iter::plumbing::Pro..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7573" width="17.0196%" height="15" fill="rgb(205,136,37)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7583.50">&lt;rayon::iter::for_each::Fo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7557" width="17.0196%" height="15" fill="rgb(250,205,27)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7567.50">core::iter::traits::iterat..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7541" width="17.0196%" height="15" fill="rgb(210,80,43)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7551.50">&lt;core::iter::adapters::zip..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7525" width="17.0196%" height="15" fill="rgb(247,160,36)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7535.50">&lt;core::iter::adapters::zip..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7509" width="17.0196%" height="15" fill="rgb(234,13,49)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7519.50">&lt;core::iter::adapters::zip..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7493" width="17.0196%" height="15" fill="rgb(234,122,0)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7503.50">core::iter::traits::iterat..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7477" width="17.0196%" height="15" fill="rgb(207,146,38)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7487.50">core::ops::function::impls..</text></g><g><title>profile::demean_impl::_{{closure}} (55,598,474 samples, 17.02%)</title><rect x="5.4567%" y="7461" width="17.0196%" height="15" fill="rgb(207,177,25)" fg:x="17825462" fg:w="55598474"/><text x="5.7067%" y="7471.50">profile::demean_impl::_{{c..</text></g><g><title>profile::internal::subtract_weighted_group_mean (48,143,782 samples, 14.74%)</title><rect x="7.7386%" y="7445" width="14.7376%" height="15" fill="rgb(211,178,42)" fg:x="25280154" fg:w="48143782"/><text x="7.9886%" y="7455.50">profile::internal::sub..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (48,143,782 samples, 14.74%)</title><rect x="7.7386%" y="7429" width="14.7376%" height="15" fill="rgb(230,69,54)" fg:x="25280154" fg:w="48143782"/><text x="7.9886%" y="7439.50">core::iter::traits::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48,143,782 samples, 14.74%)</title><rect x="7.7386%" y="7413" width="14.7376%" height="15" fill="rgb(214,135,41)" fg:x="25280154" fg:w="48143782"/><text x="7.9886%" y="7423.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (48,143,782 samples, 14.74%)</title><rect x="7.7386%" y="7397" width="14.7376%" height="15" fill="rgb(237,67,25)" fg:x="25280154" fg:w="48143782"/><text x="7.9886%" y="7407.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (35,933,370 samples, 11.00%)</title><rect x="11.4764%" y="7381" width="10.9998%" height="15" fill="rgb(222,189,50)" fg:x="37490566" fg:w="35933370"/><text x="11.7264%" y="7391.50">core::iter::trai..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (35,933,370 samples, 11.00%)</title><rect x="11.4764%" y="7365" width="10.9998%" height="15" fill="rgb(245,148,34)" fg:x="37490566" fg:w="35933370"/><text x="11.7264%" y="7375.50">profile::interna..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (12,306,235 samples, 3.77%)</title><rect x="22.4762%" y="6997" width="3.7671%" height="15" fill="rgb(222,29,6)" fg:x="73423936" fg:w="12306235"/><text x="22.7262%" y="7007.50">core..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (12,306,235 samples, 3.77%)</title><rect x="22.4762%" y="6981" width="3.7671%" height="15" fill="rgb(221,189,43)" fg:x="73423936" fg:w="12306235"/><text x="22.7262%" y="6991.50">allo..</text></g><g><title>core::ptr::write (12,306,235 samples, 3.77%)</title><rect x="22.4762%" y="6965" width="3.7671%" height="15" fill="rgb(207,36,27)" fg:x="73423936" fg:w="12306235"/><text x="22.7262%" y="6975.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7157" width="4.7198%" height="15" fill="rgb(217,90,24)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7167.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7141" width="4.7198%" height="15" fill="rgb(224,66,35)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7151.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7125" width="4.7198%" height="15" fill="rgb(221,13,50)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7135.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7109" width="4.7198%" height="15" fill="rgb(236,68,49)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7119.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7093" width="4.7198%" height="15" fill="rgb(229,146,28)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7103.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7077" width="4.7198%" height="15" fill="rgb(225,31,38)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7087.50">alloc..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7061" width="4.7198%" height="15" fill="rgb(250,208,3)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7071.50">core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7045" width="4.7198%" height="15" fill="rgb(246,54,23)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7055.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7029" width="4.7198%" height="15" fill="rgb(243,76,11)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7039.50">core:..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (15,418,375 samples, 4.72%)</title><rect x="22.4762%" y="7013" width="4.7198%" height="15" fill="rgb(245,21,50)" fg:x="73423936" fg:w="15418375"/><text x="22.7262%" y="7023.50">core:..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (3,112,140 samples, 0.95%)</title><rect x="26.2433%" y="6997" width="0.9527%" height="15" fill="rgb(228,9,43)" fg:x="85730171" fg:w="3112140"/><text x="26.4933%" y="7007.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (3,112,140 samples, 0.95%)</title><rect x="26.2433%" y="6981" width="0.9527%" height="15" fill="rgb(208,100,47)" fg:x="85730171" fg:w="3112140"/><text x="26.4933%" y="6991.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (3,112,140 samples, 0.95%)</title><rect x="26.2433%" y="6965" width="0.9527%" height="15" fill="rgb(232,26,8)" fg:x="85730171" fg:w="3112140"/><text x="26.4933%" y="6975.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (3,112,140 samples, 0.95%)</title><rect x="26.2433%" y="6949" width="0.9527%" height="15" fill="rgb(216,166,38)" fg:x="85730171" fg:w="3112140"/><text x="26.4933%" y="6959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9,769,147 samples, 2.99%)</title><rect x="27.1960%" y="7093" width="2.9905%" height="15" fill="rgb(251,202,51)" fg:x="88842311" fg:w="9769147"/><text x="27.4460%" y="7103.50">cor..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9,769,147 samples, 2.99%)</title><rect x="27.1960%" y="7077" width="2.9905%" height="15" fill="rgb(254,216,34)" fg:x="88842311" fg:w="9769147"/><text x="27.4460%" y="7087.50">&lt;co..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (9,769,147 samples, 2.99%)</title><rect x="27.1960%" y="7061" width="2.9905%" height="15" fill="rgb(251,32,27)" fg:x="88842311" fg:w="9769147"/><text x="27.4460%" y="7071.50">&lt;us..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (9,769,147 samples, 2.99%)</title><rect x="27.1960%" y="7045" width="2.9905%" height="15" fill="rgb(208,127,28)" fg:x="88842311" fg:w="9769147"/><text x="27.4460%" y="7055.50">cor..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7541" width="13.1987%" height="15" fill="rgb(224,137,22)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7551.50">rayon_core::registry..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7525" width="13.1987%" height="15" fill="rgb(254,70,32)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7535.50">rayon_core::registry..</text></g><g><title>rayon_core::registry::WorkerThread::execute (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7509" width="13.1987%" height="15" fill="rgb(229,75,37)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7519.50">rayon_core::registry..</text></g><g><title>rayon_core::job::JobRef::execute (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7493" width="13.1987%" height="15" fill="rgb(252,64,23)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7503.50">rayon_core::job::Job..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7477" width="13.1987%" height="15" fill="rgb(232,162,48)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7487.50">&lt;rayon_core::job::St..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7461" width="13.1987%" height="15" fill="rgb(246,160,12)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7471.50">rayon_core::job::Job..</text></g><g><title>rayon_core::unwind::halt_unwinding (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7445" width="13.1987%" height="15" fill="rgb(247,166,0)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7455.50">rayon_core::unwind::..</text></g><g><title>std::panic::catch_unwind (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7429" width="13.1987%" height="15" fill="rgb(249,219,21)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7439.50">std::panic::catch_un..</text></g><g><title>std::panicking::try (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7413" width="13.1987%" height="15" fill="rgb(205,209,3)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7423.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7397" width="13.1987%" height="15" fill="rgb(243,44,1)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7407.50">std::panicking::try:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7381" width="13.1987%" height="15" fill="rgb(206,159,16)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7391.50">&lt;core::panic::unwind..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7365" width="13.1987%" height="15" fill="rgb(244,77,30)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7375.50">rayon_core::job::Job..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7349" width="13.1987%" height="15" fill="rgb(218,69,12)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7359.50">rayon_core::join::jo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7333" width="13.1987%" height="15" fill="rgb(212,87,7)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7343.50">rayon::iter::plumbin..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7317" width="13.1987%" height="15" fill="rgb(245,114,25)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7327.50">rayon::iter::plumbin..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7301" width="13.1987%" height="15" fill="rgb(210,61,42)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7311.50">rayon::iter::plumbin..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7285" width="13.1987%" height="15" fill="rgb(211,52,33)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7295.50">&lt;rayon::iter::for_ea..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7269" width="13.1987%" height="15" fill="rgb(234,58,33)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7279.50">core::iter::traits::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7253" width="13.1987%" height="15" fill="rgb(220,115,36)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7263.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7237" width="13.1987%" height="15" fill="rgb(243,153,54)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7247.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7221" width="13.1987%" height="15" fill="rgb(251,47,18)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7231.50">&lt;core::iter::adapter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7205" width="13.1987%" height="15" fill="rgb(242,102,42)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7215.50">core::iter::traits::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7189" width="13.1987%" height="15" fill="rgb(234,31,38)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7199.50">core::ops::function:..</text></g><g><title>profile::demean_impl::_{{closure}} (43,116,776 samples, 13.20%)</title><rect x="22.4762%" y="7173" width="13.1987%" height="15" fill="rgb(221,117,51)" fg:x="73423936" fg:w="43116776"/><text x="22.7262%" y="7183.50">profile::demean_impl..</text></g><g><title>profile::internal::subtract_weighted_group_mean (27,698,401 samples, 8.48%)</title><rect x="27.1960%" y="7157" width="8.4789%" height="15" fill="rgb(212,20,18)" fg:x="88842311" fg:w="27698401"/><text x="27.4460%" y="7167.50">profile::int..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (27,698,401 samples, 8.48%)</title><rect x="27.1960%" y="7141" width="8.4789%" height="15" fill="rgb(245,133,36)" fg:x="88842311" fg:w="27698401"/><text x="27.4460%" y="7151.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27,698,401 samples, 8.48%)</title><rect x="27.1960%" y="7125" width="8.4789%" height="15" fill="rgb(212,6,19)" fg:x="88842311" fg:w="27698401"/><text x="27.4460%" y="7135.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (27,698,401 samples, 8.48%)</title><rect x="27.1960%" y="7109" width="8.4789%" height="15" fill="rgb(218,1,36)" fg:x="88842311" fg:w="27698401"/><text x="27.4460%" y="7119.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (17,929,254 samples, 5.49%)</title><rect x="30.1865%" y="7093" width="5.4884%" height="15" fill="rgb(246,84,54)" fg:x="98611458" fg:w="17929254"/><text x="30.4365%" y="7103.50">core::i..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (17,929,254 samples, 5.49%)</title><rect x="30.1865%" y="7077" width="5.4884%" height="15" fill="rgb(242,110,6)" fg:x="98611458" fg:w="17929254"/><text x="30.4365%" y="7087.50">profile..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (501,504 samples, 0.15%)</title><rect x="35.6749%" y="7109" width="0.1535%" height="15" fill="rgb(214,47,5)" fg:x="116540712" fg:w="501504"/><text x="35.9249%" y="7119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (501,504 samples, 0.15%)</title><rect x="35.6749%" y="7093" width="0.1535%" height="15" fill="rgb(218,159,25)" fg:x="116540712" fg:w="501504"/><text x="35.9249%" y="7103.50"></text></g><g><title>core::ptr::write (501,504 samples, 0.15%)</title><rect x="35.6749%" y="7077" width="0.1535%" height="15" fill="rgb(215,211,28)" fg:x="116540712" fg:w="501504"/><text x="35.9249%" y="7087.50"></text></g><g><title>[unknown] (501,504 samples, 0.15%)</title><rect x="35.6749%" y="7061" width="0.1535%" height="15" fill="rgb(238,59,32)" fg:x="116540712" fg:w="501504"/><text x="35.9249%" y="7071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,862,841 samples, 0.57%)</title><rect x="35.6749%" y="7141" width="0.5702%" height="15" fill="rgb(226,82,3)" fg:x="116540712" fg:w="1862841"/><text x="35.9249%" y="7151.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,862,841 samples, 0.57%)</title><rect x="35.6749%" y="7125" width="0.5702%" height="15" fill="rgb(240,164,32)" fg:x="116540712" fg:w="1862841"/><text x="35.9249%" y="7135.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (1,361,337 samples, 0.42%)</title><rect x="35.8284%" y="7109" width="0.4167%" height="15" fill="rgb(232,46,7)" fg:x="117042216" fg:w="1361337"/><text x="36.0784%" y="7119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7,818,747 samples, 2.39%)</title><rect x="36.2452%" y="7109" width="2.3934%" height="15" fill="rgb(229,129,53)" fg:x="118403553" fg:w="7818747"/><text x="36.4952%" y="7119.50">co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (7,818,747 samples, 2.39%)</title><rect x="36.2452%" y="7093" width="2.3934%" height="15" fill="rgb(234,188,29)" fg:x="118403553" fg:w="7818747"/><text x="36.4952%" y="7103.50">al..</text></g><g><title>core::ptr::write (7,818,747 samples, 2.39%)</title><rect x="36.2452%" y="7077" width="2.3934%" height="15" fill="rgb(246,141,4)" fg:x="118403553" fg:w="7818747"/><text x="36.4952%" y="7087.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11,544,429 samples, 3.53%)</title><rect x="35.6749%" y="7269" width="3.5339%" height="15" fill="rgb(229,23,39)" fg:x="116540712" fg:w="11544429"/><text x="35.9249%" y="7279.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11,544,429 samples, 3.53%)</title><rect x="35.6749%" y="7253" width="3.5339%" height="15" fill="rgb(206,12,3)" fg:x="116540712" fg:w="11544429"/><text x="35.9249%" y="7263.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11,544,429 samples, 3.53%)</title><rect x="35.6749%" y="7237" width="3.5339%" height="15" fill="rgb(252,226,20)" fg:x="116540712" fg:w="11544429"/><text x="35.9249%" y="7247.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11,544,429 samples, 3.53%)</title><rect x="35.6749%" y="7221" width="3.5339%" height="15" fill="rgb(216,123,35)" fg:x="116540712" fg:w="11544429"/><text x="35.9249%" y="7231.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11,544,429 samples, 3.53%)</title><rect x="35.6749%" y="7205" width="3.5339%" height="15" fill="rgb(212,68,40)" fg:x="116540712" fg:w="11544429"/><text x="35.9249%" y="7215.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (11,544,429 samples, 3.53%)</title><rect x="35.6749%" y="7189" width="3.5339%" height="15" fill="rgb(254,125,32)" fg:x="116540712" fg:w="11544429"/><text x="35.9249%" y="7199.50">all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11,544,429 samples, 3.53%)</title><rect x="35.6749%" y="7173" width="3.5339%" height="15" fill="rgb(253,97,22)" fg:x="116540712" fg:w="11544429"/><text x="35.9249%" y="7183.50">cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,544,429 samples, 3.53%)</title><rect x="35.6749%" y="7157" width="3.5339%" height="15" fill="rgb(241,101,14)" fg:x="116540712" fg:w="11544429"/><text x="35.9249%" y="7167.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (9,681,588 samples, 2.96%)</title><rect x="36.2452%" y="7141" width="2.9637%" height="15" fill="rgb(238,103,29)" fg:x="118403553" fg:w="9681588"/><text x="36.4952%" y="7151.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (9,681,588 samples, 2.96%)</title><rect x="36.2452%" y="7125" width="2.9637%" height="15" fill="rgb(233,195,47)" fg:x="118403553" fg:w="9681588"/><text x="36.4952%" y="7135.50">cor..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (1,862,841 samples, 0.57%)</title><rect x="38.6386%" y="7109" width="0.5702%" height="15" fill="rgb(246,218,30)" fg:x="126222300" fg:w="1862841"/><text x="38.8886%" y="7119.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (1,862,841 samples, 0.57%)</title><rect x="38.6386%" y="7093" width="0.5702%" height="15" fill="rgb(219,145,47)" fg:x="126222300" fg:w="1862841"/><text x="38.8886%" y="7103.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (1,862,841 samples, 0.57%)</title><rect x="38.6386%" y="7077" width="0.5702%" height="15" fill="rgb(243,12,26)" fg:x="126222300" fg:w="1862841"/><text x="38.8886%" y="7087.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (1,862,841 samples, 0.57%)</title><rect x="38.6386%" y="7061" width="0.5702%" height="15" fill="rgb(214,87,16)" fg:x="126222300" fg:w="1862841"/><text x="38.8886%" y="7071.50"></text></g><g><title>ndarray::dimension::stride_offset (1,862,841 samples, 0.57%)</title><rect x="38.6386%" y="7045" width="0.5702%" height="15" fill="rgb(208,99,42)" fg:x="126222300" fg:w="1862841"/><text x="38.8886%" y="7055.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (10,941,932 samples, 3.35%)</title><rect x="39.2089%" y="7269" width="3.3495%" height="15" fill="rgb(253,99,2)" fg:x="128085141" fg:w="10941932"/><text x="39.4589%" y="7279.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (10,941,932 samples, 3.35%)</title><rect x="39.2089%" y="7253" width="3.3495%" height="15" fill="rgb(220,168,23)" fg:x="128085141" fg:w="10941932"/><text x="39.4589%" y="7263.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (10,941,932 samples, 3.35%)</title><rect x="39.2089%" y="7237" width="3.3495%" height="15" fill="rgb(242,38,24)" fg:x="128085141" fg:w="10941932"/><text x="39.4589%" y="7247.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (10,941,932 samples, 3.35%)</title><rect x="39.2089%" y="7221" width="3.3495%" height="15" fill="rgb(225,182,9)" fg:x="128085141" fg:w="10941932"/><text x="39.4589%" y="7231.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (10,941,932 samples, 3.35%)</title><rect x="39.2089%" y="7205" width="3.3495%" height="15" fill="rgb(243,178,37)" fg:x="128085141" fg:w="10941932"/><text x="39.4589%" y="7215.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (10,941,932 samples, 3.35%)</title><rect x="39.2089%" y="7189" width="3.3495%" height="15" fill="rgb(232,139,19)" fg:x="128085141" fg:w="10941932"/><text x="39.4589%" y="7199.50">nda..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (10,941,932 samples, 3.35%)</title><rect x="39.2089%" y="7173" width="3.3495%" height="15" fill="rgb(225,201,24)" fg:x="128085141" fg:w="10941932"/><text x="39.4589%" y="7183.50">pro..</text></g><g><title>[unknown] (7,060,616 samples, 2.16%)</title><rect x="40.3970%" y="7157" width="2.1614%" height="15" fill="rgb(221,47,46)" fg:x="131966457" fg:w="7060616"/><text x="40.6470%" y="7167.50">[..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7253" width="1.0223%" height="15" fill="rgb(249,23,13)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7237" width="1.0223%" height="15" fill="rgb(219,9,5)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7221" width="1.0223%" height="15" fill="rgb(254,171,16)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7205" width="1.0223%" height="15" fill="rgb(230,171,20)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7189" width="1.0223%" height="15" fill="rgb(210,71,41)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7173" width="1.0223%" height="15" fill="rgb(206,173,20)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7157" width="1.0223%" height="15" fill="rgb(233,88,34)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7141" width="1.0223%" height="15" fill="rgb(223,209,46)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7151.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7125" width="1.0223%" height="15" fill="rgb(250,43,18)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7135.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7109" width="1.0223%" height="15" fill="rgb(208,13,10)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7119.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7093" width="1.0223%" height="15" fill="rgb(212,200,36)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7103.50"></text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (3,339,459 samples, 1.02%)</title><rect x="42.5584%" y="7077" width="1.0223%" height="15" fill="rgb(225,90,30)" fg:x="139027073" fg:w="3339459"/><text x="42.8084%" y="7087.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6,615,276 samples, 2.03%)</title><rect x="43.5806%" y="7205" width="2.0250%" height="15" fill="rgb(236,182,39)" fg:x="142366532" fg:w="6615276"/><text x="43.8306%" y="7215.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6,615,276 samples, 2.03%)</title><rect x="43.5806%" y="7189" width="2.0250%" height="15" fill="rgb(212,144,35)" fg:x="142366532" fg:w="6615276"/><text x="43.8306%" y="7199.50">&lt;..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (6,615,276 samples, 2.03%)</title><rect x="43.5806%" y="7173" width="2.0250%" height="15" fill="rgb(228,63,44)" fg:x="142366532" fg:w="6615276"/><text x="43.8306%" y="7183.50">&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (6,615,276 samples, 2.03%)</title><rect x="43.5806%" y="7157" width="2.0250%" height="15" fill="rgb(228,109,6)" fg:x="142366532" fg:w="6615276"/><text x="43.8306%" y="7167.50">c..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7413" width="22.2063%" height="15" fill="rgb(238,117,24)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7423.50">rayon::iter::plumbing::Producer::fo..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7397" width="22.2063%" height="15" fill="rgb(242,26,26)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7407.50">&lt;rayon::iter::for_each::ForEachCons..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7381" width="22.2063%" height="15" fill="rgb(221,92,48)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7391.50">core::iter::traits::iterator::Itera..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7365" width="22.2063%" height="15" fill="rgb(209,209,32)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7375.50">&lt;core::iter::adapters::zip::Zip&lt;A,B..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7349" width="22.2063%" height="15" fill="rgb(221,70,22)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7359.50">&lt;core::iter::adapters::zip::Zip&lt;A,B..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7333" width="22.2063%" height="15" fill="rgb(248,145,5)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7343.50">&lt;core::iter::adapters::zip::Zip&lt;A,B..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7317" width="22.2063%" height="15" fill="rgb(226,116,26)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7327.50">core::iter::traits::iterator::Itera..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7301" width="22.2063%" height="15" fill="rgb(244,5,17)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7311.50">core::ops::function::impls::&lt;impl c..</text></g><g><title>profile::demean_impl::_{{closure}} (72,542,212 samples, 22.21%)</title><rect x="35.6749%" y="7285" width="22.2063%" height="15" fill="rgb(252,159,33)" fg:x="116540712" fg:w="72542212"/><text x="35.9249%" y="7295.50">profile::demean_impl::_{{closure}}</text></g><g><title>profile::internal::subtract_weighted_group_mean (50,055,851 samples, 15.32%)</title><rect x="42.5584%" y="7269" width="15.3229%" height="15" fill="rgb(206,71,0)" fg:x="139027073" fg:w="50055851"/><text x="42.8084%" y="7279.50">profile::internal::subt..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (46,716,392 samples, 14.30%)</title><rect x="43.5806%" y="7253" width="14.3006%" height="15" fill="rgb(233,118,54)" fg:x="142366532" fg:w="46716392"/><text x="43.8306%" y="7263.50">core::iter::traits::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46,716,392 samples, 14.30%)</title><rect x="43.5806%" y="7237" width="14.3006%" height="15" fill="rgb(234,83,48)" fg:x="142366532" fg:w="46716392"/><text x="43.8306%" y="7247.50">&lt;core::iter::adapters:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (46,716,392 samples, 14.30%)</title><rect x="43.5806%" y="7221" width="14.3006%" height="15" fill="rgb(228,3,54)" fg:x="142366532" fg:w="46716392"/><text x="43.8306%" y="7231.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (40,101,116 samples, 12.28%)</title><rect x="45.6057%" y="7205" width="12.2756%" height="15" fill="rgb(226,155,13)" fg:x="148981808" fg:w="40101116"/><text x="45.8557%" y="7215.50">core::iter::traits..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (40,101,116 samples, 12.28%)</title><rect x="45.6057%" y="7189" width="12.2756%" height="15" fill="rgb(241,28,37)" fg:x="148981808" fg:w="40101116"/><text x="45.8557%" y="7199.50">profile::internal:..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (501,504 samples, 0.15%)</title><rect x="57.8812%" y="6965" width="0.1535%" height="15" fill="rgb(233,93,10)" fg:x="189082924" fg:w="501504"/><text x="58.1312%" y="6975.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (501,504 samples, 0.15%)</title><rect x="57.8812%" y="6949" width="0.1535%" height="15" fill="rgb(225,113,19)" fg:x="189082924" fg:w="501504"/><text x="58.1312%" y="6959.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (501,504 samples, 0.15%)</title><rect x="57.8812%" y="6933" width="0.1535%" height="15" fill="rgb(241,2,18)" fg:x="189082924" fg:w="501504"/><text x="58.1312%" y="6943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (590,913 samples, 0.18%)</title><rect x="58.0348%" y="6933" width="0.1809%" height="15" fill="rgb(228,207,21)" fg:x="189584428" fg:w="590913"/><text x="58.2848%" y="6943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (590,913 samples, 0.18%)</title><rect x="58.0348%" y="6917" width="0.1809%" height="15" fill="rgb(213,211,35)" fg:x="189584428" fg:w="590913"/><text x="58.2848%" y="6927.50"></text></g><g><title>core::ptr::write (590,913 samples, 0.18%)</title><rect x="58.0348%" y="6901" width="0.1809%" height="15" fill="rgb(209,83,10)" fg:x="189584428" fg:w="590913"/><text x="58.2848%" y="6911.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,092,417 samples, 0.33%)</title><rect x="58.0348%" y="6949" width="0.3344%" height="15" fill="rgb(209,164,1)" fg:x="189584428" fg:w="1092417"/><text x="58.2848%" y="6959.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (501,504 samples, 0.15%)</title><rect x="58.2156%" y="6933" width="0.1535%" height="15" fill="rgb(213,184,43)" fg:x="190175341" fg:w="501504"/><text x="58.4656%" y="6943.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (501,504 samples, 0.15%)</title><rect x="58.2156%" y="6917" width="0.1535%" height="15" fill="rgb(231,61,34)" fg:x="190175341" fg:w="501504"/><text x="58.4656%" y="6927.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (501,504 samples, 0.15%)</title><rect x="58.2156%" y="6901" width="0.1535%" height="15" fill="rgb(235,75,3)" fg:x="190175341" fg:w="501504"/><text x="58.4656%" y="6911.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (501,504 samples, 0.15%)</title><rect x="58.2156%" y="6885" width="0.1535%" height="15" fill="rgb(220,106,47)" fg:x="190175341" fg:w="501504"/><text x="58.4656%" y="6895.50"></text></g><g><title>ndarray::dimension::stride_offset (501,504 samples, 0.15%)</title><rect x="58.2156%" y="6869" width="0.1535%" height="15" fill="rgb(210,196,33)" fg:x="190175341" fg:w="501504"/><text x="58.4656%" y="6879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,095,425 samples, 0.64%)</title><rect x="57.8812%" y="7093" width="0.6414%" height="15" fill="rgb(229,154,42)" fg:x="189082924" fg:w="2095425"/><text x="58.1312%" y="7103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,095,425 samples, 0.64%)</title><rect x="57.8812%" y="7077" width="0.6414%" height="15" fill="rgb(228,114,26)" fg:x="189082924" fg:w="2095425"/><text x="58.1312%" y="7087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,095,425 samples, 0.64%)</title><rect x="57.8812%" y="7061" width="0.6414%" height="15" fill="rgb(208,144,1)" fg:x="189082924" fg:w="2095425"/><text x="58.1312%" y="7071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,095,425 samples, 0.64%)</title><rect x="57.8812%" y="7045" width="0.6414%" height="15" fill="rgb(239,112,37)" fg:x="189082924" fg:w="2095425"/><text x="58.1312%" y="7055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,095,425 samples, 0.64%)</title><rect x="57.8812%" y="7029" width="0.6414%" height="15" fill="rgb(210,96,50)" fg:x="189082924" fg:w="2095425"/><text x="58.1312%" y="7039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2,095,425 samples, 0.64%)</title><rect x="57.8812%" y="7013" width="0.6414%" height="15" fill="rgb(222,178,2)" fg:x="189082924" fg:w="2095425"/><text x="58.1312%" y="7023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,095,425 samples, 0.64%)</title><rect x="57.8812%" y="6997" width="0.6414%" height="15" fill="rgb(226,74,18)" fg:x="189082924" fg:w="2095425"/><text x="58.1312%" y="7007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,095,425 samples, 0.64%)</title><rect x="57.8812%" y="6981" width="0.6414%" height="15" fill="rgb(225,67,54)" fg:x="189082924" fg:w="2095425"/><text x="58.1312%" y="6991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,593,921 samples, 0.49%)</title><rect x="58.0348%" y="6965" width="0.4879%" height="15" fill="rgb(251,92,32)" fg:x="189584428" fg:w="1593921"/><text x="58.2848%" y="6975.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (501,504 samples, 0.15%)</title><rect x="58.3692%" y="6949" width="0.1535%" height="15" fill="rgb(228,149,22)" fg:x="190676845" fg:w="501504"/><text x="58.6192%" y="6959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (501,504 samples, 0.15%)</title><rect x="58.3692%" y="6933" width="0.1535%" height="15" fill="rgb(243,54,13)" fg:x="190676845" fg:w="501504"/><text x="58.6192%" y="6943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (501,504 samples, 0.15%)</title><rect x="58.3692%" y="6917" width="0.1535%" height="15" fill="rgb(243,180,28)" fg:x="190676845" fg:w="501504"/><text x="58.6192%" y="6927.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (3,712,487 samples, 1.14%)</title><rect x="58.5227%" y="7093" width="1.1365%" height="15" fill="rgb(208,167,24)" fg:x="191178349" fg:w="3712487"/><text x="58.7727%" y="7103.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (3,712,487 samples, 1.14%)</title><rect x="58.5227%" y="7077" width="1.1365%" height="15" fill="rgb(245,73,45)" fg:x="191178349" fg:w="3712487"/><text x="58.7727%" y="7087.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (3,712,487 samples, 1.14%)</title><rect x="58.5227%" y="7061" width="1.1365%" height="15" fill="rgb(237,203,48)" fg:x="191178349" fg:w="3712487"/><text x="58.7727%" y="7071.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (3,712,487 samples, 1.14%)</title><rect x="58.5227%" y="7045" width="1.1365%" height="15" fill="rgb(211,197,16)" fg:x="191178349" fg:w="3712487"/><text x="58.7727%" y="7055.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (3,712,487 samples, 1.14%)</title><rect x="58.5227%" y="7029" width="1.1365%" height="15" fill="rgb(243,99,51)" fg:x="191178349" fg:w="3712487"/><text x="58.7727%" y="7039.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (3,712,487 samples, 1.14%)</title><rect x="58.5227%" y="7013" width="1.1365%" height="15" fill="rgb(215,123,29)" fg:x="191178349" fg:w="3712487"/><text x="58.7727%" y="7023.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (3,712,487 samples, 1.14%)</title><rect x="58.5227%" y="6997" width="1.1365%" height="15" fill="rgb(239,186,37)" fg:x="191178349" fg:w="3712487"/><text x="58.7727%" y="7007.50"></text></g><g><title>profile::internal::sad_converged (3,611,915 samples, 1.11%)</title><rect x="59.6591%" y="7093" width="1.1057%" height="15" fill="rgb(252,136,39)" fg:x="194890836" fg:w="3611915"/><text x="59.9091%" y="7103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3,611,915 samples, 1.11%)</title><rect x="59.6591%" y="7077" width="1.1057%" height="15" fill="rgb(223,213,32)" fg:x="194890836" fg:w="3611915"/><text x="59.9091%" y="7087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,611,915 samples, 1.11%)</title><rect x="59.6591%" y="7061" width="1.1057%" height="15" fill="rgb(233,115,5)" fg:x="194890836" fg:w="3611915"/><text x="59.9091%" y="7071.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,611,915 samples, 1.11%)</title><rect x="59.6591%" y="7045" width="1.1057%" height="15" fill="rgb(207,226,44)" fg:x="194890836" fg:w="3611915"/><text x="59.9091%" y="7055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3,611,915 samples, 1.11%)</title><rect x="59.6591%" y="7029" width="1.1057%" height="15" fill="rgb(208,126,0)" fg:x="194890836" fg:w="3611915"/><text x="59.9091%" y="7039.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,235,182 samples, 0.99%)</title><rect x="60.7648%" y="7029" width="0.9903%" height="15" fill="rgb(244,66,21)" fg:x="198502751" fg:w="3235182"/><text x="61.0148%" y="7039.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,235,182 samples, 0.99%)</title><rect x="60.7648%" y="7013" width="0.9903%" height="15" fill="rgb(222,97,12)" fg:x="198502751" fg:w="3235182"/><text x="61.0148%" y="7023.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3,235,182 samples, 0.99%)</title><rect x="60.7648%" y="6997" width="0.9903%" height="15" fill="rgb(219,213,19)" fg:x="198502751" fg:w="3235182"/><text x="61.0148%" y="7007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3,235,182 samples, 0.99%)</title><rect x="60.7648%" y="6981" width="0.9903%" height="15" fill="rgb(252,169,30)" fg:x="198502751" fg:w="3235182"/><text x="61.0148%" y="6991.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (198,098,309 samples, 60.64%)</title><rect x="5.4567%" y="7637" width="60.6410%" height="15" fill="rgb(206,32,51)" fg:x="17825462" fg:w="198098309"/><text x="5.7067%" y="7647.50">rayon_core::join::join_context::call_b::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (198,098,309 samples, 60.64%)</title><rect x="5.4567%" y="7621" width="60.6410%" height="15" fill="rgb(250,172,42)" fg:x="17825462" fg:w="198098309"/><text x="5.7067%" y="7631.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (198,098,309 samples, 60.64%)</title><rect x="5.4567%" y="7605" width="60.6410%" height="15" fill="rgb(209,34,43)" fg:x="17825462" fg:w="198098309"/><text x="5.7067%" y="7615.50">rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>rayon_core::join::join_context (142,499,835 samples, 43.62%)</title><rect x="22.4762%" y="7589" width="43.6214%" height="15" fill="rgb(223,11,35)" fg:x="73423936" fg:w="142499835"/><text x="22.7262%" y="7599.50">rayon_core::join::join_context</text></g><g><title>rayon_core::registry::in_worker (142,499,835 samples, 43.62%)</title><rect x="22.4762%" y="7573" width="43.6214%" height="15" fill="rgb(251,219,26)" fg:x="73423936" fg:w="142499835"/><text x="22.7262%" y="7583.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::join::join_context::_{{closure}} (142,499,835 samples, 43.62%)</title><rect x="22.4762%" y="7557" width="43.6214%" height="15" fill="rgb(231,119,3)" fg:x="73423936" fg:w="142499835"/><text x="22.7262%" y="7567.50">rayon_core::join::join_context::_{{closure}}</text></g><g><title>rayon_core::unwind::halt_unwinding (99,383,059 samples, 30.42%)</title><rect x="35.6749%" y="7541" width="30.4227%" height="15" fill="rgb(216,97,11)" fg:x="116540712" fg:w="99383059"/><text x="35.9249%" y="7551.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (99,383,059 samples, 30.42%)</title><rect x="35.6749%" y="7525" width="30.4227%" height="15" fill="rgb(223,59,9)" fg:x="116540712" fg:w="99383059"/><text x="35.9249%" y="7535.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (99,383,059 samples, 30.42%)</title><rect x="35.6749%" y="7509" width="30.4227%" height="15" fill="rgb(233,93,31)" fg:x="116540712" fg:w="99383059"/><text x="35.9249%" y="7519.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (99,383,059 samples, 30.42%)</title><rect x="35.6749%" y="7493" width="30.4227%" height="15" fill="rgb(239,81,33)" fg:x="116540712" fg:w="99383059"/><text x="35.9249%" y="7503.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (99,383,059 samples, 30.42%)</title><rect x="35.6749%" y="7477" width="30.4227%" height="15" fill="rgb(213,120,34)" fg:x="116540712" fg:w="99383059"/><text x="35.9249%" y="7487.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (99,383,059 samples, 30.42%)</title><rect x="35.6749%" y="7461" width="30.4227%" height="15" fill="rgb(243,49,53)" fg:x="116540712" fg:w="99383059"/><text x="35.9249%" y="7471.50">rayon_core::join::join_context::call_a::_{{closur..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (99,383,059 samples, 30.42%)</title><rect x="35.6749%" y="7445" width="30.4227%" height="15" fill="rgb(247,216,33)" fg:x="116540712" fg:w="99383059"/><text x="35.9249%" y="7455.50">rayon::iter::plumbing::bridge_producer_consumer::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (99,383,059 samples, 30.42%)</title><rect x="35.6749%" y="7429" width="30.4227%" height="15" fill="rgb(226,26,14)" fg:x="116540712" fg:w="99383059"/><text x="35.9249%" y="7439.50">rayon::iter::plumbing::bridge_producer_consumer::..</text></g><g><title>rayon_core::join::join_context (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7413" width="8.2164%" height="15" fill="rgb(215,49,53)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7423.50">rayon_core:..</text></g><g><title>rayon_core::registry::in_worker (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7397" width="8.2164%" height="15" fill="rgb(245,162,40)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7407.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7381" width="8.2164%" height="15" fill="rgb(229,68,17)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7391.50">rayon_core:..</text></g><g><title>rayon_core::unwind::halt_unwinding (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7365" width="8.2164%" height="15" fill="rgb(213,182,10)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7375.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7349" width="8.2164%" height="15" fill="rgb(245,125,30)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7359.50">std::panic:..</text></g><g><title>std::panicking::try (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7333" width="8.2164%" height="15" fill="rgb(232,202,2)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7343.50">std::panick..</text></g><g><title>std::panicking::try::do_call (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7317" width="8.2164%" height="15" fill="rgb(237,140,51)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7327.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7301" width="8.2164%" height="15" fill="rgb(236,157,25)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7311.50">&lt;core::pani..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7285" width="8.2164%" height="15" fill="rgb(219,209,0)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7295.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7269" width="8.2164%" height="15" fill="rgb(240,116,54)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7279.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7253" width="8.2164%" height="15" fill="rgb(216,10,36)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7263.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7237" width="8.2164%" height="15" fill="rgb(222,72,44)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7247.50">rayon::iter..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7221" width="8.2164%" height="15" fill="rgb(232,159,9)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7231.50">&lt;rayon::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7205" width="8.2164%" height="15" fill="rgb(210,39,32)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7215.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7189" width="8.2164%" height="15" fill="rgb(216,194,45)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7199.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7173" width="8.2164%" height="15" fill="rgb(218,18,35)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7183.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7157" width="8.2164%" height="15" fill="rgb(207,83,51)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7167.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7141" width="8.2164%" height="15" fill="rgb(225,63,43)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7151.50">core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7125" width="8.2164%" height="15" fill="rgb(207,57,36)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7135.50">core::ops::..</text></g><g><title>profile::demean_impl::_{{closure}} (26,840,847 samples, 8.22%)</title><rect x="57.8812%" y="7109" width="8.2164%" height="15" fill="rgb(216,99,33)" fg:x="189082924" fg:w="26840847"/><text x="58.1312%" y="7119.50">profile::de..</text></g><g><title>profile::internal::subtract_weighted_group_mean (17,421,020 samples, 5.33%)</title><rect x="60.7648%" y="7093" width="5.3328%" height="15" fill="rgb(225,42,16)" fg:x="198502751" fg:w="17421020"/><text x="61.0148%" y="7103.50">profile..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17,421,020 samples, 5.33%)</title><rect x="60.7648%" y="7077" width="5.3328%" height="15" fill="rgb(220,201,45)" fg:x="198502751" fg:w="17421020"/><text x="61.0148%" y="7087.50">core::i..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,421,020 samples, 5.33%)</title><rect x="60.7648%" y="7061" width="5.3328%" height="15" fill="rgb(225,33,4)" fg:x="198502751" fg:w="17421020"/><text x="61.0148%" y="7071.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (17,421,020 samples, 5.33%)</title><rect x="60.7648%" y="7045" width="5.3328%" height="15" fill="rgb(224,33,50)" fg:x="198502751" fg:w="17421020"/><text x="61.0148%" y="7055.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (14,185,838 samples, 4.34%)</title><rect x="61.7551%" y="7029" width="4.3425%" height="15" fill="rgb(246,198,51)" fg:x="201737933" fg:w="14185838"/><text x="62.0051%" y="7039.50">core:..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (14,185,838 samples, 4.34%)</title><rect x="61.7551%" y="7013" width="4.3425%" height="15" fill="rgb(205,22,4)" fg:x="201737933" fg:w="14185838"/><text x="62.0051%" y="7023.50">profi..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6981" width="1.3596%" height="15" fill="rgb(206,3,8)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6965" width="1.3596%" height="15" fill="rgb(251,23,15)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6949" width="1.3596%" height="15" fill="rgb(252,88,28)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6933" width="1.3596%" height="15" fill="rgb(212,127,14)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6917" width="1.3596%" height="15" fill="rgb(247,145,37)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6901" width="1.3596%" height="15" fill="rgb(209,117,53)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6885" width="1.3596%" height="15" fill="rgb(212,90,42)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6869" width="1.3596%" height="15" fill="rgb(218,164,37)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6853" width="1.3596%" height="15" fill="rgb(246,65,34)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6863.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6837" width="1.3596%" height="15" fill="rgb(231,100,33)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6821" width="1.3596%" height="15" fill="rgb(228,126,14)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6805" width="1.3596%" height="15" fill="rgb(215,173,21)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6815.50"></text></g><g><title>core::ptr::write (4,441,555 samples, 1.36%)</title><rect x="66.0976%" y="6789" width="1.3596%" height="15" fill="rgb(210,6,40)" fg:x="215923771" fg:w="4441555"/><text x="66.3476%" y="6799.50"></text></g><g><title>[libc.so.6] (224,367,284 samples, 68.68%)</title><rect x="0.5174%" y="8101" width="68.6823%" height="15" fill="rgb(212,48,18)" fg:x="1690204" fg:w="224367284"/><text x="0.7674%" y="8111.50">[libc.so.6]</text></g><g><title>[libc.so.6] (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="8085" width="63.7431%" height="15" fill="rgb(230,214,11)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="8095.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="8069" width="63.7431%" height="15" fill="rgb(254,105,39)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="8079.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="8053" width="63.7431%" height="15" fill="rgb(245,158,5)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="8063.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="8037" width="63.7431%" height="15" fill="rgb(249,208,11)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="8047.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="8021" width="63.7431%" height="15" fill="rgb(210,39,28)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="8031.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="8005" width="63.7431%" height="15" fill="rgb(211,56,53)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="8015.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7989" width="63.7431%" height="15" fill="rgb(226,201,30)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7999.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7973" width="63.7431%" height="15" fill="rgb(239,101,34)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7983.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7957" width="63.7431%" height="15" fill="rgb(226,209,5)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7967.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7941" width="63.7431%" height="15" fill="rgb(250,105,47)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7951.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7925" width="63.7431%" height="15" fill="rgb(230,72,3)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7935.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7909" width="63.7431%" height="15" fill="rgb(232,218,39)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7919.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7893" width="63.7431%" height="15" fill="rgb(248,166,6)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7903.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}}</text></g><g><title>rayon_core::registry::ThreadBuilder::run (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7877" width="63.7431%" height="15" fill="rgb(247,89,20)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7887.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7861" width="63.7431%" height="15" fill="rgb(248,130,54)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7871.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7845" width="63.7431%" height="15" fill="rgb(234,196,4)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7855.50">rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7829" width="63.7431%" height="15" fill="rgb(250,143,31)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7839.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7813" width="63.7431%" height="15" fill="rgb(211,110,34)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7823.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::registry::WorkerThread::execute (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7797" width="63.7431%" height="15" fill="rgb(215,124,48)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7807.50">rayon_core::registry::WorkerThread::execute</text></g><g><title>rayon_core::job::JobRef::execute (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7781" width="63.7431%" height="15" fill="rgb(216,46,13)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7791.50">rayon_core::job::JobRef::execute</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7765" width="63.7431%" height="15" fill="rgb(205,184,25)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7775.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7749" width="63.7431%" height="15" fill="rgb(228,1,10)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7759.50">rayon_core::job::JobResult&lt;T&gt;::call</text></g><g><title>rayon_core::unwind::halt_unwinding (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7733" width="63.7431%" height="15" fill="rgb(213,116,27)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7743.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7717" width="63.7431%" height="15" fill="rgb(241,95,50)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7727.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7701" width="63.7431%" height="15" fill="rgb(238,48,32)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7711.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7685" width="63.7431%" height="15" fill="rgb(235,113,49)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7695.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7669" width="63.7431%" height="15" fill="rgb(205,127,43)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7679.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (208,232,026 samples, 63.74%)</title><rect x="5.4567%" y="7653" width="63.7431%" height="15" fill="rgb(250,162,2)" fg:x="17825462" fg:w="208232026"/><text x="5.7067%" y="7663.50">rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}}</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7637" width="3.1021%" height="15" fill="rgb(220,13,41)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7647.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7621" width="3.1021%" height="15" fill="rgb(249,221,25)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7631.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7605" width="3.1021%" height="15" fill="rgb(215,208,19)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7615.50">ray..</text></g><g><title>std::panic::catch_unwind (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7589" width="3.1021%" height="15" fill="rgb(236,175,2)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7599.50">std..</text></g><g><title>std::panicking::try (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7573" width="3.1021%" height="15" fill="rgb(241,52,2)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7583.50">std..</text></g><g><title>std::panicking::try::do_call (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7557" width="3.1021%" height="15" fill="rgb(248,140,14)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7567.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7541" width="3.1021%" height="15" fill="rgb(253,22,42)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7551.50">&lt;co..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7525" width="3.1021%" height="15" fill="rgb(234,61,47)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7535.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7509" width="3.1021%" height="15" fill="rgb(208,226,15)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7519.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7493" width="3.1021%" height="15" fill="rgb(217,221,4)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7503.50">ray..</text></g><g><title>rayon_core::join::join_context (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7477" width="3.1021%" height="15" fill="rgb(212,174,34)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7487.50">ray..</text></g><g><title>rayon_core::registry::in_worker (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7461" width="3.1021%" height="15" fill="rgb(253,83,4)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7471.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7445" width="3.1021%" height="15" fill="rgb(250,195,49)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7455.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7429" width="3.1021%" height="15" fill="rgb(241,192,25)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7439.50">ray..</text></g><g><title>std::panic::catch_unwind (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7413" width="3.1021%" height="15" fill="rgb(208,124,10)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7423.50">std..</text></g><g><title>std::panicking::try (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7397" width="3.1021%" height="15" fill="rgb(222,33,0)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7407.50">std..</text></g><g><title>std::panicking::try::do_call (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7381" width="3.1021%" height="15" fill="rgb(234,209,28)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7391.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7365" width="3.1021%" height="15" fill="rgb(224,11,23)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7375.50">&lt;co..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7349" width="3.1021%" height="15" fill="rgb(232,99,1)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7359.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7333" width="3.1021%" height="15" fill="rgb(237,95,45)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7343.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7317" width="3.1021%" height="15" fill="rgb(208,109,11)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7327.50">ray..</text></g><g><title>rayon_core::join::join_context (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7301" width="3.1021%" height="15" fill="rgb(216,190,48)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7311.50">ray..</text></g><g><title>rayon_core::registry::in_worker (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7285" width="3.1021%" height="15" fill="rgb(251,171,36)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7295.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7269" width="3.1021%" height="15" fill="rgb(230,62,22)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7279.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7253" width="3.1021%" height="15" fill="rgb(225,114,35)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7263.50">ray..</text></g><g><title>std::panic::catch_unwind (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7237" width="3.1021%" height="15" fill="rgb(215,118,42)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7247.50">std..</text></g><g><title>std::panicking::try (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7221" width="3.1021%" height="15" fill="rgb(243,119,21)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7231.50">std..</text></g><g><title>std::panicking::try::do_call (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7205" width="3.1021%" height="15" fill="rgb(252,177,53)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7215.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7189" width="3.1021%" height="15" fill="rgb(237,209,29)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7199.50">&lt;co..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7173" width="3.1021%" height="15" fill="rgb(212,65,23)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7183.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7157" width="3.1021%" height="15" fill="rgb(230,222,46)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7167.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7141" width="3.1021%" height="15" fill="rgb(215,135,32)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7151.50">ray..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7125" width="3.1021%" height="15" fill="rgb(246,101,22)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7135.50">ray..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7109" width="3.1021%" height="15" fill="rgb(206,107,13)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7119.50">&lt;ra..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7093" width="3.1021%" height="15" fill="rgb(250,100,44)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7103.50">cor..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7077" width="3.1021%" height="15" fill="rgb(231,147,38)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7087.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7061" width="3.1021%" height="15" fill="rgb(229,8,40)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7071.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7045" width="3.1021%" height="15" fill="rgb(221,135,30)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7055.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7029" width="3.1021%" height="15" fill="rgb(249,193,18)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7039.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="7013" width="3.1021%" height="15" fill="rgb(209,133,39)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7023.50">cor..</text></g><g><title>profile::demean_impl::_{{closure}} (10,133,717 samples, 3.10%)</title><rect x="66.0976%" y="6997" width="3.1021%" height="15" fill="rgb(232,100,14)" fg:x="215923771" fg:w="10133717"/><text x="66.3476%" y="7007.50">pro..</text></g><g><title>profile::internal::subtract_weighted_group_mean (5,692,162 samples, 1.74%)</title><rect x="67.4573%" y="6981" width="1.7425%" height="15" fill="rgb(224,185,1)" fg:x="220365326" fg:w="5692162"/><text x="67.7073%" y="6991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,692,162 samples, 1.74%)</title><rect x="67.4573%" y="6965" width="1.7425%" height="15" fill="rgb(223,139,8)" fg:x="220365326" fg:w="5692162"/><text x="67.7073%" y="6975.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,692,162 samples, 1.74%)</title><rect x="67.4573%" y="6949" width="1.7425%" height="15" fill="rgb(232,213,38)" fg:x="220365326" fg:w="5692162"/><text x="67.7073%" y="6959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (5,692,162 samples, 1.74%)</title><rect x="67.4573%" y="6933" width="1.7425%" height="15" fill="rgb(207,94,22)" fg:x="220365326" fg:w="5692162"/><text x="67.7073%" y="6943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5,692,162 samples, 1.74%)</title><rect x="67.4573%" y="6917" width="1.7425%" height="15" fill="rgb(219,183,54)" fg:x="220365326" fg:w="5692162"/><text x="67.7073%" y="6927.50"></text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (5,692,162 samples, 1.74%)</title><rect x="67.4573%" y="6901" width="1.7425%" height="15" fill="rgb(216,185,54)" fg:x="220365326" fg:w="5692162"/><text x="67.7073%" y="6911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,423,883 samples, 0.44%)</title><rect x="69.1997%" y="8069" width="0.4359%" height="15" fill="rgb(254,217,39)" fg:x="226057488" fg:w="1423883"/><text x="69.4497%" y="8079.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,423,883 samples, 0.44%)</title><rect x="69.1997%" y="8053" width="0.4359%" height="15" fill="rgb(240,178,23)" fg:x="226057488" fg:w="1423883"/><text x="69.4497%" y="8063.50"></text></g><g><title>alloc::alloc::realloc (1,423,883 samples, 0.44%)</title><rect x="69.1997%" y="8037" width="0.4359%" height="15" fill="rgb(218,11,47)" fg:x="226057488" fg:w="1423883"/><text x="69.4497%" y="8047.50"></text></g><g><title>__rustc::__rdl_realloc (1,423,883 samples, 0.44%)</title><rect x="69.1997%" y="8021" width="0.4359%" height="15" fill="rgb(218,51,51)" fg:x="226057488" fg:w="1423883"/><text x="69.4497%" y="8031.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,423,883 samples, 0.44%)</title><rect x="69.1997%" y="8005" width="0.4359%" height="15" fill="rgb(238,126,27)" fg:x="226057488" fg:w="1423883"/><text x="69.4497%" y="8015.50"></text></g><g><title>realloc (1,423,883 samples, 0.44%)</title><rect x="69.1997%" y="7989" width="0.4359%" height="15" fill="rgb(249,202,22)" fg:x="226057488" fg:w="1423883"/><text x="69.4497%" y="7999.50"></text></g><g><title>[libc.so.6] (1,423,883 samples, 0.44%)</title><rect x="69.1997%" y="7973" width="0.4359%" height="15" fill="rgb(254,195,49)" fg:x="226057488" fg:w="1423883"/><text x="69.4497%" y="7983.50"></text></g><g><title>[libc.so.6] (1,423,883 samples, 0.44%)</title><rect x="69.1997%" y="7957" width="0.4359%" height="15" fill="rgb(208,123,14)" fg:x="226057488" fg:w="1423883"/><text x="69.4497%" y="7967.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,891,137 samples, 0.89%)</title><rect x="69.1997%" y="8085" width="0.8850%" height="15" fill="rgb(224,200,8)" fg:x="226057488" fg:w="2891137"/><text x="69.4497%" y="8095.50"></text></g><g><title>malloc (1,467,254 samples, 0.45%)</title><rect x="69.6356%" y="8069" width="0.4491%" height="15" fill="rgb(217,61,36)" fg:x="227481371" fg:w="1467254"/><text x="69.8856%" y="8079.50"></text></g><g><title>[libc.so.6] (1,467,254 samples, 0.45%)</title><rect x="69.6356%" y="8053" width="0.4491%" height="15" fill="rgb(206,35,45)" fg:x="227481371" fg:w="1467254"/><text x="69.8856%" y="8063.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="8085" width="0.7095%" height="15" fill="rgb(217,65,33)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="8095.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="8069" width="0.7095%" height="15" fill="rgb(222,158,48)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="8079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="8053" width="0.7095%" height="15" fill="rgb(254,2,54)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="8063.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="8037" width="0.7095%" height="15" fill="rgb(250,143,38)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="8047.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="8021" width="0.7095%" height="15" fill="rgb(248,25,0)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="8031.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="8005" width="0.7095%" height="15" fill="rgb(206,152,27)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="8015.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7989" width="0.7095%" height="15" fill="rgb(240,77,30)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7999.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7973" width="0.7095%" height="15" fill="rgb(231,5,3)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7983.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7957" width="0.7095%" height="15" fill="rgb(207,226,32)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7941" width="0.7095%" height="15" fill="rgb(222,207,47)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7951.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7925" width="0.7095%" height="15" fill="rgb(229,115,45)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7935.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7909" width="0.7095%" height="15" fill="rgb(224,191,6)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7919.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7893" width="0.7095%" height="15" fill="rgb(230,227,24)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7877" width="0.7095%" height="15" fill="rgb(228,80,19)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7861" width="0.7095%" height="15" fill="rgb(247,229,0)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7871.50"></text></g><g><title>alloc::alloc::alloc (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7845" width="0.7095%" height="15" fill="rgb(237,194,15)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7855.50"></text></g><g><title>__rustc::__rdl_alloc (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7829" width="0.7095%" height="15" fill="rgb(219,203,20)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7839.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7813" width="0.7095%" height="15" fill="rgb(234,128,8)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7823.50"></text></g><g><title>malloc (2,317,778 samples, 0.71%)</title><rect x="70.0847%" y="7797" width="0.7095%" height="15" fill="rgb(248,202,8)" fg:x="228948625" fg:w="2317778"/><text x="70.3347%" y="7807.50"></text></g><g><title>[libc.so.6] (1,935,276 samples, 0.59%)</title><rect x="70.2018%" y="7781" width="0.5924%" height="15" fill="rgb(206,104,37)" fg:x="229331127" fg:w="1935276"/><text x="70.4518%" y="7791.50"></text></g><g><title>__default_morecore (671,148 samples, 0.21%)</title><rect x="70.5888%" y="7765" width="0.2054%" height="15" fill="rgb(223,8,27)" fg:x="230595255" fg:w="671148"/><text x="70.8388%" y="7775.50"></text></g><g><title>brk (671,148 samples, 0.21%)</title><rect x="70.5888%" y="7749" width="0.2054%" height="15" fill="rgb(216,217,28)" fg:x="230595255" fg:w="671148"/><text x="70.8388%" y="7759.50"></text></g><g><title>[unknown] (671,148 samples, 0.21%)</title><rect x="70.5888%" y="7733" width="0.2054%" height="15" fill="rgb(249,199,1)" fg:x="230595255" fg:w="671148"/><text x="70.8388%" y="7743.50"></text></g><g><title>profile::main (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="8085" width="0.4063%" height="15" fill="rgb(240,85,17)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="8095.50"></text></g><g><title>pprof::report::ReportBuilder::build (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="8069" width="0.4063%" height="15" fill="rgb(206,108,45)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="8079.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::try_iter (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="8053" width="0.4063%" height="15" fill="rgb(245,210,41)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="8063.50"></text></g><g><title>pprof::collector::HashCounter&lt;T&gt;::iter (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="8037" width="0.4063%" height="15" fill="rgb(206,13,37)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="8047.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="8021" width="0.4063%" height="15" fill="rgb(250,61,18)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="8031.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="8005" width="0.4063%" height="15" fill="rgb(235,172,48)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="8015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="7989" width="0.4063%" height="15" fill="rgb(249,201,17)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="7999.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="7973" width="0.4063%" height="15" fill="rgb(219,208,6)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="7983.50"></text></g><g><title>alloc::alloc::alloc (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="7957" width="0.4063%" height="15" fill="rgb(248,31,23)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="7967.50"></text></g><g><title>__rustc::__rdl_alloc (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="7941" width="0.4063%" height="15" fill="rgb(245,15,42)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="7951.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="7925" width="0.4063%" height="15" fill="rgb(222,217,39)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="7935.50"></text></g><g><title>malloc (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="7909" width="0.4063%" height="15" fill="rgb(210,219,27)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="7919.50"></text></g><g><title>[libc.so.6] (1,327,384 samples, 0.41%)</title><rect x="70.7943%" y="7893" width="0.4063%" height="15" fill="rgb(252,166,36)" fg:x="231266403" fg:w="1327384"/><text x="71.0443%" y="7903.50"></text></g><g><title>[libc.so.6] (1,692,782 samples, 0.52%)</title><rect x="71.2006%" y="8005" width="0.5182%" height="15" fill="rgb(245,132,34)" fg:x="232593787" fg:w="1692782"/><text x="71.4506%" y="8015.50"></text></g><g><title>perf_signal_handler (1,692,782 samples, 0.52%)</title><rect x="71.2006%" y="7989" width="0.5182%" height="15" fill="rgb(236,54,3)" fg:x="232593787" fg:w="1692782"/><text x="71.4506%" y="7999.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (1,692,782 samples, 0.52%)</title><rect x="71.2006%" y="7973" width="0.5182%" height="15" fill="rgb(241,173,43)" fg:x="232593787" fg:w="1692782"/><text x="71.4506%" y="7983.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (1,692,782 samples, 0.52%)</title><rect x="71.2006%" y="7957" width="0.5182%" height="15" fill="rgb(215,190,9)" fg:x="232593787" fg:w="1692782"/><text x="71.4506%" y="7967.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (1,692,782 samples, 0.52%)</title><rect x="71.2006%" y="7941" width="0.5182%" height="15" fill="rgb(242,101,16)" fg:x="232593787" fg:w="1692782"/><text x="71.4506%" y="7951.50"></text></g><g><title>_Unwind_Backtrace (1,692,782 samples, 0.52%)</title><rect x="71.2006%" y="7925" width="0.5182%" height="15" fill="rgb(223,190,21)" fg:x="232593787" fg:w="1692782"/><text x="71.4506%" y="7935.50"></text></g><g><title>[libgcc_s.so.1] (1,692,782 samples, 0.52%)</title><rect x="71.2006%" y="7909" width="0.5182%" height="15" fill="rgb(215,228,25)" fg:x="232593787" fg:w="1692782"/><text x="71.4506%" y="7919.50"></text></g><g><title>[libgcc_s.so.1] (382,250 samples, 0.12%)</title><rect x="71.6018%" y="7893" width="0.1170%" height="15" fill="rgb(225,36,22)" fg:x="233904319" fg:w="382250"/><text x="71.8518%" y="7903.50"></text></g><g><title>_Unwind_Find_FDE (382,250 samples, 0.12%)</title><rect x="71.6018%" y="7877" width="0.1170%" height="15" fill="rgb(251,106,46)" fg:x="233904319" fg:w="382250"/><text x="71.8518%" y="7887.50"></text></g><g><title>[unknown] (10,373,764 samples, 3.18%)</title><rect x="69.1997%" y="8101" width="3.1756%" height="15" fill="rgb(208,90,1)" fg:x="226057488" fg:w="10373764"/><text x="69.4497%" y="8111.50">[un..</text></g><g><title>std::io::Write::write_all (3,837,465 samples, 1.17%)</title><rect x="71.2006%" y="8085" width="1.1747%" height="15" fill="rgb(243,10,4)" fg:x="232593787" fg:w="3837465"/><text x="71.4506%" y="8095.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3,837,465 samples, 1.17%)</title><rect x="71.2006%" y="8069" width="1.1747%" height="15" fill="rgb(212,137,27)" fg:x="232593787" fg:w="3837465"/><text x="71.4506%" y="8079.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3,837,465 samples, 1.17%)</title><rect x="71.2006%" y="8053" width="1.1747%" height="15" fill="rgb(231,220,49)" fg:x="232593787" fg:w="3837465"/><text x="71.4506%" y="8063.50"></text></g><g><title>std::sys::fs::unix::File::write (3,837,465 samples, 1.17%)</title><rect x="71.2006%" y="8037" width="1.1747%" height="15" fill="rgb(237,96,20)" fg:x="232593787" fg:w="3837465"/><text x="71.4506%" y="8047.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (3,837,465 samples, 1.17%)</title><rect x="71.2006%" y="8021" width="1.1747%" height="15" fill="rgb(239,229,30)" fg:x="232593787" fg:w="3837465"/><text x="71.4506%" y="8031.50"></text></g><g><title>write (2,144,683 samples, 0.66%)</title><rect x="71.7188%" y="8005" width="0.6565%" height="15" fill="rgb(219,65,33)" fg:x="234286569" fg:w="2144683"/><text x="71.9688%" y="8015.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.15%)</title><rect x="72.3753%" y="8037" width="0.1535%" height="15" fill="rgb(243,134,7)" fg:x="236431252" fg:w="501504"/><text x="72.6253%" y="8047.50"></text></g><g><title>__getdelim (501,504 samples, 0.15%)</title><rect x="72.3753%" y="8021" width="0.1535%" height="15" fill="rgb(216,177,54)" fg:x="236431252" fg:w="501504"/><text x="72.6253%" y="8031.50"></text></g><g><title>realloc (501,504 samples, 0.15%)</title><rect x="72.3753%" y="8005" width="0.1535%" height="15" fill="rgb(211,160,20)" fg:x="236431252" fg:w="501504"/><text x="72.6253%" y="8015.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.15%)</title><rect x="72.3753%" y="7989" width="0.1535%" height="15" fill="rgb(239,85,39)" fg:x="236431252" fg:w="501504"/><text x="72.6253%" y="7999.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Collector&lt;pprof::frames::UnresolvedFrames&gt;&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7925" width="0.5477%" height="15" fill="rgb(232,125,22)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::HashCounter&lt;pprof::frames::UnresolvedFrames&gt;&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7909" width="0.5477%" height="15" fill="rgb(244,57,34)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt;&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7893" width="0.5477%" height="15" fill="rgb(214,203,32)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7877" width="0.5477%" height="15" fill="rgb(207,58,43)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7861" width="0.5477%" height="15" fill="rgb(215,193,15)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt;&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7845" width="0.5477%" height="15" fill="rgb(232,15,44)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7829" width="0.5477%" height="15" fill="rgb(212,3,48)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7839.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7813" width="0.5477%" height="15" fill="rgb(218,128,7)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7823.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::frames::UnresolvedFrames&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7797" width="0.5477%" height="15" fill="rgb(226,216,39)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[backtrace::backtrace::Frame: 128]&gt;&gt; (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7781" width="0.5477%" height="15" fill="rgb(243,47,51)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7791.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1,789,206 samples, 0.55%)</title><rect x="72.5288%" y="7765" width="0.5477%" height="15" fill="rgb(241,183,40)" fg:x="236932756" fg:w="1789206"/><text x="72.7788%" y="7775.50"></text></g><g><title>[libc.so.6] (1,190,477 samples, 0.36%)</title><rect x="73.2068%" y="7653" width="0.3644%" height="15" fill="rgb(231,217,32)" fg:x="239147429" fg:w="1190477"/><text x="73.4568%" y="7663.50"></text></g><g><title>[unknown] (1,190,477 samples, 0.36%)</title><rect x="73.2068%" y="7637" width="0.3644%" height="15" fill="rgb(229,61,38)" fg:x="239147429" fg:w="1190477"/><text x="73.4568%" y="7647.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (3,291,119 samples, 1.01%)</title><rect x="73.0765%" y="7765" width="1.0075%" height="15" fill="rgb(225,210,5)" fg:x="238721962" fg:w="3291119"/><text x="73.3265%" y="7775.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (3,291,119 samples, 1.01%)</title><rect x="73.0765%" y="7749" width="1.0075%" height="15" fill="rgb(231,79,45)" fg:x="238721962" fg:w="3291119"/><text x="73.3265%" y="7759.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (3,291,119 samples, 1.01%)</title><rect x="73.0765%" y="7733" width="1.0075%" height="15" fill="rgb(224,100,7)" fg:x="238721962" fg:w="3291119"/><text x="73.3265%" y="7743.50"></text></g><g><title>std::time::SystemTime::now (3,291,119 samples, 1.01%)</title><rect x="73.0765%" y="7717" width="1.0075%" height="15" fill="rgb(241,198,18)" fg:x="238721962" fg:w="3291119"/><text x="73.3265%" y="7727.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (3,291,119 samples, 1.01%)</title><rect x="73.0765%" y="7701" width="1.0075%" height="15" fill="rgb(252,97,53)" fg:x="238721962" fg:w="3291119"/><text x="73.3265%" y="7711.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,291,119 samples, 1.01%)</title><rect x="73.0765%" y="7685" width="1.0075%" height="15" fill="rgb(220,88,7)" fg:x="238721962" fg:w="3291119"/><text x="73.3265%" y="7695.50"></text></g><g><title>clock_gettime (2,865,652 samples, 0.88%)</title><rect x="73.2068%" y="7669" width="0.8772%" height="15" fill="rgb(213,176,14)" fg:x="239147429" fg:w="2865652"/><text x="73.4568%" y="7679.50"></text></g><g><title>__vdso_clock_gettime (1,675,175 samples, 0.51%)</title><rect x="73.5712%" y="7653" width="0.5128%" height="15" fill="rgb(246,73,7)" fg:x="240337906" fg:w="1675175"/><text x="73.8212%" y="7663.50"></text></g><g><title>[[vdso]] (801,590 samples, 0.25%)</title><rect x="73.8386%" y="7637" width="0.2454%" height="15" fill="rgb(245,64,36)" fg:x="241211491" fg:w="801590"/><text x="74.0886%" y="7647.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7909" width="4.1701%" height="15" fill="rgb(245,80,10)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7919.50">&lt;ppro..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7893" width="4.1701%" height="15" fill="rgb(232,107,50)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7903.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7877" width="4.1701%" height="15" fill="rgb(253,3,0)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7887.50">alloc..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7861" width="4.1701%" height="15" fill="rgb(212,99,53)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7871.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7845" width="4.1701%" height="15" fill="rgb(249,111,54)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7855.50">&lt;core..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7829" width="4.1701%" height="15" fill="rgb(249,55,30)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7839.50">&lt;core..</text></g><g><title>core::ops::function::FnMut::call_mut (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7813" width="4.1701%" height="15" fill="rgb(237,47,42)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7823.50">core:..</text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7797" width="4.1701%" height="15" fill="rgb(211,20,18)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7807.50">&lt;ppro..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (13,622,595 samples, 4.17%)</title><rect x="73.0765%" y="7781" width="4.1701%" height="15" fill="rgb(231,203,46)" fg:x="238721962" fg:w="13622595"/><text x="73.3265%" y="7791.50">&lt;allo..</text></g><g><title>core::ptr::write (10,331,476 samples, 3.16%)</title><rect x="74.0840%" y="7765" width="3.1626%" height="15" fill="rgb(237,142,3)" fg:x="242013081" fg:w="10331476"/><text x="74.3340%" y="7775.50">cor..</text></g><g><title>[unknown] (5,919,040 samples, 1.81%)</title><rect x="75.4347%" y="7749" width="1.8119%" height="15" fill="rgb(241,107,1)" fg:x="246425517" fg:w="5919040"/><text x="75.6847%" y="7759.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;pprof::profiler::ProfilerGuard&gt; (15,800,049 samples, 4.84%)</title><rect x="72.5288%" y="7989" width="4.8366%" height="15" fill="rgb(229,83,13)" fg:x="236932756" fg:w="15800049"/><text x="72.7788%" y="7999.50">core::..</text></g><g><title>&lt;pprof::profiler::ProfilerGuard as core::ops::drop::Drop&gt;::drop (15,800,049 samples, 4.84%)</title><rect x="72.5288%" y="7973" width="4.8366%" height="15" fill="rgb(241,91,40)" fg:x="236932756" fg:w="15800049"/><text x="72.7788%" y="7983.50">&lt;pprof..</text></g><g><title>pprof::profiler::Profiler::stop (15,800,049 samples, 4.84%)</title><rect x="72.5288%" y="7957" width="4.8366%" height="15" fill="rgb(225,3,45)" fg:x="236932756" fg:w="15800049"/><text x="72.7788%" y="7967.50">pprof:..</text></g><g><title>pprof::profiler::Profiler::init (15,800,049 samples, 4.84%)</title><rect x="72.5288%" y="7941" width="4.8366%" height="15" fill="rgb(244,223,14)" fg:x="236932756" fg:w="15800049"/><text x="72.7788%" y="7951.50">pprof:..</text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (14,010,843 samples, 4.29%)</title><rect x="73.0765%" y="7925" width="4.2889%" height="15" fill="rgb(224,124,37)" fg:x="238721962" fg:w="14010843"/><text x="73.3265%" y="7935.50">pprof..</text></g><g><title>pprof::collector::TempFdArray&lt;T&gt;::new (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7909" width="0.1188%" height="15" fill="rgb(251,171,30)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7893" width="0.1188%" height="15" fill="rgb(236,46,54)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7877" width="0.1188%" height="15" fill="rgb(245,213,5)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7887.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7861" width="0.1188%" height="15" fill="rgb(230,144,27)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7871.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7845" width="0.1188%" height="15" fill="rgb(220,86,6)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7855.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7829" width="0.1188%" height="15" fill="rgb(240,20,13)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7839.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7813" width="0.1188%" height="15" fill="rgb(217,89,34)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7797" width="0.1188%" height="15" fill="rgb(229,13,5)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7807.50"></text></g><g><title>core::ptr::write (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7781" width="0.1188%" height="15" fill="rgb(244,67,35)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7791.50"></text></g><g><title>[unknown] (388,248 samples, 0.12%)</title><rect x="77.2466%" y="7765" width="0.1188%" height="15" fill="rgb(221,40,2)" fg:x="252344557" fg:w="388248"/><text x="77.4966%" y="7775.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1,213,595 samples, 0.37%)</title><rect x="78.1612%" y="7669" width="0.3715%" height="15" fill="rgb(237,157,21)" fg:x="255332351" fg:w="1213595"/><text x="78.4112%" y="7679.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1,213,595 samples, 0.37%)</title><rect x="78.1612%" y="7653" width="0.3715%" height="15" fill="rgb(222,94,11)" fg:x="255332351" fg:w="1213595"/><text x="78.4112%" y="7663.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1,213,595 samples, 0.37%)</title><rect x="78.1612%" y="7637" width="0.3715%" height="15" fill="rgb(249,113,6)" fg:x="255332351" fg:w="1213595"/><text x="78.4112%" y="7647.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1,213,595 samples, 0.37%)</title><rect x="78.1612%" y="7621" width="0.3715%" height="15" fill="rgb(238,137,36)" fg:x="255332351" fg:w="1213595"/><text x="78.4112%" y="7631.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (1,504,081 samples, 0.46%)</title><rect x="78.5327%" y="7669" width="0.4604%" height="15" fill="rgb(210,102,26)" fg:x="256545946" fg:w="1504081"/><text x="78.7827%" y="7679.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (1,504,081 samples, 0.46%)</title><rect x="78.5327%" y="7653" width="0.4604%" height="15" fill="rgb(218,30,30)" fg:x="256545946" fg:w="1504081"/><text x="78.7827%" y="7663.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1,504,081 samples, 0.46%)</title><rect x="78.5327%" y="7637" width="0.4604%" height="15" fill="rgb(214,67,26)" fg:x="256545946" fg:w="1504081"/><text x="78.7827%" y="7647.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (551,398 samples, 0.17%)</title><rect x="78.9931%" y="7669" width="0.1688%" height="15" fill="rgb(251,9,53)" fg:x="258050027" fg:w="551398"/><text x="79.2431%" y="7679.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (551,398 samples, 0.17%)</title><rect x="78.9931%" y="7653" width="0.1688%" height="15" fill="rgb(228,204,25)" fg:x="258050027" fg:w="551398"/><text x="79.2431%" y="7663.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (551,398 samples, 0.17%)</title><rect x="78.9931%" y="7637" width="0.1688%" height="15" fill="rgb(207,153,8)" fg:x="258050027" fg:w="551398"/><text x="79.2431%" y="7647.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (501,504 samples, 0.15%)</title><rect x="79.1619%" y="7669" width="0.1535%" height="15" fill="rgb(242,9,16)" fg:x="258601425" fg:w="501504"/><text x="79.4119%" y="7679.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (501,504 samples, 0.15%)</title><rect x="79.1619%" y="7653" width="0.1535%" height="15" fill="rgb(217,211,10)" fg:x="258601425" fg:w="501504"/><text x="79.4119%" y="7663.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (501,504 samples, 0.15%)</title><rect x="79.1619%" y="7637" width="0.1535%" height="15" fill="rgb(219,228,52)" fg:x="258601425" fg:w="501504"/><text x="79.4119%" y="7647.50"></text></g><g><title>rand::rng::Rng::random (8,283,556 samples, 2.54%)</title><rect x="77.3655%" y="7909" width="2.5357%" height="15" fill="rgb(231,92,29)" fg:x="252732805" fg:w="8283556"/><text x="77.6155%" y="7919.50">ra..</text></g><g><title>rand::distr::float::&lt;impl rand::distr::distribution::Distribution&lt;f64&gt; for rand::distr::StandardUniform&gt;::sample (8,283,556 samples, 2.54%)</title><rect x="77.3655%" y="7893" width="2.5357%" height="15" fill="rgb(232,8,23)" fg:x="252732805" fg:w="8283556"/><text x="77.6155%" y="7903.50">ra..</text></g><g><title>rand::rng::Rng::random (6,549,912 samples, 2.01%)</title><rect x="77.8962%" y="7877" width="2.0050%" height="15" fill="rgb(216,211,34)" fg:x="254466449" fg:w="6549912"/><text x="78.1462%" y="7887.50">r..</text></g><g><title>rand::distr::integer::&lt;impl rand::distr::distribution::Distribution&lt;u64&gt; for rand::distr::StandardUniform&gt;::sample (6,549,912 samples, 2.01%)</title><rect x="77.8962%" y="7861" width="2.0050%" height="15" fill="rgb(236,151,0)" fg:x="254466449" fg:w="6549912"/><text x="78.1462%" y="7871.50">r..</text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (6,549,912 samples, 2.01%)</title><rect x="77.8962%" y="7845" width="2.0050%" height="15" fill="rgb(209,168,3)" fg:x="254466449" fg:w="6549912"/><text x="78.1462%" y="7855.50">&lt;..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (6,549,912 samples, 2.01%)</title><rect x="77.8962%" y="7829" width="2.0050%" height="15" fill="rgb(208,129,28)" fg:x="254466449" fg:w="6549912"/><text x="78.1462%" y="7839.50">&lt;..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (6,549,912 samples, 2.01%)</title><rect x="77.8962%" y="7813" width="2.0050%" height="15" fill="rgb(229,78,22)" fg:x="254466449" fg:w="6549912"/><text x="78.1462%" y="7823.50">&lt;..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (5,684,010 samples, 1.74%)</title><rect x="78.1612%" y="7797" width="1.7400%" height="15" fill="rgb(228,187,13)" fg:x="255332351" fg:w="5684010"/><text x="78.4112%" y="7807.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (5,684,010 samples, 1.74%)</title><rect x="78.1612%" y="7781" width="1.7400%" height="15" fill="rgb(240,119,24)" fg:x="255332351" fg:w="5684010"/><text x="78.4112%" y="7791.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (5,684,010 samples, 1.74%)</title><rect x="78.1612%" y="7765" width="1.7400%" height="15" fill="rgb(209,194,42)" fg:x="255332351" fg:w="5684010"/><text x="78.4112%" y="7775.50"></text></g><g><title>rand_chacha::guts::refill_wide (5,684,010 samples, 1.74%)</title><rect x="78.1612%" y="7749" width="1.7400%" height="15" fill="rgb(247,200,46)" fg:x="255332351" fg:w="5684010"/><text x="78.4112%" y="7759.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (5,684,010 samples, 1.74%)</title><rect x="78.1612%" y="7733" width="1.7400%" height="15" fill="rgb(218,76,16)" fg:x="255332351" fg:w="5684010"/><text x="78.4112%" y="7743.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (5,684,010 samples, 1.74%)</title><rect x="78.1612%" y="7717" width="1.7400%" height="15" fill="rgb(225,21,48)" fg:x="255332351" fg:w="5684010"/><text x="78.4112%" y="7727.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (5,684,010 samples, 1.74%)</title><rect x="78.1612%" y="7701" width="1.7400%" height="15" fill="rgb(239,223,50)" fg:x="255332351" fg:w="5684010"/><text x="78.4112%" y="7711.50"></text></g><g><title>rand_chacha::guts::round (5,684,010 samples, 1.74%)</title><rect x="78.1612%" y="7685" width="1.7400%" height="15" fill="rgb(244,45,21)" fg:x="255332351" fg:w="5684010"/><text x="78.4112%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1,913,432 samples, 0.59%)</title><rect x="79.3155%" y="7669" width="0.5857%" height="15" fill="rgb(232,33,43)" fg:x="259102929" fg:w="1913432"/><text x="79.5655%" y="7679.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1,913,432 samples, 0.59%)</title><rect x="79.3155%" y="7653" width="0.5857%" height="15" fill="rgb(209,8,3)" fg:x="259102929" fg:w="1913432"/><text x="79.5655%" y="7663.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1,913,432 samples, 0.59%)</title><rect x="79.3155%" y="7637" width="0.5857%" height="15" fill="rgb(214,25,53)" fg:x="259102929" fg:w="1913432"/><text x="79.5655%" y="7647.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_fn (10,417,445 samples, 3.19%)</title><rect x="77.3655%" y="7989" width="3.1889%" height="15" fill="rgb(254,186,54)" fg:x="252732805" fg:w="10417445"/><text x="77.6155%" y="7999.50">nda..</text></g><g><title>ndarray::iterators::to_vec_mapped (10,417,445 samples, 3.19%)</title><rect x="77.3655%" y="7973" width="3.1889%" height="15" fill="rgb(208,174,49)" fg:x="252732805" fg:w="10417445"/><text x="77.6155%" y="7983.50">nda..</text></g><g><title>&lt;ndarray::indexes::IndicesIter&lt;D&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,417,445 samples, 3.19%)</title><rect x="77.3655%" y="7957" width="3.1889%" height="15" fill="rgb(233,191,51)" fg:x="252732805" fg:w="10417445"/><text x="77.6155%" y="7967.50">&lt;nd..</text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (10,417,445 samples, 3.19%)</title><rect x="77.3655%" y="7941" width="3.1889%" height="15" fill="rgb(222,134,10)" fg:x="252732805" fg:w="10417445"/><text x="77.6155%" y="7951.50">nda..</text></g><g><title>profile::main::_{{closure}} (10,417,445 samples, 3.19%)</title><rect x="77.3655%" y="7925" width="3.1889%" height="15" fill="rgb(230,226,20)" fg:x="252732805" fg:w="10417445"/><text x="77.6155%" y="7935.50">pro..</text></g><g><title>rand::rng::Rng::random_range (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7909" width="0.6532%" height="15" fill="rgb(251,111,25)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7919.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distr::uniform::SampleRange&lt;T&gt;&gt;::sample_single (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7893" width="0.6532%" height="15" fill="rgb(224,40,46)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7903.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler&gt;::sample_single (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7877" width="0.6532%" height="15" fill="rgb(236,108,47)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7887.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformInt&lt;u32&gt; as rand::distr::uniform::UniformSampler&gt;::sample_single (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7861" width="0.6532%" height="15" fill="rgb(234,93,0)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7871.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformInt&lt;u32&gt; as rand::distr::uniform::UniformSampler&gt;::sample_single_inclusive (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7845" width="0.6532%" height="15" fill="rgb(224,213,32)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7855.50"></text></g><g><title>rand::rng::Rng::random (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7829" width="0.6532%" height="15" fill="rgb(251,11,48)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7839.50"></text></g><g><title>rand::distr::integer::&lt;impl rand::distr::distribution::Distribution&lt;u32&gt; for rand::distr::StandardUniform&gt;::sample (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7813" width="0.6532%" height="15" fill="rgb(236,173,5)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7823.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u32 (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7797" width="0.6532%" height="15" fill="rgb(230,95,12)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7807.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u32 (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7781" width="0.6532%" height="15" fill="rgb(232,209,1)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7791.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7765" width="0.6532%" height="15" fill="rgb(232,6,1)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7775.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7749" width="0.6532%" height="15" fill="rgb(210,224,50)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7759.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7733" width="0.6532%" height="15" fill="rgb(228,127,35)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7743.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7717" width="0.6532%" height="15" fill="rgb(245,102,45)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7727.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7701" width="0.6532%" height="15" fill="rgb(214,1,49)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7711.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7685" width="0.6532%" height="15" fill="rgb(226,163,40)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7695.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7669" width="0.6532%" height="15" fill="rgb(239,212,28)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7679.50"></text></g><g><title>rand_chacha::guts::round (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7653" width="0.6532%" height="15" fill="rgb(220,20,13)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7663.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7637" width="0.6532%" height="15" fill="rgb(210,164,35)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7647.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7621" width="0.6532%" height="15" fill="rgb(248,109,41)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7631.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7605" width="0.6532%" height="15" fill="rgb(238,23,50)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7615.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2,133,889 samples, 0.65%)</title><rect x="79.9012%" y="7589" width="0.6532%" height="15" fill="rgb(211,48,49)" fg:x="261016361" fg:w="2133889"/><text x="80.1512%" y="7599.50"></text></g><g><title>[libc.so.6] (3,240,190 samples, 0.99%)</title><rect x="80.5544%" y="7445" width="0.9919%" height="15" fill="rgb(223,36,21)" fg:x="263150250" fg:w="3240190"/><text x="80.8044%" y="7455.50"></text></g><g><title>[unknown] (3,240,190 samples, 0.99%)</title><rect x="80.5544%" y="7429" width="0.9919%" height="15" fill="rgb(207,123,46)" fg:x="263150250" fg:w="3240190"/><text x="80.8044%" y="7439.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (5,431,437 samples, 1.66%)</title><rect x="80.5544%" y="7557" width="1.6626%" height="15" fill="rgb(240,218,32)" fg:x="263150250" fg:w="5431437"/><text x="80.8044%" y="7567.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (5,431,437 samples, 1.66%)</title><rect x="80.5544%" y="7541" width="1.6626%" height="15" fill="rgb(252,5,43)" fg:x="263150250" fg:w="5431437"/><text x="80.8044%" y="7551.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (5,431,437 samples, 1.66%)</title><rect x="80.5544%" y="7525" width="1.6626%" height="15" fill="rgb(252,84,19)" fg:x="263150250" fg:w="5431437"/><text x="80.8044%" y="7535.50"></text></g><g><title>std::time::SystemTime::now (5,431,437 samples, 1.66%)</title><rect x="80.5544%" y="7509" width="1.6626%" height="15" fill="rgb(243,152,39)" fg:x="263150250" fg:w="5431437"/><text x="80.8044%" y="7519.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (5,431,437 samples, 1.66%)</title><rect x="80.5544%" y="7493" width="1.6626%" height="15" fill="rgb(234,160,15)" fg:x="263150250" fg:w="5431437"/><text x="80.8044%" y="7503.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5,431,437 samples, 1.66%)</title><rect x="80.5544%" y="7477" width="1.6626%" height="15" fill="rgb(237,34,20)" fg:x="263150250" fg:w="5431437"/><text x="80.8044%" y="7487.50"></text></g><g><title>clock_gettime (5,431,437 samples, 1.66%)</title><rect x="80.5544%" y="7461" width="1.6626%" height="15" fill="rgb(229,97,13)" fg:x="263150250" fg:w="5431437"/><text x="80.8044%" y="7471.50"></text></g><g><title>__vdso_clock_gettime (2,191,247 samples, 0.67%)</title><rect x="81.5463%" y="7445" width="0.6708%" height="15" fill="rgb(234,71,50)" fg:x="266390440" fg:w="2191247"/><text x="81.7963%" y="7455.50"></text></g><g><title>[[vdso]] (1,306,906 samples, 0.40%)</title><rect x="81.8170%" y="7429" width="0.4001%" height="15" fill="rgb(253,155,4)" fg:x="267274781" fg:w="1306906"/><text x="82.0670%" y="7439.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7941" width="4.8672%" height="15" fill="rgb(222,185,37)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7951.50">&lt;once_..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7925" width="4.8672%" height="15" fill="rgb(251,177,13)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7935.50">once_c..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7909" width="4.8672%" height="15" fill="rgb(250,179,40)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7919.50">once_c..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7893" width="4.8672%" height="15" fill="rgb(242,44,2)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7903.50">once_c..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7877" width="4.8672%" height="15" fill="rgb(216,177,13)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7887.50">once_c..</text></g><g><title>once_cell::imp::initialize_or_wait (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7861" width="4.8672%" height="15" fill="rgb(216,106,43)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7871.50">once_c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7845" width="4.8672%" height="15" fill="rgb(216,183,2)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7855.50">core::..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7829" width="4.8672%" height="15" fill="rgb(249,75,3)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7839.50">once_c..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7813" width="4.8672%" height="15" fill="rgb(219,67,39)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7823.50">once_c..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7797" width="4.8672%" height="15" fill="rgb(253,228,2)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7807.50">once_c..</text></g><g><title>core::ops::function::FnOnce::call_once (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7781" width="4.8672%" height="15" fill="rgb(235,138,27)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7791.50">core::..</text></g><g><title>core::ops::function::FnOnce::call_once (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7765" width="4.8672%" height="15" fill="rgb(236,97,51)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7775.50">core::..</text></g><g><title>pprof::profiler::PROFILER::_{{closure}} (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7749" width="4.8672%" height="15" fill="rgb(240,80,30)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7759.50">pprof:..</text></g><g><title>pprof::profiler::Profiler::new (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7733" width="4.8672%" height="15" fill="rgb(230,178,19)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7743.50">pprof:..</text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7717" width="4.8672%" height="15" fill="rgb(210,190,27)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7727.50">pprof:..</text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7701" width="4.8672%" height="15" fill="rgb(222,107,31)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7711.50">&lt;pprof..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7685" width="4.8672%" height="15" fill="rgb(216,127,34)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7695.50">alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7669" width="4.8672%" height="15" fill="rgb(234,116,52)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7679.50">alloc:..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7653" width="4.8672%" height="15" fill="rgb(222,124,15)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7663.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7637" width="4.8672%" height="15" fill="rgb(231,179,28)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7647.50">&lt;core:..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7621" width="4.8672%" height="15" fill="rgb(226,93,45)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7631.50">&lt;core:..</text></g><g><title>core::ops::function::FnMut::call_mut (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7605" width="4.8672%" height="15" fill="rgb(215,8,51)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7615.50">core::..</text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7589" width="4.8672%" height="15" fill="rgb(223,106,5)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7599.50">&lt;pprof..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (15,899,847 samples, 4.87%)</title><rect x="80.5544%" y="7573" width="4.8672%" height="15" fill="rgb(250,191,5)" fg:x="263150250" fg:w="15899847"/><text x="80.8044%" y="7583.50">&lt;alloc..</text></g><g><title>core::ptr::write (10,468,410 samples, 3.20%)</title><rect x="82.2170%" y="7557" width="3.2045%" height="15" fill="rgb(242,132,44)" fg:x="268581687" fg:w="10468410"/><text x="82.4670%" y="7567.50">cor..</text></g><g><title>[unknown] (5,040,651 samples, 1.54%)</title><rect x="83.8786%" y="7541" width="1.5430%" height="15" fill="rgb(251,152,29)" fg:x="274009446" fg:w="5040651"/><text x="84.1286%" y="7551.50"></text></g><g><title>gimli::read::abbrev::AttributeSpecification::parse (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7493" width="0.4158%" height="15" fill="rgb(218,179,5)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7503.50"></text></g><g><title>gimli::read::abbrev::AttributeSpecification::parse_form (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7477" width="0.4158%" height="15" fill="rgb(227,67,19)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7487.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128_u16 (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7461" width="0.4158%" height="15" fill="rgb(233,119,31)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7471.50"></text></g><g><title>gimli::leb128::read::u16 (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7445" width="0.4158%" height="15" fill="rgb(241,120,22)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7455.50"></text></g><g><title>gimli::read::reader::Reader::read_u8 (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7429" width="0.4158%" height="15" fill="rgb(224,102,30)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7439.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7413" width="0.4158%" height="15" fill="rgb(210,164,37)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7423.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7397" width="0.4158%" height="15" fill="rgb(226,191,16)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7407.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7381" width="0.4158%" height="15" fill="rgb(214,40,45)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7391.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7365" width="0.4158%" height="15" fill="rgb(244,29,26)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7375.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7349" width="0.4158%" height="15" fill="rgb(216,16,5)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7359.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7333" width="0.4158%" height="15" fill="rgb(249,76,35)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7317" width="0.4158%" height="15" fill="rgb(207,11,44)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7327.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7301" width="0.4158%" height="15" fill="rgb(228,190,49)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7311.50"></text></g><g><title>core::slice::index::get_noubcheck (1,358,251 samples, 0.42%)</title><rect x="85.4216%" y="7285" width="0.4158%" height="15" fill="rgb(214,173,12)" fg:x="279050097" fg:w="1358251"/><text x="85.6716%" y="7295.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse (2,348,176 samples, 0.72%)</title><rect x="85.4216%" y="7525" width="0.7188%" height="15" fill="rgb(218,26,35)" fg:x="279050097" fg:w="2348176"/><text x="85.6716%" y="7535.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_attributes (2,348,176 samples, 0.72%)</title><rect x="85.4216%" y="7509" width="0.7188%" height="15" fill="rgb(220,200,19)" fg:x="279050097" fg:w="2348176"/><text x="85.6716%" y="7519.50"></text></g><g><title>gimli::read::abbrev::Attributes::push (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7493" width="0.3030%" height="15" fill="rgb(239,95,49)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7477" width="0.3030%" height="15" fill="rgb(235,85,53)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7461" width="0.3030%" height="15" fill="rgb(233,133,31)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7445" width="0.3030%" height="15" fill="rgb(218,25,20)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7429" width="0.3030%" height="15" fill="rgb(252,210,38)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7439.50"></text></g><g><title>alloc::raw_vec::finish_grow (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7413" width="0.3030%" height="15" fill="rgb(242,134,21)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7397" width="0.3030%" height="15" fill="rgb(213,28,48)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7407.50"></text></g><g><title>alloc::alloc::Global::grow_impl (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7381" width="0.3030%" height="15" fill="rgb(250,196,2)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7391.50"></text></g><g><title>alloc::alloc::realloc (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7365" width="0.3030%" height="15" fill="rgb(227,5,17)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7375.50"></text></g><g><title>__rustc::__rdl_realloc (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7349" width="0.3030%" height="15" fill="rgb(221,226,24)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7359.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7333" width="0.3030%" height="15" fill="rgb(211,5,48)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7343.50"></text></g><g><title>realloc (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7317" width="0.3030%" height="15" fill="rgb(219,150,6)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7327.50"></text></g><g><title>[libc.so.6] (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7301" width="0.3030%" height="15" fill="rgb(251,46,16)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7311.50"></text></g><g><title>[libc.so.6] (989,925 samples, 0.30%)</title><rect x="85.8374%" y="7285" width="0.3030%" height="15" fill="rgb(220,204,40)" fg:x="280408348" fg:w="989925"/><text x="86.0874%" y="7295.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::abbreviations (3,862,541 samples, 1.18%)</title><rect x="85.4216%" y="7589" width="1.1824%" height="15" fill="rgb(211,85,2)" fg:x="279050097" fg:w="3862541"/><text x="85.6716%" y="7599.50"></text></g><g><title>gimli::read::abbrev::AbbreviationsCache::get (3,862,541 samples, 1.18%)</title><rect x="85.4216%" y="7573" width="1.1824%" height="15" fill="rgb(229,17,7)" fg:x="279050097" fg:w="3862541"/><text x="85.6716%" y="7583.50"></text></g><g><title>gimli::read::abbrev::DebugAbbrev&lt;R&gt;::abbreviations (3,862,541 samples, 1.18%)</title><rect x="85.4216%" y="7557" width="1.1824%" height="15" fill="rgb(239,72,28)" fg:x="279050097" fg:w="3862541"/><text x="85.6716%" y="7567.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::parse (3,862,541 samples, 1.18%)</title><rect x="85.4216%" y="7541" width="1.1824%" height="15" fill="rgb(230,47,54)" fg:x="279050097" fg:w="3862541"/><text x="85.6716%" y="7551.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::insert (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7525" width="0.4636%" height="15" fill="rgb(214,50,8)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7509" width="0.4636%" height="15" fill="rgb(216,198,43)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7493" width="0.4636%" height="15" fill="rgb(234,20,35)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7477" width="0.4636%" height="15" fill="rgb(254,45,19)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7461" width="0.4636%" height="15" fill="rgb(219,14,44)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7471.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7445" width="0.4636%" height="15" fill="rgb(217,220,26)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7429" width="0.4636%" height="15" fill="rgb(213,158,28)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7439.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7413" width="0.4636%" height="15" fill="rgb(252,51,52)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7423.50"></text></g><g><title>alloc::alloc::realloc (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7397" width="0.4636%" height="15" fill="rgb(246,89,16)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7407.50"></text></g><g><title>__rustc::__rdl_realloc (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7381" width="0.4636%" height="15" fill="rgb(216,158,49)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7391.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7365" width="0.4636%" height="15" fill="rgb(236,107,19)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7375.50"></text></g><g><title>realloc (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7349" width="0.4636%" height="15" fill="rgb(228,185,30)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7359.50"></text></g><g><title>[libc.so.6] (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7333" width="0.4636%" height="15" fill="rgb(246,134,8)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7343.50"></text></g><g><title>[libc.so.6] (1,514,365 samples, 0.46%)</title><rect x="86.1404%" y="7317" width="0.4636%" height="15" fill="rgb(214,143,50)" fg:x="281398273" fg:w="1514365"/><text x="86.3904%" y="7327.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::unit (4,993,387 samples, 1.53%)</title><rect x="85.4216%" y="7621" width="1.5286%" height="15" fill="rgb(228,75,8)" fg:x="279050097" fg:w="4993387"/><text x="85.6716%" y="7631.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new (4,993,387 samples, 1.53%)</title><rect x="85.4216%" y="7605" width="1.5286%" height="15" fill="rgb(207,175,4)" fg:x="279050097" fg:w="4993387"/><text x="85.6716%" y="7615.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new_with_abbreviations (1,130,846 samples, 0.35%)</title><rect x="86.6040%" y="7589" width="0.3462%" height="15" fill="rgb(205,108,24)" fg:x="282912638" fg:w="1130846"/><text x="86.8540%" y="7599.50"></text></g><g><title>gimli::read::line::DebugLine&lt;R&gt;::program (1,130,846 samples, 0.35%)</title><rect x="86.6040%" y="7573" width="0.3462%" height="15" fill="rgb(244,120,49)" fg:x="282912638" fg:w="1130846"/><text x="86.8540%" y="7583.50"></text></g><g><title>gimli::read::line::LineProgramHeader&lt;R,Offset&gt;::parse (1,130,846 samples, 0.35%)</title><rect x="86.6040%" y="7557" width="0.3462%" height="15" fill="rgb(223,47,38)" fg:x="282912638" fg:w="1130846"/><text x="86.8540%" y="7567.50"></text></g><g><title>gimli::read::reader::Reader::read_null_terminated_slice (1,130,846 samples, 0.35%)</title><rect x="86.6040%" y="7541" width="0.3462%" height="15" fill="rgb(229,179,11)" fg:x="282912638" fg:w="1130846"/><text x="86.8540%" y="7551.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::find (1,130,846 samples, 0.35%)</title><rect x="86.6040%" y="7525" width="0.3462%" height="15" fill="rgb(231,122,1)" fg:x="282912638" fg:w="1130846"/><text x="86.8540%" y="7535.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::find (1,130,846 samples, 0.35%)</title><rect x="86.6040%" y="7509" width="0.3462%" height="15" fill="rgb(245,119,9)" fg:x="282912638" fg:w="1130846"/><text x="86.8540%" y="7519.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1,130,846 samples, 0.35%)</title><rect x="86.6040%" y="7493" width="0.3462%" height="15" fill="rgb(241,163,25)" fg:x="282912638" fg:w="1130846"/><text x="86.8540%" y="7503.50"></text></g><g><title>backtrace::symbolize::gimli::Context::new (6,182,212 samples, 1.89%)</title><rect x="85.4216%" y="7685" width="1.8925%" height="15" fill="rgb(217,214,3)" fg:x="279050097" fg:w="6182212"/><text x="85.6716%" y="7695.50">b..</text></g><g><title>addr2line::Context&lt;R&gt;::from_dwarf (6,182,212 samples, 1.89%)</title><rect x="85.4216%" y="7669" width="1.8925%" height="15" fill="rgb(240,86,28)" fg:x="279050097" fg:w="6182212"/><text x="85.6716%" y="7679.50">a..</text></g><g><title>addr2line::Context&lt;R&gt;::from_arc_dwarf (6,182,212 samples, 1.89%)</title><rect x="85.4216%" y="7653" width="1.8925%" height="15" fill="rgb(215,47,9)" fg:x="279050097" fg:w="6182212"/><text x="85.6716%" y="7663.50">a..</text></g><g><title>addr2line::unit::ResUnits&lt;R&gt;::parse (6,182,212 samples, 1.89%)</title><rect x="85.4216%" y="7637" width="1.8925%" height="15" fill="rgb(252,25,45)" fg:x="279050097" fg:w="6182212"/><text x="85.6716%" y="7647.50">a..</text></g><g><title>gimli::read::unit::Attribute&lt;R&gt;::value (1,188,825 samples, 0.36%)</title><rect x="86.9501%" y="7621" width="0.3639%" height="15" fill="rgb(251,164,9)" fg:x="284043484" fg:w="1188825"/><text x="87.2001%" y="7631.50"></text></g><g><title>gimli::read::unit::Attribute&lt;R&gt;::u16_value (1,188,825 samples, 0.36%)</title><rect x="86.9501%" y="7605" width="0.3639%" height="15" fill="rgb(233,194,0)" fg:x="284043484" fg:w="1188825"/><text x="87.2001%" y="7615.50"></text></g><g><title>gimli::read::unit::AttributeValue&lt;R,Offset&gt;::u16_value (1,188,825 samples, 0.36%)</title><rect x="86.9501%" y="7589" width="0.3639%" height="15" fill="rgb(249,111,24)" fg:x="284043484" fg:w="1188825"/><text x="87.2001%" y="7599.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (1,963,859 samples, 0.60%)</title><rect x="87.3141%" y="7621" width="0.6012%" height="15" fill="rgb(250,223,3)" fg:x="285232309" fg:w="1963859"/><text x="87.5641%" y="7631.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1,963,859 samples, 0.60%)</title><rect x="87.3141%" y="7605" width="0.6012%" height="15" fill="rgb(236,178,37)" fg:x="285232309" fg:w="1963859"/><text x="87.5641%" y="7615.50"></text></g><g><title>core::slice::sort::shared::smallsort::insert_tail (1,963,859 samples, 0.60%)</title><rect x="87.3141%" y="7589" width="0.6012%" height="15" fill="rgb(241,158,50)" fg:x="285232309" fg:w="1963859"/><text x="87.5641%" y="7599.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (1,963,859 samples, 0.60%)</title><rect x="87.3141%" y="7573" width="0.6012%" height="15" fill="rgb(213,121,41)" fg:x="285232309" fg:w="1963859"/><text x="87.5641%" y="7583.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (1,963,859 samples, 0.60%)</title><rect x="87.3141%" y="7557" width="0.6012%" height="15" fill="rgb(240,92,3)" fg:x="285232309" fg:w="1963859"/><text x="87.5641%" y="7567.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::mapping_for_lib (9,190,949 samples, 2.81%)</title><rect x="85.4216%" y="7765" width="2.8135%" height="15" fill="rgb(205,123,3)" fg:x="279050097" fg:w="9190949"/><text x="85.6716%" y="7775.50">ba..</text></g><g><title>backtrace::symbolize::gimli::create_mapping (9,190,949 samples, 2.81%)</title><rect x="85.4216%" y="7749" width="2.8135%" height="15" fill="rgb(205,97,47)" fg:x="279050097" fg:w="9190949"/><text x="85.6716%" y="7759.50">ba..</text></g><g><title>backtrace::symbolize::gimli::elf::&lt;impl backtrace::symbolize::gimli::Mapping&gt;::new (9,190,949 samples, 2.81%)</title><rect x="85.4216%" y="7733" width="2.8135%" height="15" fill="rgb(247,152,14)" fg:x="279050097" fg:w="9190949"/><text x="85.6716%" y="7743.50">ba..</text></g><g><title>backtrace::symbolize::gimli::Mapping::mk_or_other (9,190,949 samples, 2.81%)</title><rect x="85.4216%" y="7717" width="2.8135%" height="15" fill="rgb(248,195,53)" fg:x="279050097" fg:w="9190949"/><text x="85.6716%" y="7727.50">ba..</text></g><g><title>backtrace::symbolize::gimli::elf::_&lt;impl backtrace::symbolize::gimli::Mapping&gt;::new::_{{closure}} (9,190,949 samples, 2.81%)</title><rect x="85.4216%" y="7701" width="2.8135%" height="15" fill="rgb(226,201,16)" fg:x="279050097" fg:w="9190949"/><text x="85.6716%" y="7711.50">ba..</text></g><g><title>backtrace::symbolize::gimli::elf::Object::parse (3,008,737 samples, 0.92%)</title><rect x="87.3141%" y="7685" width="0.9210%" height="15" fill="rgb(205,98,0)" fg:x="285232309" fg:w="3008737"/><text x="87.5641%" y="7695.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (3,008,737 samples, 0.92%)</title><rect x="87.3141%" y="7669" width="0.9210%" height="15" fill="rgb(214,191,48)" fg:x="285232309" fg:w="3008737"/><text x="87.5641%" y="7679.50"></text></g><g><title>core::slice::sort::unstable::sort (3,008,737 samples, 0.92%)</title><rect x="87.3141%" y="7653" width="0.9210%" height="15" fill="rgb(237,112,39)" fg:x="285232309" fg:w="3008737"/><text x="87.5641%" y="7663.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (3,008,737 samples, 0.92%)</title><rect x="87.3141%" y="7637" width="0.9210%" height="15" fill="rgb(247,203,27)" fg:x="285232309" fg:w="3008737"/><text x="87.5641%" y="7647.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,044,878 samples, 0.32%)</title><rect x="87.9152%" y="7621" width="0.3199%" height="15" fill="rgb(235,124,28)" fg:x="287196168" fg:w="1044878"/><text x="88.1652%" y="7631.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,044,878 samples, 0.32%)</title><rect x="87.9152%" y="7605" width="0.3199%" height="15" fill="rgb(208,207,46)" fg:x="287196168" fg:w="1044878"/><text x="88.1652%" y="7615.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (1,044,878 samples, 0.32%)</title><rect x="87.9152%" y="7589" width="0.3199%" height="15" fill="rgb(234,176,4)" fg:x="287196168" fg:w="1044878"/><text x="88.1652%" y="7599.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (1,044,878 samples, 0.32%)</title><rect x="87.9152%" y="7573" width="0.3199%" height="15" fill="rgb(230,133,28)" fg:x="287196168" fg:w="1044878"/><text x="88.1652%" y="7583.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (1,044,878 samples, 0.32%)</title><rect x="87.9152%" y="7557" width="0.3199%" height="15" fill="rgb(211,137,40)" fg:x="287196168" fg:w="1044878"/><text x="88.1652%" y="7567.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (1,044,878 samples, 0.32%)</title><rect x="87.9152%" y="7541" width="0.3199%" height="15" fill="rgb(254,35,13)" fg:x="287196168" fg:w="1044878"/><text x="88.1652%" y="7551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,044,878 samples, 0.32%)</title><rect x="87.9152%" y="7525" width="0.3199%" height="15" fill="rgb(225,49,51)" fg:x="287196168" fg:w="1044878"/><text x="88.1652%" y="7535.50"></text></g><g><title>addr2line::RangeAttributes&lt;R&gt;::for_each_range (896,945 samples, 0.27%)</title><rect x="88.5273%" y="7141" width="0.2746%" height="15" fill="rgb(251,10,15)" fg:x="289195724" fg:w="896945"/><text x="88.7773%" y="7151.50"></text></g><g><title>gimli::read::rnglists::RngListIter&lt;R&gt;::next (896,945 samples, 0.27%)</title><rect x="88.5273%" y="7125" width="0.2746%" height="15" fill="rgb(228,207,15)" fg:x="289195724" fg:w="896945"/><text x="88.7773%" y="7135.50"></text></g><g><title>gimli::read::rnglists::RngListIter&lt;R&gt;::convert_raw (896,945 samples, 0.27%)</title><rect x="88.5273%" y="7109" width="0.2746%" height="15" fill="rgb(241,99,19)" fg:x="289195724" fg:w="896945"/><text x="88.7773%" y="7119.50"></text></g><g><title>gimli::read::rnglists::Range::add_base_address (896,945 samples, 0.27%)</title><rect x="88.5273%" y="7093" width="0.2746%" height="15" fill="rgb(207,104,49)" fg:x="289195724" fg:w="896945"/><text x="88.7773%" y="7103.50"></text></g><g><title>&lt;u64 as gimli::read::reader::ReaderAddress&gt;::wrapping_add_sized (896,945 samples, 0.27%)</title><rect x="88.5273%" y="7077" width="0.2746%" height="15" fill="rgb(234,99,18)" fg:x="289195724" fg:w="896945"/><text x="88.7773%" y="7087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (896,945 samples, 0.27%)</title><rect x="88.5273%" y="7061" width="0.2746%" height="15" fill="rgb(213,191,49)" fg:x="289195724" fg:w="896945"/><text x="88.7773%" y="7071.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,932,153 samples, 0.90%)</title><rect x="88.2351%" y="7493" width="0.8976%" height="15" fill="rgb(210,226,19)" fg:x="288241046" fg:w="2932153"/><text x="88.4851%" y="7503.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,932,153 samples, 0.90%)</title><rect x="88.2351%" y="7477" width="0.8976%" height="15" fill="rgb(229,97,18)" fg:x="288241046" fg:w="2932153"/><text x="88.4851%" y="7487.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7461" width="0.6053%" height="15" fill="rgb(211,167,15)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7471.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7445" width="0.6053%" height="15" fill="rgb(210,169,34)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7455.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7429" width="0.6053%" height="15" fill="rgb(241,121,31)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7439.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7413" width="0.6053%" height="15" fill="rgb(232,40,11)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7423.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7397" width="0.6053%" height="15" fill="rgb(205,86,26)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7407.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7381" width="0.6053%" height="15" fill="rgb(231,126,28)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7391.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7365" width="0.6053%" height="15" fill="rgb(219,221,18)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7375.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7349" width="0.6053%" height="15" fill="rgb(211,40,0)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7359.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7333" width="0.6053%" height="15" fill="rgb(239,85,43)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7343.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7317" width="0.6053%" height="15" fill="rgb(231,55,21)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7327.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7301" width="0.6053%" height="15" fill="rgb(225,184,43)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7311.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7285" width="0.6053%" height="15" fill="rgb(251,158,41)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7295.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7269" width="0.6053%" height="15" fill="rgb(234,159,37)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7279.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7253" width="0.6053%" height="15" fill="rgb(216,204,22)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7263.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7237" width="0.6053%" height="15" fill="rgb(214,17,3)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7247.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7221" width="0.6053%" height="15" fill="rgb(212,111,17)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7231.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7205" width="0.6053%" height="15" fill="rgb(221,157,24)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7215.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7189" width="0.6053%" height="15" fill="rgb(252,16,13)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7199.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7173" width="0.6053%" height="15" fill="rgb(221,62,2)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7183.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,977,475 samples, 0.61%)</title><rect x="88.5273%" y="7157" width="0.6053%" height="15" fill="rgb(247,87,22)" fg:x="289195724" fg:w="1977475"/><text x="88.7773%" y="7167.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7141" width="0.3308%" height="15" fill="rgb(215,73,9)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7151.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7125" width="0.3308%" height="15" fill="rgb(207,175,33)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7135.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7109" width="0.3308%" height="15" fill="rgb(243,129,54)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7119.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7093" width="0.3308%" height="15" fill="rgb(227,119,45)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7103.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7077" width="0.3308%" height="15" fill="rgb(205,109,36)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7087.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7061" width="0.3308%" height="15" fill="rgb(205,6,39)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7071.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7045" width="0.3308%" height="15" fill="rgb(221,32,16)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7055.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7029" width="0.3308%" height="15" fill="rgb(228,144,50)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7039.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="7013" width="0.3308%" height="15" fill="rgb(229,201,53)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7023.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6997" width="0.3308%" height="15" fill="rgb(249,153,27)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="7007.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6981" width="0.3308%" height="15" fill="rgb(227,106,25)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="6991.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6965" width="0.3308%" height="15" fill="rgb(230,65,29)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="6975.50"></text></g><g><title>addr2line::function::name_attr (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6949" width="0.3308%" height="15" fill="rgb(221,57,46)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="6959.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_unit (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6933" width="0.3308%" height="15" fill="rgb(229,161,17)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="6943.50"></text></g><g><title>addr2line::unit::ResUnits&lt;R&gt;::find_offset (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6917" width="0.3308%" height="15" fill="rgb(222,213,11)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="6927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6901" width="0.3308%" height="15" fill="rgb(235,35,13)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="6911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6885" width="0.3308%" height="15" fill="rgb(233,158,34)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="6895.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1,080,530 samples, 0.33%)</title><rect x="88.8019%" y="6869" width="0.3308%" height="15" fill="rgb(215,151,48)" fg:x="290092669" fg:w="1080530"/><text x="89.0519%" y="6879.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7685" width="1.2078%" height="15" fill="rgb(229,84,14)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7695.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7669" width="1.2078%" height="15" fill="rgb(229,68,14)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7679.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow::_{{closure}} (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7653" width="1.2078%" height="15" fill="rgb(243,106,26)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7663.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7637" width="1.2078%" height="15" fill="rgb(206,45,38)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7647.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7621" width="1.2078%" height="15" fill="rgb(226,6,15)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7631.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7605" width="1.2078%" height="15" fill="rgb(232,22,54)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7615.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7589" width="1.2078%" height="15" fill="rgb(229,222,32)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7599.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7573" width="1.2078%" height="15" fill="rgb(228,62,29)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7583.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7557" width="1.2078%" height="15" fill="rgb(251,103,34)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7567.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7541" width="1.2078%" height="15" fill="rgb(233,12,30)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7551.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7525" width="1.2078%" height="15" fill="rgb(238,52,0)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7535.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,945,431 samples, 1.21%)</title><rect x="88.2351%" y="7509" width="1.2078%" height="15" fill="rgb(223,98,5)" fg:x="288241046" fg:w="3945431"/><text x="88.4851%" y="7519.50"></text></g><g><title>addr2line::function::name_attr (1,013,278 samples, 0.31%)</title><rect x="89.1327%" y="7493" width="0.3102%" height="15" fill="rgb(228,75,37)" fg:x="291173199" fg:w="1013278"/><text x="89.3827%" y="7503.50"></text></g><g><title>addr2line::function::name_entry (1,013,278 samples, 0.31%)</title><rect x="89.1327%" y="7477" width="0.3102%" height="15" fill="rgb(205,115,49)" fg:x="291173199" fg:w="1013278"/><text x="89.3827%" y="7487.50"></text></g><g><title>gimli::read::dwarf::UnitRef&lt;R&gt;::attr_string (1,013,278 samples, 0.31%)</title><rect x="89.1327%" y="7461" width="0.3102%" height="15" fill="rgb(250,154,43)" fg:x="291173199" fg:w="1013278"/><text x="89.3827%" y="7471.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::attr_string (1,013,278 samples, 0.31%)</title><rect x="89.1327%" y="7445" width="0.3102%" height="15" fill="rgb(226,43,29)" fg:x="291173199" fg:w="1013278"/><text x="89.3827%" y="7455.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::attributes (887,347 samples, 0.27%)</title><rect x="89.4428%" y="7621" width="0.2716%" height="15" fill="rgb(249,228,39)" fg:x="292186477" fg:w="887347"/><text x="89.6928%" y="7631.50"></text></g><g><title>&lt;gimli::read::abbrev::Attributes as core::ops::deref::Deref&gt;::deref (887,347 samples, 0.27%)</title><rect x="89.4428%" y="7605" width="0.2716%" height="15" fill="rgb(216,79,43)" fg:x="292186477" fg:w="887347"/><text x="89.6928%" y="7615.50"></text></g><g><title>&lt;usize as gimli::read::reader::ReaderOffset&gt;::from_u8 (1,783,987 samples, 0.55%)</title><rect x="89.9929%" y="7589" width="0.5461%" height="15" fill="rgb(228,95,12)" fg:x="293983339" fg:w="1783987"/><text x="90.2429%" y="7599.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow (4,452,022 samples, 1.36%)</title><rect x="89.4428%" y="7685" width="1.3628%" height="15" fill="rgb(249,221,15)" fg:x="292186477" fg:w="4452022"/><text x="89.6928%" y="7695.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4,452,022 samples, 1.36%)</title><rect x="89.4428%" y="7669" width="1.3628%" height="15" fill="rgb(233,34,13)" fg:x="292186477" fg:w="4452022"/><text x="89.6928%" y="7679.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow::_{{closure}} (4,452,022 samples, 1.36%)</title><rect x="89.4428%" y="7653" width="1.3628%" height="15" fill="rgb(214,103,39)" fg:x="292186477" fg:w="4452022"/><text x="89.6928%" y="7663.50"></text></g><g><title>addr2line::function::Functions&lt;R&gt;::parse (4,452,022 samples, 1.36%)</title><rect x="89.4428%" y="7637" width="1.3628%" height="15" fill="rgb(251,126,39)" fg:x="292186477" fg:w="4452022"/><text x="89.6928%" y="7647.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::skip_attributes (3,564,675 samples, 1.09%)</title><rect x="89.7145%" y="7621" width="1.0912%" height="15" fill="rgb(214,216,36)" fg:x="293073824" fg:w="3564675"/><text x="89.9645%" y="7631.50"></text></g><g><title>gimli::read::unit::skip_attributes (3,564,675 samples, 1.09%)</title><rect x="89.7145%" y="7605" width="1.0912%" height="15" fill="rgb(220,221,8)" fg:x="293073824" fg:w="3564675"/><text x="89.9645%" y="7615.50"></text></g><g><title>gimli::read::abbrev::get_attribute_size (871,173 samples, 0.27%)</title><rect x="90.5390%" y="7589" width="0.2667%" height="15" fill="rgb(240,216,3)" fg:x="295767326" fg:w="871173"/><text x="90.7890%" y="7599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7589" width="0.2560%" height="15" fill="rgb(232,218,17)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7573" width="0.2560%" height="15" fill="rgb(229,163,45)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7557" width="0.2560%" height="15" fill="rgb(231,110,42)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7541" width="0.2560%" height="15" fill="rgb(208,170,48)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7551.50"></text></g><g><title>alloc::raw_vec::finish_grow (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7525" width="0.2560%" height="15" fill="rgb(239,116,25)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7509" width="0.2560%" height="15" fill="rgb(219,200,50)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7519.50"></text></g><g><title>alloc::alloc::Global::grow_impl (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7493" width="0.2560%" height="15" fill="rgb(245,200,0)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7503.50"></text></g><g><title>alloc::alloc::realloc (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7477" width="0.2560%" height="15" fill="rgb(245,119,33)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7487.50"></text></g><g><title>__rustc::__rdl_realloc (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7461" width="0.2560%" height="15" fill="rgb(231,125,12)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7471.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7445" width="0.2560%" height="15" fill="rgb(216,96,41)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7455.50"></text></g><g><title>realloc (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7429" width="0.2560%" height="15" fill="rgb(248,43,45)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7439.50"></text></g><g><title>[libc.so.6] (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7413" width="0.2560%" height="15" fill="rgb(217,222,7)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7423.50"></text></g><g><title>[libc.so.6] (836,141 samples, 0.26%)</title><rect x="90.8057%" y="7397" width="0.2560%" height="15" fill="rgb(233,28,6)" fg:x="296638499" fg:w="836141"/><text x="91.0557%" y="7407.50"></text></g><g><title>pprof::profiler::ProfilerGuard::new (35,306,269 samples, 10.81%)</title><rect x="80.5544%" y="7989" width="10.8078%" height="15" fill="rgb(231,218,15)" fg:x="263150250" fg:w="35306269"/><text x="80.8044%" y="7999.50">pprof::profiler:..</text></g><g><title>pprof::profiler::ProfilerGuardBuilder::build (35,306,269 samples, 10.81%)</title><rect x="80.5544%" y="7973" width="10.8078%" height="15" fill="rgb(226,171,48)" fg:x="263150250" fg:w="35306269"/><text x="80.8044%" y="7983.50">pprof::profiler:..</text></g><g><title>pprof::profiler::trigger_lazy (35,306,269 samples, 10.81%)</title><rect x="80.5544%" y="7957" width="10.8078%" height="15" fill="rgb(235,201,9)" fg:x="263150250" fg:w="35306269"/><text x="80.8044%" y="7967.50">pprof::profiler:..</text></g><g><title>backtrace::capture::Backtrace::new (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7941" width="5.9406%" height="15" fill="rgb(217,80,15)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7951.50">backtrac..</text></g><g><title>backtrace::capture::Backtrace::resolve (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7925" width="5.9406%" height="15" fill="rgb(219,152,8)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7935.50">backtrac..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7909" width="5.9406%" height="15" fill="rgb(243,107,38)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7919.50">&lt;core::s..</text></g><g><title>core::ops::function::FnMut::call_mut (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7893" width="5.9406%" height="15" fill="rgb(231,17,5)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7903.50">core::op..</text></g><g><title>backtrace::capture::BacktraceFrame::resolve (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7877" width="5.9406%" height="15" fill="rgb(209,25,54)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7887.50">backtrac..</text></g><g><title>backtrace::capture::Frame::resolve_symbols (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7861" width="5.9406%" height="15" fill="rgb(219,0,2)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7871.50">backtrac..</text></g><g><title>backtrace::symbolize::resolve_frame (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7845" width="5.9406%" height="15" fill="rgb(246,9,5)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7855.50">backtrac..</text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7829" width="5.9406%" height="15" fill="rgb(226,159,4)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7839.50">backtrac..</text></g><g><title>backtrace::symbolize::gimli::resolve (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7813" width="5.9406%" height="15" fill="rgb(219,175,34)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7823.50">backtrac..</text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7797" width="5.9406%" height="15" fill="rgb(236,10,46)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7807.50">backtrac..</text></g><g><title>backtrace::symbolize::gimli::resolve::_{{closure}} (19,406,422 samples, 5.94%)</title><rect x="85.4216%" y="7781" width="5.9406%" height="15" fill="rgb(240,211,16)" fg:x="279050097" fg:w="19406422"/><text x="85.6716%" y="7791.50">backtrac..</text></g><g><title>backtrace::symbolize::gimli::Context::find_frames (10,215,473 samples, 3.13%)</title><rect x="88.2351%" y="7765" width="3.1271%" height="15" fill="rgb(205,3,43)" fg:x="288241046" fg:w="10215473"/><text x="88.4851%" y="7775.50">bac..</text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (10,215,473 samples, 3.13%)</title><rect x="88.2351%" y="7749" width="3.1271%" height="15" fill="rgb(245,7,22)" fg:x="288241046" fg:w="10215473"/><text x="88.4851%" y="7759.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location (10,215,473 samples, 3.13%)</title><rect x="88.2351%" y="7733" width="3.1271%" height="15" fill="rgb(239,132,32)" fg:x="288241046" fg:w="10215473"/><text x="88.4851%" y="7743.50">add..</text></g><g><title>addr2line::lookup::LookupResult&lt;L&gt;::map (10,215,473 samples, 3.13%)</title><rect x="88.2351%" y="7717" width="3.1271%" height="15" fill="rgb(228,202,34)" fg:x="288241046" fg:w="10215473"/><text x="88.4851%" y="7727.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location::_{{closure}} (10,215,473 samples, 3.13%)</title><rect x="88.2351%" y="7701" width="3.1271%" height="15" fill="rgb(254,200,22)" fg:x="288241046" fg:w="10215473"/><text x="88.4851%" y="7711.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_location (1,818,020 samples, 0.56%)</title><rect x="90.8057%" y="7685" width="0.5565%" height="15" fill="rgb(219,10,39)" fg:x="296638499" fg:w="1818020"/><text x="91.0557%" y="7695.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::parse_lines (1,818,020 samples, 0.56%)</title><rect x="90.8057%" y="7669" width="0.5565%" height="15" fill="rgb(226,210,39)" fg:x="296638499" fg:w="1818020"/><text x="91.0557%" y="7679.50"></text></g><g><title>addr2line::line::LazyLines::borrow (1,818,020 samples, 0.56%)</title><rect x="90.8057%" y="7653" width="0.5565%" height="15" fill="rgb(208,219,16)" fg:x="296638499" fg:w="1818020"/><text x="91.0557%" y="7663.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (1,818,020 samples, 0.56%)</title><rect x="90.8057%" y="7637" width="0.5565%" height="15" fill="rgb(216,158,51)" fg:x="296638499" fg:w="1818020"/><text x="91.0557%" y="7647.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (1,818,020 samples, 0.56%)</title><rect x="90.8057%" y="7621" width="0.5565%" height="15" fill="rgb(233,14,44)" fg:x="296638499" fg:w="1818020"/><text x="91.0557%" y="7631.50"></text></g><g><title>addr2line::line::Lines::parse (1,818,020 samples, 0.56%)</title><rect x="90.8057%" y="7605" width="0.5565%" height="15" fill="rgb(237,97,39)" fg:x="296638499" fg:w="1818020"/><text x="91.0557%" y="7615.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7589" width="0.3006%" height="15" fill="rgb(218,198,43)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7599.50"></text></g><g><title>gimli::read::line::LineInstructions&lt;R&gt;::next_instruction (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7573" width="0.3006%" height="15" fill="rgb(231,104,20)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7583.50"></text></g><g><title>gimli::read::line::LineInstruction&lt;R,Offset&gt;::parse (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7557" width="0.3006%" height="15" fill="rgb(254,36,13)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7567.50"></text></g><g><title>gimli::read::reader::Reader::read_sleb128 (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7541" width="0.3006%" height="15" fill="rgb(248,14,50)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7551.50"></text></g><g><title>gimli::leb128::read::signed (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7525" width="0.3006%" height="15" fill="rgb(217,107,29)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7535.50"></text></g><g><title>gimli::read::reader::Reader::read_u8 (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7509" width="0.3006%" height="15" fill="rgb(251,169,33)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7519.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7493" width="0.3006%" height="15" fill="rgb(217,108,32)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7503.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7477" width="0.3006%" height="15" fill="rgb(219,66,42)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7487.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (981,879 samples, 0.30%)</title><rect x="91.0616%" y="7461" width="0.3006%" height="15" fill="rgb(206,180,7)" fg:x="297474640" fg:w="981879"/><text x="91.3116%" y="7471.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7861" width="0.6252%" height="15" fill="rgb(208,226,31)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7871.50"></text></g><g><title>&lt;pprof::frames::Frames as core::convert::From&lt;pprof::frames::UnresolvedFrames&gt;&gt;::from::_{{closure}} (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7845" width="0.6252%" height="15" fill="rgb(218,26,49)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7855.50"></text></g><g><title>pprof::frames::Symbol::name (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7829" width="0.6252%" height="15" fill="rgb(233,197,48)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7839.50"></text></g><g><title>symbolic_demangle::demangle (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7813" width="0.6252%" height="15" fill="rgb(252,181,51)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7823.50"></text></g><g><title>&lt;symbolic_common::types::Name as symbolic_demangle::Demangle&gt;::demangle (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7797" width="0.6252%" height="15" fill="rgb(253,90,19)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7807.50"></text></g><g><title>&lt;symbolic_common::types::Name as symbolic_demangle::Demangle&gt;::detect_language (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7781" width="0.6252%" height="15" fill="rgb(215,171,30)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7791.50"></text></g><g><title>rustc_demangle::try_demangle (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7765" width="0.6252%" height="15" fill="rgb(214,222,9)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7775.50"></text></g><g><title>rustc_demangle::demangle (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7749" width="0.6252%" height="15" fill="rgb(223,3,22)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7759.50"></text></g><g><title>rustc_demangle::legacy::demangle (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7733" width="0.6252%" height="15" fill="rgb(225,196,46)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7743.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7717" width="0.6252%" height="15" fill="rgb(209,110,37)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7727.50"></text></g><g><title>core::str::validations::next_code_point (2,042,523 samples, 0.63%)</title><rect x="91.3622%" y="7701" width="0.6252%" height="15" fill="rgb(249,89,12)" fg:x="298456519" fg:w="2042523"/><text x="91.6122%" y="7711.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,287,454 samples, 0.39%)</title><rect x="91.9874%" y="7269" width="0.3941%" height="15" fill="rgb(226,27,33)" fg:x="300499042" fg:w="1287454"/><text x="92.2374%" y="7279.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,287,454 samples, 0.39%)</title><rect x="91.9874%" y="7253" width="0.3941%" height="15" fill="rgb(213,82,22)" fg:x="300499042" fg:w="1287454"/><text x="92.2374%" y="7263.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,287,454 samples, 0.39%)</title><rect x="91.9874%" y="7237" width="0.3941%" height="15" fill="rgb(248,140,0)" fg:x="300499042" fg:w="1287454"/><text x="92.2374%" y="7247.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,287,454 samples, 0.39%)</title><rect x="91.9874%" y="7221" width="0.3941%" height="15" fill="rgb(228,106,3)" fg:x="300499042" fg:w="1287454"/><text x="92.2374%" y="7231.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,287,454 samples, 0.39%)</title><rect x="91.9874%" y="7205" width="0.3941%" height="15" fill="rgb(209,23,37)" fg:x="300499042" fg:w="1287454"/><text x="92.2374%" y="7215.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,287,454 samples, 0.39%)</title><rect x="91.9874%" y="7189" width="0.3941%" height="15" fill="rgb(241,93,50)" fg:x="300499042" fg:w="1287454"/><text x="92.2374%" y="7199.50"></text></g><g><title>gimli::read::unit::Attribute&lt;R&gt;::udata_value (1,287,454 samples, 0.39%)</title><rect x="91.9874%" y="7173" width="0.3941%" height="15" fill="rgb(253,46,43)" fg:x="300499042" fg:w="1287454"/><text x="92.2374%" y="7183.50"></text></g><g><title>gimli::read::unit::AttributeValue&lt;R,Offset&gt;::udata_value (1,287,454 samples, 0.39%)</title><rect x="91.9874%" y="7157" width="0.3941%" height="15" fill="rgb(226,206,43)" fg:x="300499042" fg:w="1287454"/><text x="92.2374%" y="7167.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7685" width="0.8205%" height="15" fill="rgb(217,54,7)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7695.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7669" width="0.8205%" height="15" fill="rgb(223,5,52)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7679.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow::_{{closure}} (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7653" width="0.8205%" height="15" fill="rgb(206,52,46)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7663.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7637" width="0.8205%" height="15" fill="rgb(253,136,11)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7647.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7621" width="0.8205%" height="15" fill="rgb(208,106,33)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7631.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7605" width="0.8205%" height="15" fill="rgb(206,54,4)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7615.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7589" width="0.8205%" height="15" fill="rgb(213,3,15)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7599.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7573" width="0.8205%" height="15" fill="rgb(252,211,39)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7583.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7557" width="0.8205%" height="15" fill="rgb(223,6,36)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7567.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7541" width="0.8205%" height="15" fill="rgb(252,169,45)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7551.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7525" width="0.8205%" height="15" fill="rgb(212,48,26)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7535.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7509" width="0.8205%" height="15" fill="rgb(251,102,48)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7519.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7493" width="0.8205%" height="15" fill="rgb(243,208,16)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7503.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7477" width="0.8205%" height="15" fill="rgb(219,96,24)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7487.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7461" width="0.8205%" height="15" fill="rgb(219,33,29)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7471.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7445" width="0.8205%" height="15" fill="rgb(223,176,5)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7455.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7429" width="0.8205%" height="15" fill="rgb(228,140,14)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7439.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7413" width="0.8205%" height="15" fill="rgb(217,179,31)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7423.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7397" width="0.8205%" height="15" fill="rgb(230,9,30)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7407.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7381" width="0.8205%" height="15" fill="rgb(230,136,20)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7391.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7365" width="0.8205%" height="15" fill="rgb(215,210,22)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7375.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7349" width="0.8205%" height="15" fill="rgb(218,43,5)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7359.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7333" width="0.8205%" height="15" fill="rgb(216,11,5)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7343.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7317" width="0.8205%" height="15" fill="rgb(209,82,29)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7327.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7301" width="0.8205%" height="15" fill="rgb(244,115,12)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7311.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,680,230 samples, 0.82%)</title><rect x="91.9874%" y="7285" width="0.8205%" height="15" fill="rgb(222,82,18)" fg:x="300499042" fg:w="2680230"/><text x="92.2374%" y="7295.50"></text></g><g><title>addr2line::function::name_attr (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7269" width="0.4264%" height="15" fill="rgb(249,227,8)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7279.50"></text></g><g><title>addr2line::function::name_entry (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7253" width="0.4264%" height="15" fill="rgb(253,141,45)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7263.50"></text></g><g><title>addr2line::function::name_attr (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7237" width="0.4264%" height="15" fill="rgb(234,184,4)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7247.50"></text></g><g><title>addr2line::function::name_entry (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7221" width="0.4264%" height="15" fill="rgb(218,194,23)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7231.50"></text></g><g><title>gimli::read::dwarf::UnitRef&lt;R&gt;::attr_string (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7205" width="0.4264%" height="15" fill="rgb(235,66,41)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7215.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::attr_string (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7189" width="0.4264%" height="15" fill="rgb(245,217,1)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7199.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::string (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7173" width="0.4264%" height="15" fill="rgb(229,91,1)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7183.50"></text></g><g><title>gimli::read::str::DebugStr&lt;R&gt;::get_str (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7157" width="0.4264%" height="15" fill="rgb(207,101,30)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7167.50"></text></g><g><title>gimli::read::reader::Reader::read_null_terminated_slice (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7141" width="0.4264%" height="15" fill="rgb(223,82,49)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7151.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::find (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7125" width="0.4264%" height="15" fill="rgb(218,167,17)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7135.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::find (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7109" width="0.4264%" height="15" fill="rgb(208,103,14)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1,392,776 samples, 0.43%)</title><rect x="92.3816%" y="7093" width="0.4264%" height="15" fill="rgb(238,20,8)" fg:x="301786496" fg:w="1392776"/><text x="92.6316%" y="7103.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_abbreviation (2,655,295 samples, 0.81%)</title><rect x="92.8079%" y="7621" width="0.8128%" height="15" fill="rgb(218,80,54)" fg:x="303179272" fg:w="2655295"/><text x="93.0579%" y="7631.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (1,243,160 samples, 0.38%)</title><rect x="93.2402%" y="7605" width="0.3806%" height="15" fill="rgb(240,144,17)" fg:x="304591407" fg:w="1243160"/><text x="93.4902%" y="7615.50"></text></g><g><title>gimli::leb128::read::unsigned (1,243,160 samples, 0.38%)</title><rect x="93.2402%" y="7589" width="0.3806%" height="15" fill="rgb(245,27,50)" fg:x="304591407" fg:w="1243160"/><text x="93.4902%" y="7599.50"></text></g><g><title>gimli::read::reader::Reader::read_u8 (1,243,160 samples, 0.38%)</title><rect x="93.2402%" y="7573" width="0.3806%" height="15" fill="rgb(251,51,7)" fg:x="304591407" fg:w="1243160"/><text x="93.4902%" y="7583.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (1,243,160 samples, 0.38%)</title><rect x="93.2402%" y="7557" width="0.3806%" height="15" fill="rgb(245,217,29)" fg:x="304591407" fg:w="1243160"/><text x="93.4902%" y="7567.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (1,243,160 samples, 0.38%)</title><rect x="93.2402%" y="7541" width="0.3806%" height="15" fill="rgb(221,176,29)" fg:x="304591407" fg:w="1243160"/><text x="93.4902%" y="7551.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (1,243,160 samples, 0.38%)</title><rect x="93.2402%" y="7525" width="0.3806%" height="15" fill="rgb(212,180,24)" fg:x="304591407" fg:w="1243160"/><text x="93.4902%" y="7535.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_attribute (1,358,867 samples, 0.42%)</title><rect x="93.6207%" y="7621" width="0.4160%" height="15" fill="rgb(254,24,2)" fg:x="305834567" fg:w="1358867"/><text x="93.8707%" y="7631.50"></text></g><g><title>gimli::read::unit::parse_attribute (1,358,867 samples, 0.42%)</title><rect x="93.6207%" y="7605" width="0.4160%" height="15" fill="rgb(230,100,2)" fg:x="305834567" fg:w="1358867"/><text x="93.8707%" y="7615.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow (6,590,260 samples, 2.02%)</title><rect x="92.8079%" y="7685" width="2.0174%" height="15" fill="rgb(219,142,25)" fg:x="303179272" fg:w="6590260"/><text x="93.0579%" y="7695.50">a..</text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (6,590,260 samples, 2.02%)</title><rect x="92.8079%" y="7669" width="2.0174%" height="15" fill="rgb(240,73,43)" fg:x="303179272" fg:w="6590260"/><text x="93.0579%" y="7679.50">a..</text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow::_{{closure}} (6,590,260 samples, 2.02%)</title><rect x="92.8079%" y="7653" width="2.0174%" height="15" fill="rgb(214,114,15)" fg:x="303179272" fg:w="6590260"/><text x="93.0579%" y="7663.50">a..</text></g><g><title>addr2line::function::Functions&lt;R&gt;::parse (6,590,260 samples, 2.02%)</title><rect x="92.8079%" y="7637" width="2.0174%" height="15" fill="rgb(207,130,4)" fg:x="303179272" fg:w="6590260"/><text x="93.0579%" y="7647.50">a..</text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::skip_attributes (2,576,098 samples, 0.79%)</title><rect x="94.0367%" y="7621" width="0.7886%" height="15" fill="rgb(221,25,40)" fg:x="307193434" fg:w="2576098"/><text x="94.2867%" y="7631.50"></text></g><g><title>gimli::read::unit::skip_attributes (2,576,098 samples, 0.79%)</title><rect x="94.0367%" y="7605" width="0.7886%" height="15" fill="rgb(241,184,7)" fg:x="307193434" fg:w="2576098"/><text x="94.2867%" y="7615.50"></text></g><g><title>&lt;usize as gimli::read::reader::ReaderOffset&gt;::from_u8 (1,327,384 samples, 0.41%)</title><rect x="94.4190%" y="7589" width="0.4063%" height="15" fill="rgb(235,159,4)" fg:x="308442148" fg:w="1327384"/><text x="94.6690%" y="7599.50"></text></g><g><title>backtrace::symbolize::gimli::Context::find_frames (10,626,000 samples, 3.25%)</title><rect x="91.9874%" y="7765" width="3.2528%" height="15" fill="rgb(214,87,48)" fg:x="300499042" fg:w="10626000"/><text x="92.2374%" y="7775.50">bac..</text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (10,626,000 samples, 3.25%)</title><rect x="91.9874%" y="7749" width="3.2528%" height="15" fill="rgb(246,198,24)" fg:x="300499042" fg:w="10626000"/><text x="92.2374%" y="7759.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location (10,626,000 samples, 3.25%)</title><rect x="91.9874%" y="7733" width="3.2528%" height="15" fill="rgb(209,66,40)" fg:x="300499042" fg:w="10626000"/><text x="92.2374%" y="7743.50">add..</text></g><g><title>addr2line::lookup::LookupResult&lt;L&gt;::map (10,626,000 samples, 3.25%)</title><rect x="91.9874%" y="7717" width="3.2528%" height="15" fill="rgb(233,147,39)" fg:x="300499042" fg:w="10626000"/><text x="92.2374%" y="7727.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location::_{{closure}} (10,626,000 samples, 3.25%)</title><rect x="91.9874%" y="7701" width="3.2528%" height="15" fill="rgb(231,145,52)" fg:x="300499042" fg:w="10626000"/><text x="92.2374%" y="7711.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_location (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7685" width="0.4149%" height="15" fill="rgb(206,20,26)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7695.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::parse_lines (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7669" width="0.4149%" height="15" fill="rgb(238,220,4)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7679.50"></text></g><g><title>addr2line::line::LazyLines::borrow (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7653" width="0.4149%" height="15" fill="rgb(252,195,42)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7663.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7637" width="0.4149%" height="15" fill="rgb(209,10,6)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7647.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7621" width="0.4149%" height="15" fill="rgb(229,3,52)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7631.50"></text></g><g><title>addr2line::line::Lines::parse (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7605" width="0.4149%" height="15" fill="rgb(253,49,37)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7615.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7589" width="0.4149%" height="15" fill="rgb(240,103,49)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7599.50"></text></g><g><title>gimli::read::line::LineInstructions&lt;R&gt;::next_instruction (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7573" width="0.4149%" height="15" fill="rgb(250,182,30)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7583.50"></text></g><g><title>gimli::read::line::LineInstruction&lt;R,Offset&gt;::parse (1,355,510 samples, 0.41%)</title><rect x="94.8253%" y="7557" width="0.4149%" height="15" fill="rgb(248,8,30)" fg:x="309769532" fg:w="1355510"/><text x="95.0753%" y="7567.50"></text></g><g><title>pprof::report::ReportBuilder::build (14,105,831 samples, 4.32%)</title><rect x="91.3622%" y="7989" width="4.3180%" height="15" fill="rgb(237,120,30)" fg:x="298456519" fg:w="14105831"/><text x="91.6122%" y="7999.50">pprof..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14,105,831 samples, 4.32%)</title><rect x="91.3622%" y="7973" width="4.3180%" height="15" fill="rgb(221,146,34)" fg:x="298456519" fg:w="14105831"/><text x="91.6122%" y="7983.50">core:..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14,105,831 samples, 4.32%)</title><rect x="91.3622%" y="7957" width="4.3180%" height="15" fill="rgb(242,55,13)" fg:x="298456519" fg:w="14105831"/><text x="91.6122%" y="7967.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (14,105,831 samples, 4.32%)</title><rect x="91.3622%" y="7941" width="4.3180%" height="15" fill="rgb(242,112,31)" fg:x="298456519" fg:w="14105831"/><text x="91.6122%" y="7951.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14,105,831 samples, 4.32%)</title><rect x="91.3622%" y="7925" width="4.3180%" height="15" fill="rgb(249,192,27)" fg:x="298456519" fg:w="14105831"/><text x="91.6122%" y="7935.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (14,105,831 samples, 4.32%)</title><rect x="91.3622%" y="7909" width="4.3180%" height="15" fill="rgb(208,204,44)" fg:x="298456519" fg:w="14105831"/><text x="91.6122%" y="7919.50">core:..</text></g><g><title>pprof::report::ReportBuilder::build::_{{closure}} (14,105,831 samples, 4.32%)</title><rect x="91.3622%" y="7893" width="4.3180%" height="15" fill="rgb(208,93,54)" fg:x="298456519" fg:w="14105831"/><text x="91.6122%" y="7903.50">pprof..</text></g><g><title>&lt;pprof::frames::Frames as core::convert::From&lt;pprof::frames::UnresolvedFrames&gt;&gt;::from (14,105,831 samples, 4.32%)</title><rect x="91.3622%" y="7877" width="4.3180%" height="15" fill="rgb(242,1,31)" fg:x="298456519" fg:w="14105831"/><text x="91.6122%" y="7887.50">&lt;ppro..</text></g><g><title>pprof::backtrace::backtrace_rs::&lt;impl pprof::backtrace::Frame for backtrace::backtrace::Frame&gt;::resolve_symbol (12,063,308 samples, 3.69%)</title><rect x="91.9874%" y="7861" width="3.6928%" height="15" fill="rgb(241,83,25)" fg:x="300499042" fg:w="12063308"/><text x="92.2374%" y="7871.50">ppro..</text></g><g><title>backtrace::symbolize::resolve_frame (12,063,308 samples, 3.69%)</title><rect x="91.9874%" y="7845" width="3.6928%" height="15" fill="rgb(205,169,50)" fg:x="300499042" fg:w="12063308"/><text x="92.2374%" y="7855.50">back..</text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (12,063,308 samples, 3.69%)</title><rect x="91.9874%" y="7829" width="3.6928%" height="15" fill="rgb(239,186,37)" fg:x="300499042" fg:w="12063308"/><text x="92.2374%" y="7839.50">back..</text></g><g><title>backtrace::symbolize::gimli::resolve (12,063,308 samples, 3.69%)</title><rect x="91.9874%" y="7813" width="3.6928%" height="15" fill="rgb(205,221,10)" fg:x="300499042" fg:w="12063308"/><text x="92.2374%" y="7823.50">back..</text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (12,063,308 samples, 3.69%)</title><rect x="91.9874%" y="7797" width="3.6928%" height="15" fill="rgb(218,196,15)" fg:x="300499042" fg:w="12063308"/><text x="92.2374%" y="7807.50">back..</text></g><g><title>backtrace::symbolize::gimli::resolve::_{{closure}} (12,063,308 samples, 3.69%)</title><rect x="91.9874%" y="7781" width="3.6928%" height="15" fill="rgb(218,196,35)" fg:x="300499042" fg:w="12063308"/><text x="92.2374%" y="7791.50">back..</text></g><g><title>backtrace::symbolize::gimli::resolve::_{{closure}} (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7765" width="0.4400%" height="15" fill="rgb(233,63,24)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7775.50"></text></g><g><title>&lt;pprof::frames::Frames as core::convert::From&lt;pprof::frames::UnresolvedFrames&gt;&gt;::from::_{{closure}} (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7749" width="0.4400%" height="15" fill="rgb(225,8,4)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7759.50"></text></g><g><title>&lt;pprof::frames::Symbol as core::convert::From&lt;&amp;T&gt;&gt;::from (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7733" width="0.4400%" height="15" fill="rgb(234,105,35)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7743.50"></text></g><g><title>&lt;backtrace::symbolize::Symbol as pprof::backtrace::Symbol&gt;::name (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7717" width="0.4400%" height="15" fill="rgb(236,21,32)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7727.50"></text></g><g><title>backtrace::symbolize::Symbol::name (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7701" width="0.4400%" height="15" fill="rgb(228,109,6)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7711.50"></text></g><g><title>backtrace::symbolize::gimli::Symbol::name (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7685" width="0.4400%" height="15" fill="rgb(229,215,31)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7695.50"></text></g><g><title>backtrace::symbolize::SymbolName::new (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7669" width="0.4400%" height="15" fill="rgb(221,52,54)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7679.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7653" width="0.4400%" height="15" fill="rgb(252,129,43)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7663.50"></text></g><g><title>backtrace::symbolize::SymbolName::new::_{{closure}} (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7637" width="0.4400%" height="15" fill="rgb(248,183,27)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7647.50"></text></g><g><title>rustc_demangle::try_demangle (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7621" width="0.4400%" height="15" fill="rgb(250,0,22)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7631.50"></text></g><g><title>rustc_demangle::demangle (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7605" width="0.4400%" height="15" fill="rgb(213,166,10)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7615.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7589" width="0.4400%" height="15" fill="rgb(207,163,36)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7599.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7573" width="0.4400%" height="15" fill="rgb(208,122,22)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7583.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7557" width="0.4400%" height="15" fill="rgb(207,104,49)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7567.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7541" width="0.4400%" height="15" fill="rgb(248,211,50)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7551.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1,437,308 samples, 0.44%)</title><rect x="95.2402%" y="7525" width="0.4400%" height="15" fill="rgb(217,13,45)" fg:x="311125042" fg:w="1437308"/><text x="95.4902%" y="7535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7957" width="0.7360%" height="15" fill="rgb(211,216,49)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7941" width="0.7360%" height="15" fill="rgb(221,58,53)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7925" width="0.7360%" height="15" fill="rgb(220,112,41)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7909" width="0.7360%" height="15" fill="rgb(236,38,28)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7893" width="0.7360%" height="15" fill="rgb(227,195,22)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7877" width="0.7360%" height="15" fill="rgb(214,55,33)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7861" width="0.7360%" height="15" fill="rgb(248,80,13)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7871.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7845" width="0.7360%" height="15" fill="rgb(238,52,6)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7855.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7829" width="0.7360%" height="15" fill="rgb(224,198,47)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7839.50"></text></g><g><title>pprof::report::flamegraph::_&lt;impl pprof::report::Report&gt;::flamegraph_with_options::_{{closure}} (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7813" width="0.7360%" height="15" fill="rgb(233,171,20)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7823.50"></text></g><g><title>core::fmt::Write::write_fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7797" width="0.7360%" height="15" fill="rgb(241,30,25)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7807.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7781" width="0.7360%" height="15" fill="rgb(207,171,38)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7791.50"></text></g><g><title>core::fmt::write (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7765" width="0.7360%" height="15" fill="rgb(234,70,1)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7775.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7749" width="0.7360%" height="15" fill="rgb(232,178,18)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7759.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7733" width="0.7360%" height="15" fill="rgb(241,78,40)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7743.50"></text></g><g><title>&lt;pprof::frames::Symbol as core::fmt::Display&gt;::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7717" width="0.7360%" height="15" fill="rgb(222,35,25)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7727.50"></text></g><g><title>pprof::frames::Symbol::name (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7701" width="0.7360%" height="15" fill="rgb(207,92,16)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7711.50"></text></g><g><title>symbolic_demangle::demangle (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7685" width="0.7360%" height="15" fill="rgb(216,59,51)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7695.50"></text></g><g><title>&lt;symbolic_common::types::Name as symbolic_demangle::Demangle&gt;::demangle (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7669" width="0.7360%" height="15" fill="rgb(213,80,28)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7679.50"></text></g><g><title>symbolic_demangle::try_demangle_rust (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7653" width="0.7360%" height="15" fill="rgb(220,93,7)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7663.50"></text></g><g><title>alloc::fmt::format (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7637" width="0.7360%" height="15" fill="rgb(225,24,44)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7647.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7621" width="0.7360%" height="15" fill="rgb(243,74,40)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7631.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7605" width="0.7360%" height="15" fill="rgb(228,39,7)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7615.50"></text></g><g><title>alloc::fmt::format::format_inner (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7589" width="0.7360%" height="15" fill="rgb(227,79,8)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7599.50"></text></g><g><title>core::fmt::Write::write_fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7573" width="0.7360%" height="15" fill="rgb(236,58,11)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7583.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7557" width="0.7360%" height="15" fill="rgb(249,63,35)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7567.50"></text></g><g><title>core::fmt::write (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7541" width="0.7360%" height="15" fill="rgb(252,114,16)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7551.50"></text></g><g><title>core::fmt::run (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7525" width="0.7360%" height="15" fill="rgb(254,151,24)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7535.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7509" width="0.7360%" height="15" fill="rgb(253,54,39)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7519.50"></text></g><g><title>&lt;rustc_demangle::Demangle as core::fmt::Display&gt;::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7493" width="0.7360%" height="15" fill="rgb(243,25,45)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7503.50"></text></g><g><title>core::fmt::Write::write_fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7477" width="0.7360%" height="15" fill="rgb(234,134,9)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7487.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7461" width="0.7360%" height="15" fill="rgb(227,166,31)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7471.50"></text></g><g><title>core::fmt::write (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7445" width="0.7360%" height="15" fill="rgb(245,143,41)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7455.50"></text></g><g><title>core::fmt::run (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7429" width="0.7360%" height="15" fill="rgb(238,181,32)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7439.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7413" width="0.7360%" height="15" fill="rgb(224,113,18)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7423.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7397" width="0.7360%" height="15" fill="rgb(240,229,28)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7407.50"></text></g><g><title>&lt;rustc_demangle::DemangleStyle as core::fmt::Display&gt;::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7381" width="0.7360%" height="15" fill="rgb(250,185,3)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7391.50"></text></g><g><title>&lt;rustc_demangle::legacy::Demangle as core::fmt::Display&gt;::fmt (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7365" width="0.7360%" height="15" fill="rgb(212,59,25)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7375.50"></text></g><g><title>core::fmt::Formatter::write_str (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7349" width="0.7360%" height="15" fill="rgb(221,87,20)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7359.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7333" width="0.7360%" height="15" fill="rgb(213,74,28)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7343.50"></text></g><g><title>alloc::string::String::push_str (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7317" width="0.7360%" height="15" fill="rgb(224,132,34)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7301" width="0.7360%" height="15" fill="rgb(222,101,24)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7285" width="0.7360%" height="15" fill="rgb(254,142,4)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,404,277 samples, 0.74%)</title><rect x="95.6802%" y="7269" width="0.7360%" height="15" fill="rgb(230,229,49)" fg:x="312562350" fg:w="2404277"/><text x="95.9302%" y="7279.50"></text></g><g><title>inferno::flamegraph::deannotate (989,317 samples, 0.30%)</title><rect x="96.5514%" y="7941" width="0.3028%" height="15" fill="rgb(238,70,47)" fg:x="315408138" fg:w="989317"/><text x="96.8014%" y="7951.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (807,160 samples, 0.25%)</title><rect x="97.0018%" y="7925" width="0.2471%" height="15" fill="rgb(231,160,17)" fg:x="316879505" fg:w="807160"/><text x="97.2518%" y="7935.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (807,160 samples, 0.25%)</title><rect x="97.0018%" y="7909" width="0.2471%" height="15" fill="rgb(218,68,53)" fg:x="316879505" fg:w="807160"/><text x="97.2518%" y="7919.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (807,160 samples, 0.25%)</title><rect x="97.0018%" y="7893" width="0.2471%" height="15" fill="rgb(236,111,10)" fg:x="316879505" fg:w="807160"/><text x="97.2518%" y="7903.50"></text></g><g><title>std::io::Write::write_all (807,160 samples, 0.25%)</title><rect x="97.0018%" y="7877" width="0.2471%" height="15" fill="rgb(224,34,41)" fg:x="316879505" fg:w="807160"/><text x="97.2518%" y="7887.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (365,649 samples, 0.11%)</title><rect x="97.1369%" y="7861" width="0.1119%" height="15" fill="rgb(241,118,19)" fg:x="317321016" fg:w="365649"/><text x="97.3869%" y="7871.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (365,649 samples, 0.11%)</title><rect x="97.1369%" y="7845" width="0.1119%" height="15" fill="rgb(238,129,25)" fg:x="317321016" fg:w="365649"/><text x="97.3869%" y="7855.50"></text></g><g><title>std::sys::fs::unix::File::write (365,649 samples, 0.11%)</title><rect x="97.1369%" y="7829" width="0.1119%" height="15" fill="rgb(238,22,31)" fg:x="317321016" fg:w="365649"/><text x="97.3869%" y="7839.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (365,649 samples, 0.11%)</title><rect x="97.1369%" y="7813" width="0.1119%" height="15" fill="rgb(222,174,48)" fg:x="317321016" fg:w="365649"/><text x="97.3869%" y="7823.50"></text></g><g><title>std::sys::pal::unix::cvt (365,649 samples, 0.11%)</title><rect x="97.1369%" y="7797" width="0.1119%" height="15" fill="rgb(206,152,40)" fg:x="317321016" fg:w="365649"/><text x="97.3869%" y="7807.50"></text></g><g><title>inferno::flamegraph::filled_rectangle (2,109,723 samples, 0.65%)</title><rect x="96.8542%" y="7941" width="0.6458%" height="15" fill="rgb(218,99,54)" fg:x="316397455" fg:w="2109723"/><text x="97.1042%" y="7951.50"></text></g><g><title>str_stack::StrStack::write_fmt (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7925" width="0.2512%" height="15" fill="rgb(220,174,26)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7935.50"></text></g><g><title>core::fmt::Write::write_fmt (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7909" width="0.2512%" height="15" fill="rgb(245,116,9)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7919.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7893" width="0.2512%" height="15" fill="rgb(209,72,35)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7903.50"></text></g><g><title>core::fmt::write (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7877" width="0.2512%" height="15" fill="rgb(226,126,21)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7887.50"></text></g><g><title>core::fmt::run (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7861" width="0.2512%" height="15" fill="rgb(227,192,1)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7871.50"></text></g><g><title>core::fmt::rt::Argument::fmt (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7845" width="0.2512%" height="15" fill="rgb(237,180,29)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7855.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7829" width="0.2512%" height="15" fill="rgb(230,197,35)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7839.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7813" width="0.2512%" height="15" fill="rgb(246,193,31)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7823.50"></text></g><g><title>core::ops::function::FnMut::call_mut (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7797" width="0.2512%" height="15" fill="rgb(241,36,4)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7807.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7781" width="0.2512%" height="15" fill="rgb(241,130,17)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7791.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7765" width="0.2512%" height="15" fill="rgb(206,137,32)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7775.50"></text></g><g><title>core::num::diy_float::Fp::mul (820,513 samples, 0.25%)</title><rect x="97.2488%" y="7749" width="0.2512%" height="15" fill="rgb(237,228,51)" fg:x="317686665" fg:w="820513"/><text x="97.4988%" y="7759.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (332,626 samples, 0.10%)</title><rect x="97.5000%" y="7925" width="0.1018%" height="15" fill="rgb(243,6,42)" fg:x="318507178" fg:w="332626"/><text x="97.7500%" y="7935.50"></text></g><g><title>[libc.so.6] (450,747 samples, 0.14%)</title><rect x="97.6018%" y="7829" width="0.1380%" height="15" fill="rgb(251,74,28)" fg:x="318839804" fg:w="450747"/><text x="97.8518%" y="7839.50"></text></g><g><title>inferno::flamegraph::svg::write_str (1,685,096 samples, 0.52%)</title><rect x="97.5000%" y="7941" width="0.5158%" height="15" fill="rgb(218,20,49)" fg:x="318507178" fg:w="1685096"/><text x="97.7500%" y="7951.50"></text></g><g><title>str_stack::StrStack::write_fmt (1,352,470 samples, 0.41%)</title><rect x="97.6018%" y="7925" width="0.4140%" height="15" fill="rgb(238,28,14)" fg:x="318839804" fg:w="1352470"/><text x="97.8518%" y="7935.50"></text></g><g><title>core::fmt::Write::write_fmt (1,352,470 samples, 0.41%)</title><rect x="97.6018%" y="7909" width="0.4140%" height="15" fill="rgb(229,40,46)" fg:x="318839804" fg:w="1352470"/><text x="97.8518%" y="7919.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1,352,470 samples, 0.41%)</title><rect x="97.6018%" y="7893" width="0.4140%" height="15" fill="rgb(244,195,20)" fg:x="318839804" fg:w="1352470"/><text x="97.8518%" y="7903.50"></text></g><g><title>core::fmt::write (1,352,470 samples, 0.41%)</title><rect x="97.6018%" y="7877" width="0.4140%" height="15" fill="rgb(253,56,35)" fg:x="318839804" fg:w="1352470"/><text x="97.8518%" y="7887.50"></text></g><g><title>core::fmt::run (1,352,470 samples, 0.41%)</title><rect x="97.6018%" y="7861" width="0.4140%" height="15" fill="rgb(210,149,44)" fg:x="318839804" fg:w="1352470"/><text x="97.8518%" y="7871.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1,352,470 samples, 0.41%)</title><rect x="97.6018%" y="7845" width="0.4140%" height="15" fill="rgb(240,135,12)" fg:x="318839804" fg:w="1352470"/><text x="97.8518%" y="7855.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (901,723 samples, 0.28%)</title><rect x="97.7398%" y="7829" width="0.2760%" height="15" fill="rgb(251,24,50)" fg:x="319290551" fg:w="901723"/><text x="97.9898%" y="7839.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (901,723 samples, 0.28%)</title><rect x="97.7398%" y="7813" width="0.2760%" height="15" fill="rgb(243,200,47)" fg:x="319290551" fg:w="901723"/><text x="97.9898%" y="7823.50"></text></g><g><title>core::ops::function::FnMut::call_mut (901,723 samples, 0.28%)</title><rect x="97.7398%" y="7797" width="0.2760%" height="15" fill="rgb(224,166,26)" fg:x="319290551" fg:w="901723"/><text x="97.9898%" y="7807.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (901,723 samples, 0.28%)</title><rect x="97.7398%" y="7781" width="0.2760%" height="15" fill="rgb(233,0,47)" fg:x="319290551" fg:w="901723"/><text x="97.9898%" y="7791.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (901,723 samples, 0.28%)</title><rect x="97.7398%" y="7765" width="0.2760%" height="15" fill="rgb(253,80,5)" fg:x="319290551" fg:w="901723"/><text x="97.9898%" y="7775.50"></text></g><g><title>core::num::bignum::Big32x40::sub (901,723 samples, 0.28%)</title><rect x="97.7398%" y="7749" width="0.2760%" height="15" fill="rgb(214,133,25)" fg:x="319290551" fg:w="901723"/><text x="97.9898%" y="7759.50"></text></g><g><title>core::num::&lt;impl u32&gt;::carrying_add (901,723 samples, 0.28%)</title><rect x="97.7398%" y="7733" width="0.2760%" height="15" fill="rgb(209,27,14)" fg:x="319290551" fg:w="901723"/><text x="97.9898%" y="7743.50"></text></g><g><title>inferno::flamegraph::write_container_start (426,378 samples, 0.13%)</title><rect x="98.0159%" y="7941" width="0.1305%" height="15" fill="rgb(219,102,51)" fg:x="320192274" fg:w="426378"/><text x="98.2659%" y="7951.50"></text></g><g><title>inferno::flamegraph::attrs::FuncFrameAttrsMap::frameattrs_for_func (426,378 samples, 0.13%)</title><rect x="98.0159%" y="7925" width="0.1305%" height="15" fill="rgb(237,18,16)" fg:x="320192274" fg:w="426378"/><text x="98.2659%" y="7935.50"></text></g><g><title>ahash::hash_map::AHashMap&lt;K,V,S&gt;::get (426,378 samples, 0.13%)</title><rect x="98.0159%" y="7909" width="0.1305%" height="15" fill="rgb(241,85,17)" fg:x="320192274" fg:w="426378"/><text x="98.2659%" y="7919.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (426,378 samples, 0.13%)</title><rect x="98.0159%" y="7893" width="0.1305%" height="15" fill="rgb(236,90,42)" fg:x="320192274" fg:w="426378"/><text x="98.2659%" y="7903.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (426,378 samples, 0.13%)</title><rect x="98.0159%" y="7877" width="0.1305%" height="15" fill="rgb(249,57,21)" fg:x="320192274" fg:w="426378"/><text x="98.2659%" y="7887.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (426,378 samples, 0.13%)</title><rect x="98.0159%" y="7861" width="0.1305%" height="15" fill="rgb(243,12,36)" fg:x="320192274" fg:w="426378"/><text x="98.2659%" y="7871.50"></text></g><g><title>pprof::report::flamegraph::&lt;impl pprof::report::Report&gt;::flamegraph (8,497,813 samples, 2.60%)</title><rect x="95.6802%" y="7989" width="2.6013%" height="15" fill="rgb(253,128,47)" fg:x="312562350" fg:w="8497813"/><text x="95.9302%" y="7999.50">pp..</text></g><g><title>pprof::report::flamegraph::&lt;impl pprof::report::Report&gt;::flamegraph_with_options (8,497,813 samples, 2.60%)</title><rect x="95.6802%" y="7973" width="2.6013%" height="15" fill="rgb(207,33,20)" fg:x="312562350" fg:w="8497813"/><text x="95.9302%" y="7983.50">pp..</text></g><g><title>inferno::flamegraph::from_lines (6,093,536 samples, 1.87%)</title><rect x="96.4162%" y="7957" width="1.8653%" height="15" fill="rgb(233,215,35)" fg:x="314966627" fg:w="6093536"/><text x="96.6662%" y="7967.50">i..</text></g><g><title>str_stack::StrStack::write_fmt (441,511 samples, 0.14%)</title><rect x="98.1464%" y="7941" width="0.1352%" height="15" fill="rgb(249,188,52)" fg:x="320618652" fg:w="441511"/><text x="98.3964%" y="7951.50"></text></g><g><title>core::fmt::Write::write_fmt (441,511 samples, 0.14%)</title><rect x="98.1464%" y="7925" width="0.1352%" height="15" fill="rgb(225,12,32)" fg:x="320618652" fg:w="441511"/><text x="98.3964%" y="7935.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (441,511 samples, 0.14%)</title><rect x="98.1464%" y="7909" width="0.1352%" height="15" fill="rgb(247,98,14)" fg:x="320618652" fg:w="441511"/><text x="98.3964%" y="7919.50"></text></g><g><title>core::fmt::write (441,511 samples, 0.14%)</title><rect x="98.1464%" y="7893" width="0.1352%" height="15" fill="rgb(247,219,48)" fg:x="320618652" fg:w="441511"/><text x="98.3964%" y="7903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (920,551 samples, 0.28%)</title><rect x="98.2815%" y="7893" width="0.2818%" height="15" fill="rgb(253,60,48)" fg:x="321060163" fg:w="920551"/><text x="98.5315%" y="7903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,241,848 samples, 0.69%)</title><rect x="98.2815%" y="7973" width="0.6863%" height="15" fill="rgb(245,15,52)" fg:x="321060163" fg:w="2241848"/><text x="98.5315%" y="7983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,241,848 samples, 0.69%)</title><rect x="98.2815%" y="7957" width="0.6863%" height="15" fill="rgb(220,133,28)" fg:x="321060163" fg:w="2241848"/><text x="98.5315%" y="7967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,241,848 samples, 0.69%)</title><rect x="98.2815%" y="7941" width="0.6863%" height="15" fill="rgb(217,180,4)" fg:x="321060163" fg:w="2241848"/><text x="98.5315%" y="7951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,241,848 samples, 0.69%)</title><rect x="98.2815%" y="7925" width="0.6863%" height="15" fill="rgb(251,24,1)" fg:x="321060163" fg:w="2241848"/><text x="98.5315%" y="7935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,241,848 samples, 0.69%)</title><rect x="98.2815%" y="7909" width="0.6863%" height="15" fill="rgb(212,185,49)" fg:x="321060163" fg:w="2241848"/><text x="98.5315%" y="7919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7893" width="0.4045%" height="15" fill="rgb(215,175,22)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7877" width="0.4045%" height="15" fill="rgb(250,205,14)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7861" width="0.4045%" height="15" fill="rgb(225,211,22)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7845" width="0.4045%" height="15" fill="rgb(251,179,42)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7855.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7829" width="0.4045%" height="15" fill="rgb(208,216,51)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7839.50"></text></g><g><title>profile::demean_impl::_{{closure}} (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7813" width="0.4045%" height="15" fill="rgb(235,36,11)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7797" width="0.4045%" height="15" fill="rgb(213,189,28)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7781" width="0.4045%" height="15" fill="rgb(227,203,42)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7765" width="0.4045%" height="15" fill="rgb(244,72,36)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7749" width="0.4045%" height="15" fill="rgb(213,53,17)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7733" width="0.4045%" height="15" fill="rgb(207,167,3)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7717" width="0.4045%" height="15" fill="rgb(216,98,30)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7701" width="0.4045%" height="15" fill="rgb(236,123,15)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7685" width="0.4045%" height="15" fill="rgb(248,81,50)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7669" width="0.4045%" height="15" fill="rgb(214,120,4)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7679.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7653" width="0.4045%" height="15" fill="rgb(208,179,34)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7637" width="0.4045%" height="15" fill="rgb(227,140,7)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7621" width="0.4045%" height="15" fill="rgb(214,22,6)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7631.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1,321,297 samples, 0.40%)</title><rect x="98.5633%" y="7605" width="0.4045%" height="15" fill="rgb(207,137,27)" fg:x="321980714" fg:w="1321297"/><text x="98.8133%" y="7615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7973" width="0.2528%" height="15" fill="rgb(210,8,46)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7957" width="0.2528%" height="15" fill="rgb(240,16,54)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7941" width="0.2528%" height="15" fill="rgb(211,209,29)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7951.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7925" width="0.2528%" height="15" fill="rgb(226,228,24)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7909" width="0.2528%" height="15" fill="rgb(222,84,9)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7919.50"></text></g><g><title>&lt;ndarray::iterators::Iter&lt;A,D&gt; as core::iter::traits::iterator::Iterator&gt;::fold (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7893" width="0.2528%" height="15" fill="rgb(234,203,30)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7877" width="0.2528%" height="15" fill="rgb(238,109,14)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7887.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7861" width="0.2528%" height="15" fill="rgb(233,206,34)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::_{{closure}} (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7845" width="0.2528%" height="15" fill="rgb(220,167,47)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7855.50"></text></g><g><title>core::cmp::max_by (825,981 samples, 0.25%)</title><rect x="98.9678%" y="7829" width="0.2528%" height="15" fill="rgb(238,105,10)" fg:x="323302011" fg:w="825981"/><text x="99.2178%" y="7839.50"></text></g><g><title>_start (89,458,723 samples, 27.38%)</title><rect x="72.3753%" y="8101" width="27.3847%" height="15" fill="rgb(213,227,17)" fg:x="236431252" fg:w="89458723"/><text x="72.6253%" y="8111.50">_start</text></g><g><title>__libc_start_main (89,458,723 samples, 27.38%)</title><rect x="72.3753%" y="8085" width="27.3847%" height="15" fill="rgb(217,132,38)" fg:x="236431252" fg:w="89458723"/><text x="72.6253%" y="8095.50">__libc_start_main</text></g><g><title>[libc.so.6] (89,458,723 samples, 27.38%)</title><rect x="72.3753%" y="8069" width="27.3847%" height="15" fill="rgb(242,146,4)" fg:x="236431252" fg:w="89458723"/><text x="72.6253%" y="8079.50">[libc.so.6]</text></g><g><title>main (89,458,723 samples, 27.38%)</title><rect x="72.3753%" y="8053" width="27.3847%" height="15" fill="rgb(212,61,9)" fg:x="236431252" fg:w="89458723"/><text x="72.6253%" y="8063.50">main</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (88,957,219 samples, 27.23%)</title><rect x="72.5288%" y="8037" width="27.2312%" height="15" fill="rgb(247,126,22)" fg:x="236932756" fg:w="88957219"/><text x="72.7788%" y="8047.50">std::sys::backtrace::__rust_begin_short_back..</text></g><g><title>core::ops::function::FnOnce::call_once (88,957,219 samples, 27.23%)</title><rect x="72.5288%" y="8021" width="27.2312%" height="15" fill="rgb(220,196,2)" fg:x="236932756" fg:w="88957219"/><text x="72.7788%" y="8031.50">core::ops::function::FnOnce::call_once</text></g><g><title>profile::main (88,957,219 samples, 27.23%)</title><rect x="72.5288%" y="8005" width="27.2312%" height="15" fill="rgb(208,46,4)" fg:x="236932756" fg:w="88957219"/><text x="72.7788%" y="8015.50">profile::main</text></g><g><title>profile::demean_impl (4,829,812 samples, 1.48%)</title><rect x="98.2815%" y="7989" width="1.4785%" height="15" fill="rgb(252,104,46)" fg:x="321060163" fg:w="4829812"/><text x="98.5315%" y="7999.50"></text></g><g><title>profile::internal::calc_group_weights (1,761,983 samples, 0.54%)</title><rect x="99.2206%" y="7973" width="0.5394%" height="15" fill="rgb(237,152,48)" fg:x="324127992" fg:w="1761983"/><text x="99.4706%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Collector&lt;pprof::frames::UnresolvedFrames&gt;&gt; (357,610 samples, 0.11%)</title><rect x="99.7600%" y="8101" width="0.1095%" height="15" fill="rgb(221,59,37)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="8111.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::HashCounter&lt;pprof::frames::UnresolvedFrames&gt;&gt; (357,610 samples, 0.11%)</title><rect x="99.7600%" y="8085" width="0.1095%" height="15" fill="rgb(209,202,51)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="8095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt;&gt; (357,610 samples, 0.11%)</title><rect x="99.7600%" y="8069" width="0.1095%" height="15" fill="rgb(228,81,30)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="8079.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt; (357,610 samples, 0.11%)</title><rect x="99.7600%" y="8053" width="0.1095%" height="15" fill="rgb(227,42,39)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="8063.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;&gt; (357,610 samples, 0.11%)</title><rect x="99.7600%" y="8037" width="0.1095%" height="15" fill="rgb(221,26,2)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="8047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt;&gt; (357,610 samples, 0.11%)</title><rect x="99.7600%" y="8021" width="0.1095%" height="15" fill="rgb(254,61,31)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="8031.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (357,610 samples, 0.11%)</title><rect x="99.7600%" y="8005" width="0.1095%" height="15" fill="rgb(222,173,38)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="8015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (357,610 samples, 0.11%)</title><rect x="99.7600%" y="7989" width="0.1095%" height="15" fill="rgb(218,50,12)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="7999.50"></text></g><g><title>alloc::alloc::dealloc (357,610 samples, 0.11%)</title><rect x="99.7600%" y="7973" width="0.1095%" height="15" fill="rgb(223,88,40)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="7983.50"></text></g><g><title>__rustc::__rdl_dealloc (357,610 samples, 0.11%)</title><rect x="99.7600%" y="7957" width="0.1095%" height="15" fill="rgb(237,54,19)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="7967.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (357,610 samples, 0.11%)</title><rect x="99.7600%" y="7941" width="0.1095%" height="15" fill="rgb(251,129,25)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="7951.50"></text></g><g><title>cfree (357,610 samples, 0.11%)</title><rect x="99.7600%" y="7925" width="0.1095%" height="15" fill="rgb(238,97,19)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="7935.50"></text></g><g><title>[libc.so.6] (357,610 samples, 0.11%)</title><rect x="99.7600%" y="7909" width="0.1095%" height="15" fill="rgb(240,169,18)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="7919.50"></text></g><g><title>[libc.so.6] (357,610 samples, 0.11%)</title><rect x="99.7600%" y="7893" width="0.1095%" height="15" fill="rgb(230,187,49)" fg:x="325889975" fg:w="357610"/><text x="100.0100%" y="7903.50"></text></g><g><title>all (326,673,963 samples, 100%)</title><rect x="0.0000%" y="8133" width="100.0000%" height="15" fill="rgb(209,44,26)" fg:x="0" fg:w="326673963"/><text x="0.2500%" y="8143.50"></text></g><g><title>profile (326,673,963 samples, 100.00%)</title><rect x="0.0000%" y="8117" width="100.0000%" height="15" fill="rgb(244,0,6)" fg:x="0" fg:w="326673963"/><text x="0.2500%" y="8127.50">profile</text></g><g><title>write (426,378 samples, 0.13%)</title><rect x="99.8695%" y="8101" width="0.1305%" height="15" fill="rgb(248,18,21)" fg:x="326247585" fg:w="426378"/><text x="100.1195%" y="8111.50"></text></g></svg></svg>