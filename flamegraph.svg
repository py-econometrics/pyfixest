<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1462" onload="init(evt)" viewBox="0 0 1200 1462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1462" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1445.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1445.00"> </text><svg id="frames" x="10" width="1180" total_samples="313508763"><g><title>inferno::flamegraph::filled_rectangle (1,062,891 samples, 0.34%)</title><rect x="0.0000%" y="1349" width="0.3390%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1062891"/><text x="0.2500%" y="1359.50"></text></g><g><title>str_stack::StrStack::write_fmt (1,062,891 samples, 0.34%)</title><rect x="0.0000%" y="1333" width="0.3390%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1062891"/><text x="0.2500%" y="1343.50"></text></g><g><title>core::fmt::Write::write_fmt (1,062,891 samples, 0.34%)</title><rect x="0.0000%" y="1317" width="0.3390%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1062891"/><text x="0.2500%" y="1327.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1,062,891 samples, 0.34%)</title><rect x="0.0000%" y="1301" width="0.3390%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1062891"/><text x="0.2500%" y="1311.50"></text></g><g><title>[libc.so.6] (1,062,891 samples, 0.34%)</title><rect x="0.0000%" y="1285" width="0.3390%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1062891"/><text x="0.2500%" y="1295.50"></text></g><g><title>inferno::flamegraph::from_lines (1,930,749 samples, 0.62%)</title><rect x="0.0000%" y="1365" width="0.6159%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1930749"/><text x="0.2500%" y="1375.50"></text></g><g><title>str_stack::StrStack::write_fmt (867,858 samples, 0.28%)</title><rect x="0.3390%" y="1349" width="0.2768%" height="15" fill="rgb(207,160,47)" fg:x="1062891" fg:w="867858"/><text x="0.5890%" y="1359.50"></text></g><g><title>core::fmt::Write::write_fmt (867,858 samples, 0.28%)</title><rect x="0.3390%" y="1333" width="0.2768%" height="15" fill="rgb(228,23,34)" fg:x="1062891" fg:w="867858"/><text x="0.5890%" y="1343.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (867,858 samples, 0.28%)</title><rect x="0.3390%" y="1317" width="0.2768%" height="15" fill="rgb(218,30,26)" fg:x="1062891" fg:w="867858"/><text x="0.5890%" y="1327.50"></text></g><g><title>[libc.so.6] (867,858 samples, 0.28%)</title><rect x="0.3390%" y="1301" width="0.2768%" height="15" fill="rgb(220,122,19)" fg:x="1062891" fg:w="867858"/><text x="0.5890%" y="1311.50"></text></g><g><title>[[heap]] (1,978,647 samples, 0.63%)</title><rect x="0.0000%" y="1381" width="0.6311%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1978647"/><text x="0.2500%" y="1391.50"></text></g><g><title>quick_xml::escapei::escape (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1365" width="0.0153%" height="15" fill="rgb(240,193,28)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1375.50"></text></g><g><title>quick_xml::escapei::_escape (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1349" width="0.0153%" height="15" fill="rgb(216,20,37)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1333" width="0.0153%" height="15" fill="rgb(206,188,39)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1317" width="0.0153%" height="15" fill="rgb(217,207,13)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1301" width="0.0153%" height="15" fill="rgb(231,73,38)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1285" width="0.0153%" height="15" fill="rgb(225,20,46)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1269" width="0.0153%" height="15" fill="rgb(210,31,41)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1253" width="0.0153%" height="15" fill="rgb(221,200,47)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1237" width="0.0153%" height="15" fill="rgb(226,26,5)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1221" width="0.0153%" height="15" fill="rgb(249,33,26)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1231.50"></text></g><g><title>__rustc::__rdl_alloc (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1205" width="0.0153%" height="15" fill="rgb(235,183,28)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1215.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1189" width="0.0153%" height="15" fill="rgb(221,5,38)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1199.50"></text></g><g><title>malloc (47,898 samples, 0.02%)</title><rect x="0.6159%" y="1173" width="0.0153%" height="15" fill="rgb(247,18,42)" fg:x="1930749" fg:w="47898"/><text x="0.8659%" y="1183.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1365" width="0.1324%" height="15" fill="rgb(241,131,45)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1375.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1349" width="0.1324%" height="15" fill="rgb(249,31,29)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1333" width="0.1324%" height="15" fill="rgb(225,111,53)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1317" width="0.1324%" height="15" fill="rgb(238,160,17)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1301" width="0.1324%" height="15" fill="rgb(214,148,48)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1285" width="0.1324%" height="15" fill="rgb(232,36,49)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1295.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1269" width="0.1324%" height="15" fill="rgb(209,103,24)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1279.50"></text></g><g><title>core::ops::function::FnMut::call_mut (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1253" width="0.1324%" height="15" fill="rgb(229,88,8)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1263.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1237" width="0.1324%" height="15" fill="rgb(213,181,19)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1221" width="0.1324%" height="15" fill="rgb(254,191,54)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1231.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1205" width="0.1324%" height="15" fill="rgb(241,83,37)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1215.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1189" width="0.1324%" height="15" fill="rgb(233,36,39)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1199.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1173" width="0.1324%" height="15" fill="rgb(226,3,54)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1183.50"></text></g><g><title>std::time::SystemTime::now (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1157" width="0.1324%" height="15" fill="rgb(245,192,40)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1141" width="0.1324%" height="15" fill="rgb(238,167,29)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1151.50"></text></g><g><title>clock_gettime (415,071 samples, 0.13%)</title><rect x="0.6311%" y="1125" width="0.1324%" height="15" fill="rgb(232,182,51)" fg:x="1978647" fg:w="415071"/><text x="0.8811%" y="1135.50"></text></g><g><title>[[stack]] (451,115 samples, 0.14%)</title><rect x="0.6311%" y="1381" width="0.1439%" height="15" fill="rgb(231,60,39)" fg:x="1978647" fg:w="451115"/><text x="0.8811%" y="1391.50"></text></g><g><title>std::io::Write::write_all (36,044 samples, 0.01%)</title><rect x="0.7635%" y="1365" width="0.0115%" height="15" fill="rgb(208,69,12)" fg:x="2393718" fg:w="36044"/><text x="1.0135%" y="1375.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (36,044 samples, 0.01%)</title><rect x="0.7635%" y="1349" width="0.0115%" height="15" fill="rgb(235,93,37)" fg:x="2393718" fg:w="36044"/><text x="1.0135%" y="1359.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (36,044 samples, 0.01%)</title><rect x="0.7635%" y="1333" width="0.0115%" height="15" fill="rgb(213,116,39)" fg:x="2393718" fg:w="36044"/><text x="1.0135%" y="1343.50"></text></g><g><title>std::sys::fs::unix::File::write (36,044 samples, 0.01%)</title><rect x="0.7635%" y="1317" width="0.0115%" height="15" fill="rgb(222,207,29)" fg:x="2393718" fg:w="36044"/><text x="1.0135%" y="1327.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (36,044 samples, 0.01%)</title><rect x="0.7635%" y="1301" width="0.0115%" height="15" fill="rgb(206,96,30)" fg:x="2393718" fg:w="36044"/><text x="1.0135%" y="1311.50"></text></g><g><title>write (36,044 samples, 0.01%)</title><rect x="0.7635%" y="1285" width="0.0115%" height="15" fill="rgb(218,138,4)" fg:x="2393718" fg:w="36044"/><text x="1.0135%" y="1295.50"></text></g><g><title>[anon] (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1381" width="0.4708%" height="15" fill="rgb(250,191,14)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1365" width="0.4708%" height="15" fill="rgb(239,60,40)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1349" width="0.4708%" height="15" fill="rgb(206,27,48)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1359.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1333" width="0.4708%" height="15" fill="rgb(225,35,8)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1317" width="0.4708%" height="15" fill="rgb(250,213,24)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1301" width="0.4708%" height="15" fill="rgb(247,123,22)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1285" width="0.4708%" height="15" fill="rgb(231,138,38)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1269" width="0.4708%" height="15" fill="rgb(231,145,46)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1253" width="0.4708%" height="15" fill="rgb(251,118,11)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1263.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1237" width="0.4708%" height="15" fill="rgb(217,147,25)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1247.50"></text></g><g><title>profile::demean_impl::_{{closure}} (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1221" width="0.4708%" height="15" fill="rgb(247,81,37)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1205" width="0.4708%" height="15" fill="rgb(209,12,38)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1189" width="0.4708%" height="15" fill="rgb(227,1,9)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1173" width="0.4708%" height="15" fill="rgb(248,47,43)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1157" width="0.4708%" height="15" fill="rgb(221,10,30)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1141" width="0.4708%" height="15" fill="rgb(210,229,1)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1125" width="0.4708%" height="15" fill="rgb(222,148,37)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1109" width="0.4708%" height="15" fill="rgb(234,67,33)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1093" width="0.4708%" height="15" fill="rgb(247,98,35)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1077" width="0.4708%" height="15" fill="rgb(247,138,52)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1061" width="0.4708%" height="15" fill="rgb(213,79,30)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1045" width="0.4708%" height="15" fill="rgb(246,177,23)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1029" width="0.4708%" height="15" fill="rgb(230,62,27)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1039.50"></text></g><g><title>__rustc::__rdl_alloc (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="1013" width="0.4708%" height="15" fill="rgb(216,154,8)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1023.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="997" width="0.4708%" height="15" fill="rgb(244,35,45)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="1007.50"></text></g><g><title>malloc (1,475,965 samples, 0.47%)</title><rect x="0.7750%" y="981" width="0.4708%" height="15" fill="rgb(251,115,12)" fg:x="2429762" fg:w="1475965"/><text x="1.0250%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,138,621 samples, 0.36%)</title><rect x="4.0125%" y="597" width="0.3632%" height="15" fill="rgb(240,54,50)" fg:x="12579445" fg:w="1138621"/><text x="4.2625%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,138,621 samples, 0.36%)</title><rect x="4.0125%" y="581" width="0.3632%" height="15" fill="rgb(233,84,52)" fg:x="12579445" fg:w="1138621"/><text x="4.2625%" y="591.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (1,138,621 samples, 0.36%)</title><rect x="4.0125%" y="565" width="0.3632%" height="15" fill="rgb(207,117,47)" fg:x="12579445" fg:w="1138621"/><text x="4.2625%" y="575.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (446,588 samples, 0.14%)</title><rect x="4.3757%" y="533" width="0.1424%" height="15" fill="rgb(249,43,39)" fg:x="13718066" fg:w="446588"/><text x="4.6257%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11,138,999 samples, 3.55%)</title><rect x="4.0125%" y="725" width="3.5530%" height="15" fill="rgb(209,38,44)" fg:x="12579445" fg:w="11138999"/><text x="4.2625%" y="735.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11,138,999 samples, 3.55%)</title><rect x="4.0125%" y="709" width="3.5530%" height="15" fill="rgb(236,212,23)" fg:x="12579445" fg:w="11138999"/><text x="4.2625%" y="719.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11,138,999 samples, 3.55%)</title><rect x="4.0125%" y="693" width="3.5530%" height="15" fill="rgb(242,79,21)" fg:x="12579445" fg:w="11138999"/><text x="4.2625%" y="703.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11,138,999 samples, 3.55%)</title><rect x="4.0125%" y="677" width="3.5530%" height="15" fill="rgb(211,96,35)" fg:x="12579445" fg:w="11138999"/><text x="4.2625%" y="687.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11,138,999 samples, 3.55%)</title><rect x="4.0125%" y="661" width="3.5530%" height="15" fill="rgb(253,215,40)" fg:x="12579445" fg:w="11138999"/><text x="4.2625%" y="671.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (11,138,999 samples, 3.55%)</title><rect x="4.0125%" y="645" width="3.5530%" height="15" fill="rgb(211,81,21)" fg:x="12579445" fg:w="11138999"/><text x="4.2625%" y="655.50">allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11,138,999 samples, 3.55%)</title><rect x="4.0125%" y="629" width="3.5530%" height="15" fill="rgb(208,190,38)" fg:x="12579445" fg:w="11138999"/><text x="4.2625%" y="639.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,138,999 samples, 3.55%)</title><rect x="4.0125%" y="613" width="3.5530%" height="15" fill="rgb(235,213,38)" fg:x="12579445" fg:w="11138999"/><text x="4.2625%" y="623.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (10,000,378 samples, 3.19%)</title><rect x="4.3757%" y="597" width="3.1898%" height="15" fill="rgb(237,122,38)" fg:x="13718066" fg:w="10000378"/><text x="4.6257%" y="607.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,000,378 samples, 3.19%)</title><rect x="4.3757%" y="581" width="3.1898%" height="15" fill="rgb(244,218,35)" fg:x="13718066" fg:w="10000378"/><text x="4.6257%" y="591.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (10,000,378 samples, 3.19%)</title><rect x="4.3757%" y="565" width="3.1898%" height="15" fill="rgb(240,68,47)" fg:x="13718066" fg:w="10000378"/><text x="4.6257%" y="575.50">cor..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (10,000,378 samples, 3.19%)</title><rect x="4.3757%" y="549" width="3.1898%" height="15" fill="rgb(210,16,53)" fg:x="13718066" fg:w="10000378"/><text x="4.6257%" y="559.50">all..</text></g><g><title>core::ptr::write (9,553,790 samples, 3.05%)</title><rect x="4.5181%" y="533" width="3.0474%" height="15" fill="rgb(235,124,12)" fg:x="14164654" fg:w="9553790"/><text x="4.7681%" y="543.50">cor..</text></g><g><title>[unknown] (1,288,282 samples, 0.41%)</title><rect x="7.1546%" y="517" width="0.4109%" height="15" fill="rgb(224,169,11)" fg:x="22430162" fg:w="1288282"/><text x="7.4046%" y="527.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (7,877,873 samples, 2.51%)</title><rect x="7.5655%" y="725" width="2.5128%" height="15" fill="rgb(250,166,2)" fg:x="23718444" fg:w="7877873"/><text x="7.8155%" y="735.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (7,877,873 samples, 2.51%)</title><rect x="7.5655%" y="709" width="2.5128%" height="15" fill="rgb(242,216,29)" fg:x="23718444" fg:w="7877873"/><text x="7.8155%" y="719.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (7,877,873 samples, 2.51%)</title><rect x="7.5655%" y="693" width="2.5128%" height="15" fill="rgb(230,116,27)" fg:x="23718444" fg:w="7877873"/><text x="7.8155%" y="703.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (7,877,873 samples, 2.51%)</title><rect x="7.5655%" y="677" width="2.5128%" height="15" fill="rgb(228,99,48)" fg:x="23718444" fg:w="7877873"/><text x="7.8155%" y="687.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (7,877,873 samples, 2.51%)</title><rect x="7.5655%" y="661" width="2.5128%" height="15" fill="rgb(253,11,6)" fg:x="23718444" fg:w="7877873"/><text x="7.8155%" y="671.50">nd..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6,621,082 samples, 2.11%)</title><rect x="10.0783%" y="661" width="2.1119%" height="15" fill="rgb(247,143,39)" fg:x="31596317" fg:w="6621082"/><text x="10.3283%" y="671.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6,621,082 samples, 2.11%)</title><rect x="10.0783%" y="645" width="2.1119%" height="15" fill="rgb(236,97,10)" fg:x="31596317" fg:w="6621082"/><text x="10.3283%" y="655.50">&lt;..</text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (6,621,082 samples, 2.11%)</title><rect x="10.0783%" y="629" width="2.1119%" height="15" fill="rgb(233,208,19)" fg:x="31596317" fg:w="6621082"/><text x="10.3283%" y="639.50">&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (6,621,082 samples, 2.11%)</title><rect x="10.0783%" y="613" width="2.1119%" height="15" fill="rgb(216,164,2)" fg:x="31596317" fg:w="6621082"/><text x="10.3283%" y="623.50">c..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="869" width="32.9275%" height="15" fill="rgb(220,129,5)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="879.50">rayon::iter::plumbing::Producer::fold_with</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="853" width="32.9275%" height="15" fill="rgb(242,17,10)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="863.50">&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="837" width="32.9275%" height="15" fill="rgb(242,107,0)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="847.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="821" width="32.9275%" height="15" fill="rgb(251,28,31)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="831.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::t..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="805" width="32.9275%" height="15" fill="rgb(233,223,10)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="815.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::a..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="789" width="32.9275%" height="15" fill="rgb(215,21,27)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="799.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="773" width="32.9275%" height="15" fill="rgb(232,23,21)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="783.50">core::iter::traits::iterator::Iterator::for_each::cal..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="757" width="32.9275%" height="15" fill="rgb(244,5,23)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="767.50">core::ops::function::impls::&lt;impl core::ops::function..</text></g><g><title>profile::demean_impl::_{{closure}} (103,230,706 samples, 32.93%)</title><rect x="4.0125%" y="741" width="32.9275%" height="15" fill="rgb(226,81,46)" fg:x="12579445" fg:w="103230706"/><text x="4.2625%" y="751.50">profile::demean_impl::_{{closure}}</text></g><g><title>profile::internal::subtract_weighted_group_mean (84,213,834 samples, 26.86%)</title><rect x="10.0783%" y="725" width="26.8617%" height="15" fill="rgb(247,70,30)" fg:x="31596317" fg:w="84213834"/><text x="10.3283%" y="735.50">profile::internal::subtract_weighted_group_..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (84,213,834 samples, 26.86%)</title><rect x="10.0783%" y="709" width="26.8617%" height="15" fill="rgb(212,68,19)" fg:x="31596317" fg:w="84213834"/><text x="10.3283%" y="719.50">core::iter::traits::iterator::Iterator::for..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (84,213,834 samples, 26.86%)</title><rect x="10.0783%" y="693" width="26.8617%" height="15" fill="rgb(240,187,13)" fg:x="31596317" fg:w="84213834"/><text x="10.3283%" y="703.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as cor..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (84,213,834 samples, 26.86%)</title><rect x="10.0783%" y="677" width="26.8617%" height="15" fill="rgb(223,113,26)" fg:x="31596317" fg:w="84213834"/><text x="10.3283%" y="687.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (77,592,752 samples, 24.75%)</title><rect x="12.1902%" y="661" width="24.7498%" height="15" fill="rgb(206,192,2)" fg:x="38217399" fg:w="77592752"/><text x="12.4402%" y="671.50">core::iter::traits::iterator::Iterator:..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (77,592,752 samples, 24.75%)</title><rect x="12.1902%" y="645" width="24.7498%" height="15" fill="rgb(241,108,4)" fg:x="38217399" fg:w="77592752"/><text x="12.4402%" y="655.50">profile::internal::subtract_weighted_gr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,422,849 samples, 0.45%)</title><rect x="36.4862%" y="629" width="0.4538%" height="15" fill="rgb(247,173,49)" fg:x="114387302" fg:w="1422849"/><text x="36.7362%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,422,849 samples, 0.45%)</title><rect x="36.4862%" y="613" width="0.4538%" height="15" fill="rgb(224,114,35)" fg:x="114387302" fg:w="1422849"/><text x="36.7362%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,422,849 samples, 0.45%)</title><rect x="36.4862%" y="597" width="0.4538%" height="15" fill="rgb(245,159,27)" fg:x="114387302" fg:w="1422849"/><text x="36.7362%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="421" width="0.9849%" height="15" fill="rgb(245,172,44)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="405" width="0.9849%" height="15" fill="rgb(236,23,11)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="389" width="0.9849%" height="15" fill="rgb(205,117,38)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="373" width="0.9849%" height="15" fill="rgb(237,72,25)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="357" width="0.9849%" height="15" fill="rgb(244,70,9)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="341" width="0.9849%" height="15" fill="rgb(217,125,39)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="325" width="0.9849%" height="15" fill="rgb(235,36,10)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="309" width="0.9849%" height="15" fill="rgb(251,123,47)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="293" width="0.9849%" height="15" fill="rgb(221,13,13)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (3,087,731 samples, 0.98%)</title><rect x="36.9400%" y="277" width="0.9849%" height="15" fill="rgb(238,131,9)" fg:x="115810151" fg:w="3087731"/><text x="37.1900%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,237,343 samples, 1.03%)</title><rect x="37.9249%" y="373" width="1.0326%" height="15" fill="rgb(211,50,8)" fg:x="118897882" fg:w="3237343"/><text x="38.1749%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,237,343 samples, 1.03%)</title><rect x="37.9249%" y="357" width="1.0326%" height="15" fill="rgb(245,182,24)" fg:x="118897882" fg:w="3237343"/><text x="38.1749%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3,237,343 samples, 1.03%)</title><rect x="37.9249%" y="341" width="1.0326%" height="15" fill="rgb(242,14,37)" fg:x="118897882" fg:w="3237343"/><text x="38.1749%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3,237,343 samples, 1.03%)</title><rect x="37.9249%" y="325" width="1.0326%" height="15" fill="rgb(246,228,12)" fg:x="118897882" fg:w="3237343"/><text x="38.1749%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="821" width="7.9432%" height="15" fill="rgb(213,55,15)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="831.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="805" width="7.9432%" height="15" fill="rgb(209,9,3)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="815.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="789" width="7.9432%" height="15" fill="rgb(230,59,30)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="799.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="773" width="7.9432%" height="15" fill="rgb(209,121,21)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="783.50">rayon::iter..</text></g><g><title>rayon_core::join::join_context (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="757" width="7.9432%" height="15" fill="rgb(220,109,13)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="767.50">rayon_core:..</text></g><g><title>rayon_core::registry::in_worker (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="741" width="7.9432%" height="15" fill="rgb(232,18,1)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="751.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="725" width="7.9432%" height="15" fill="rgb(215,41,42)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="735.50">rayon_core:..</text></g><g><title>rayon_core::unwind::halt_unwinding (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="709" width="7.9432%" height="15" fill="rgb(224,123,36)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="719.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="693" width="7.9432%" height="15" fill="rgb(240,125,3)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="703.50">std::panic:..</text></g><g><title>std::panicking::try (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="677" width="7.9432%" height="15" fill="rgb(205,98,50)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="687.50">std::panick..</text></g><g><title>std::panicking::try::do_call (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="661" width="7.9432%" height="15" fill="rgb(205,185,37)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="671.50">std::panick..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="645" width="7.9432%" height="15" fill="rgb(238,207,15)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="655.50">&lt;core::pani..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="629" width="7.9432%" height="15" fill="rgb(213,199,42)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="639.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="613" width="7.9432%" height="15" fill="rgb(235,201,11)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="623.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="597" width="7.9432%" height="15" fill="rgb(207,46,11)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="607.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="581" width="7.9432%" height="15" fill="rgb(241,35,35)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="591.50">rayon::iter..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="565" width="7.9432%" height="15" fill="rgb(243,32,47)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="575.50">&lt;rayon::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="549" width="7.9432%" height="15" fill="rgb(247,202,23)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="559.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="533" width="7.9432%" height="15" fill="rgb(219,102,11)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="543.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="517" width="7.9432%" height="15" fill="rgb(243,110,44)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="527.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="501" width="7.9432%" height="15" fill="rgb(222,74,54)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="511.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="485" width="7.9432%" height="15" fill="rgb(216,99,12)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="495.50">core::iter:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="469" width="7.9432%" height="15" fill="rgb(226,22,26)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="479.50">core::ops::..</text></g><g><title>profile::demean_impl::_{{closure}} (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="453" width="7.9432%" height="15" fill="rgb(217,163,10)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="463.50">profile::de..</text></g><g><title>profile::internal::subtract_weighted_group_mean (24,902,540 samples, 7.94%)</title><rect x="36.9400%" y="437" width="7.9432%" height="15" fill="rgb(213,25,53)" fg:x="115810151" fg:w="24902540"/><text x="37.1900%" y="447.50">profile::in..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (21,814,809 samples, 6.96%)</title><rect x="37.9249%" y="421" width="6.9583%" height="15" fill="rgb(252,105,26)" fg:x="118897882" fg:w="21814809"/><text x="38.1749%" y="431.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21,814,809 samples, 6.96%)</title><rect x="37.9249%" y="405" width="6.9583%" height="15" fill="rgb(220,39,43)" fg:x="118897882" fg:w="21814809"/><text x="38.1749%" y="415.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (21,814,809 samples, 6.96%)</title><rect x="37.9249%" y="389" width="6.9583%" height="15" fill="rgb(229,68,48)" fg:x="118897882" fg:w="21814809"/><text x="38.1749%" y="399.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (18,577,466 samples, 5.93%)</title><rect x="38.9575%" y="373" width="5.9257%" height="15" fill="rgb(252,8,32)" fg:x="122135225" fg:w="18577466"/><text x="39.2075%" y="383.50">core::it..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (18,577,466 samples, 5.93%)</title><rect x="38.9575%" y="357" width="5.9257%" height="15" fill="rgb(223,20,43)" fg:x="122135225" fg:w="18577466"/><text x="39.2075%" y="367.50">profile:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3,402,538 samples, 1.09%)</title><rect x="43.7979%" y="341" width="1.0853%" height="15" fill="rgb(229,81,49)" fg:x="137310153" fg:w="3402538"/><text x="44.0479%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3,402,538 samples, 1.09%)</title><rect x="43.7979%" y="325" width="1.0853%" height="15" fill="rgb(236,28,36)" fg:x="137310153" fg:w="3402538"/><text x="44.0479%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,402,538 samples, 1.09%)</title><rect x="43.7979%" y="309" width="1.0853%" height="15" fill="rgb(249,185,26)" fg:x="137310153" fg:w="3402538"/><text x="44.0479%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (775,305 samples, 0.25%)</title><rect x="44.8832%" y="389" width="0.2473%" height="15" fill="rgb(249,174,33)" fg:x="140712691" fg:w="775305"/><text x="45.1332%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (775,305 samples, 0.25%)</title><rect x="44.8832%" y="373" width="0.2473%" height="15" fill="rgb(233,201,37)" fg:x="140712691" fg:w="775305"/><text x="45.1332%" y="383.50"></text></g><g><title>core::ptr::write (775,305 samples, 0.25%)</title><rect x="44.8832%" y="357" width="0.2473%" height="15" fill="rgb(221,78,26)" fg:x="140712691" fg:w="775305"/><text x="45.1332%" y="367.50"></text></g><g><title>[unknown] (775,305 samples, 0.25%)</title><rect x="44.8832%" y="341" width="0.2473%" height="15" fill="rgb(250,127,30)" fg:x="140712691" fg:w="775305"/><text x="45.1332%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,728,752 samples, 0.55%)</title><rect x="44.8832%" y="421" width="0.5514%" height="15" fill="rgb(230,49,44)" fg:x="140712691" fg:w="1728752"/><text x="45.1332%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,728,752 samples, 0.55%)</title><rect x="44.8832%" y="405" width="0.5514%" height="15" fill="rgb(229,67,23)" fg:x="140712691" fg:w="1728752"/><text x="45.1332%" y="415.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (953,447 samples, 0.30%)</title><rect x="45.1305%" y="389" width="0.3041%" height="15" fill="rgb(249,83,47)" fg:x="141487996" fg:w="953447"/><text x="45.3805%" y="399.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1,137,199 samples, 0.36%)</title><rect x="45.4346%" y="357" width="0.3627%" height="15" fill="rgb(215,43,3)" fg:x="142441443" fg:w="1137199"/><text x="45.6846%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5,514,993 samples, 1.76%)</title><rect x="45.4346%" y="389" width="1.7591%" height="15" fill="rgb(238,154,13)" fg:x="142441443" fg:w="5514993"/><text x="45.6846%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (5,514,993 samples, 1.76%)</title><rect x="45.4346%" y="373" width="1.7591%" height="15" fill="rgb(219,56,2)" fg:x="142441443" fg:w="5514993"/><text x="45.6846%" y="383.50"></text></g><g><title>core::ptr::write (4,377,794 samples, 1.40%)</title><rect x="45.7973%" y="357" width="1.3964%" height="15" fill="rgb(233,0,4)" fg:x="143578642" fg:w="4377794"/><text x="46.0473%" y="367.50"></text></g><g><title>[unknown] (501,504 samples, 0.16%)</title><rect x="47.0338%" y="341" width="0.1600%" height="15" fill="rgb(235,30,7)" fg:x="147454932" fg:w="501504"/><text x="47.2838%" y="351.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (501,504 samples, 0.16%)</title><rect x="47.1937%" y="357" width="0.1600%" height="15" fill="rgb(250,79,13)" fg:x="147956436" fg:w="501504"/><text x="47.4437%" y="367.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (501,504 samples, 0.16%)</title><rect x="47.1937%" y="341" width="0.1600%" height="15" fill="rgb(211,146,34)" fg:x="147956436" fg:w="501504"/><text x="47.4437%" y="351.50"></text></g><g><title>ndarray::dimension::stride_offset (501,504 samples, 0.16%)</title><rect x="47.1937%" y="325" width="0.1600%" height="15" fill="rgb(228,22,38)" fg:x="147956436" fg:w="501504"/><text x="47.4437%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,303,320 samples, 2.65%)</title><rect x="44.8832%" y="549" width="2.6485%" height="15" fill="rgb(235,168,5)" fg:x="140712691" fg:w="8303320"/><text x="45.1332%" y="559.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,303,320 samples, 2.65%)</title><rect x="44.8832%" y="533" width="2.6485%" height="15" fill="rgb(221,155,16)" fg:x="140712691" fg:w="8303320"/><text x="45.1332%" y="543.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,303,320 samples, 2.65%)</title><rect x="44.8832%" y="517" width="2.6485%" height="15" fill="rgb(215,215,53)" fg:x="140712691" fg:w="8303320"/><text x="45.1332%" y="527.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8,303,320 samples, 2.65%)</title><rect x="44.8832%" y="501" width="2.6485%" height="15" fill="rgb(223,4,10)" fg:x="140712691" fg:w="8303320"/><text x="45.1332%" y="511.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8,303,320 samples, 2.65%)</title><rect x="44.8832%" y="485" width="2.6485%" height="15" fill="rgb(234,103,6)" fg:x="140712691" fg:w="8303320"/><text x="45.1332%" y="495.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (8,303,320 samples, 2.65%)</title><rect x="44.8832%" y="469" width="2.6485%" height="15" fill="rgb(227,97,0)" fg:x="140712691" fg:w="8303320"/><text x="45.1332%" y="479.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8,303,320 samples, 2.65%)</title><rect x="44.8832%" y="453" width="2.6485%" height="15" fill="rgb(234,150,53)" fg:x="140712691" fg:w="8303320"/><text x="45.1332%" y="463.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,303,320 samples, 2.65%)</title><rect x="44.8832%" y="437" width="2.6485%" height="15" fill="rgb(228,201,54)" fg:x="140712691" fg:w="8303320"/><text x="45.1332%" y="447.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6,574,568 samples, 2.10%)</title><rect x="45.4346%" y="421" width="2.0971%" height="15" fill="rgb(222,22,37)" fg:x="142441443" fg:w="6574568"/><text x="45.6846%" y="431.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,574,568 samples, 2.10%)</title><rect x="45.4346%" y="405" width="2.0971%" height="15" fill="rgb(237,53,32)" fg:x="142441443" fg:w="6574568"/><text x="45.6846%" y="415.50">c..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (1,059,575 samples, 0.34%)</title><rect x="47.1937%" y="389" width="0.3380%" height="15" fill="rgb(233,25,53)" fg:x="147956436" fg:w="1059575"/><text x="47.4437%" y="399.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (1,059,575 samples, 0.34%)</title><rect x="47.1937%" y="373" width="0.3380%" height="15" fill="rgb(210,40,34)" fg:x="147956436" fg:w="1059575"/><text x="47.4437%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (558,071 samples, 0.18%)</title><rect x="47.3537%" y="357" width="0.1780%" height="15" fill="rgb(241,220,44)" fg:x="148457940" fg:w="558071"/><text x="47.6037%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,101,817 samples, 0.67%)</title><rect x="47.5317%" y="485" width="0.6704%" height="15" fill="rgb(235,28,35)" fg:x="149016011" fg:w="2101817"/><text x="47.7817%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,101,817 samples, 0.67%)</title><rect x="47.5317%" y="469" width="0.6704%" height="15" fill="rgb(210,56,17)" fg:x="149016011" fg:w="2101817"/><text x="47.7817%" y="479.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2,101,817 samples, 0.67%)</title><rect x="47.5317%" y="453" width="0.6704%" height="15" fill="rgb(224,130,29)" fg:x="149016011" fg:w="2101817"/><text x="47.7817%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2,101,817 samples, 0.67%)</title><rect x="47.5317%" y="437" width="0.6704%" height="15" fill="rgb(235,212,8)" fg:x="149016011" fg:w="2101817"/><text x="47.7817%" y="447.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="693" width="9.7370%" height="15" fill="rgb(223,33,50)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="703.50">rayon::iter::p..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="677" width="9.7370%" height="15" fill="rgb(219,149,13)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="687.50">&lt;rayon::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="661" width="9.7370%" height="15" fill="rgb(250,156,29)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="671.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="645" width="9.7370%" height="15" fill="rgb(216,193,19)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="655.50">&lt;core::iter::a..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="629" width="9.7370%" height="15" fill="rgb(216,135,14)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="639.50">&lt;core::iter::a..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="613" width="9.7370%" height="15" fill="rgb(241,47,5)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="623.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="597" width="9.7370%" height="15" fill="rgb(233,42,35)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="607.50">core::iter::tr..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="581" width="9.7370%" height="15" fill="rgb(231,13,6)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="591.50">core::ops::fun..</text></g><g><title>profile::demean_impl::_{{closure}} (30,526,243 samples, 9.74%)</title><rect x="44.8832%" y="565" width="9.7370%" height="15" fill="rgb(207,181,40)" fg:x="140712691" fg:w="30526243"/><text x="45.1332%" y="575.50">profile::demea..</text></g><g><title>profile::internal::subtract_weighted_group_mean (22,222,923 samples, 7.09%)</title><rect x="47.5317%" y="549" width="7.0885%" height="15" fill="rgb(254,173,49)" fg:x="149016011" fg:w="22222923"/><text x="47.7817%" y="559.50">profile::i..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22,222,923 samples, 7.09%)</title><rect x="47.5317%" y="533" width="7.0885%" height="15" fill="rgb(221,1,38)" fg:x="149016011" fg:w="22222923"/><text x="47.7817%" y="543.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,222,923 samples, 7.09%)</title><rect x="47.5317%" y="517" width="7.0885%" height="15" fill="rgb(206,124,46)" fg:x="149016011" fg:w="22222923"/><text x="47.7817%" y="527.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (22,222,923 samples, 7.09%)</title><rect x="47.5317%" y="501" width="7.0885%" height="15" fill="rgb(249,21,11)" fg:x="149016011" fg:w="22222923"/><text x="47.7817%" y="511.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (20,121,106 samples, 6.42%)</title><rect x="48.2021%" y="485" width="6.4180%" height="15" fill="rgb(222,201,40)" fg:x="151117828" fg:w="20121106"/><text x="48.4521%" y="495.50">core::it..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (20,121,106 samples, 6.42%)</title><rect x="48.2021%" y="469" width="6.4180%" height="15" fill="rgb(235,61,29)" fg:x="151117828" fg:w="20121106"/><text x="48.4521%" y="479.50">profile:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2,824,883 samples, 0.90%)</title><rect x="53.7191%" y="453" width="0.9011%" height="15" fill="rgb(219,207,3)" fg:x="168414051" fg:w="2824883"/><text x="53.9691%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2,824,883 samples, 0.90%)</title><rect x="53.7191%" y="437" width="0.9011%" height="15" fill="rgb(222,56,46)" fg:x="168414051" fg:w="2824883"/><text x="53.9691%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,824,883 samples, 0.90%)</title><rect x="53.7191%" y="421" width="0.9011%" height="15" fill="rgb(239,76,54)" fg:x="168414051" fg:w="2824883"/><text x="53.9691%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="373" width="0.4067%" height="15" fill="rgb(231,124,27)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="357" width="0.4067%" height="15" fill="rgb(249,195,6)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="341" width="0.4067%" height="15" fill="rgb(237,174,47)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="325" width="0.4067%" height="15" fill="rgb(206,201,31)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="309" width="0.4067%" height="15" fill="rgb(231,57,52)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="293" width="0.4067%" height="15" fill="rgb(248,177,22)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="277" width="0.4067%" height="15" fill="rgb(215,211,37)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="261" width="0.4067%" height="15" fill="rgb(241,128,51)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="245" width="0.4067%" height="15" fill="rgb(227,165,31)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="229" width="0.4067%" height="15" fill="rgb(228,167,24)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="213" width="0.4067%" height="15" fill="rgb(228,143,12)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="197" width="0.4067%" height="15" fill="rgb(249,149,8)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="207.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1,275,072 samples, 0.41%)</title><rect x="54.6201%" y="181" width="0.4067%" height="15" fill="rgb(243,35,44)" fg:x="171238934" fg:w="1275072"/><text x="54.8701%" y="191.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (10,916,492 samples, 3.48%)</title><rect x="55.0269%" y="373" width="3.4820%" height="15" fill="rgb(246,89,9)" fg:x="172514006" fg:w="10916492"/><text x="55.2769%" y="383.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (10,916,492 samples, 3.48%)</title><rect x="55.0269%" y="357" width="3.4820%" height="15" fill="rgb(233,213,13)" fg:x="172514006" fg:w="10916492"/><text x="55.2769%" y="367.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (10,916,492 samples, 3.48%)</title><rect x="55.0269%" y="341" width="3.4820%" height="15" fill="rgb(233,141,41)" fg:x="172514006" fg:w="10916492"/><text x="55.2769%" y="351.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (10,916,492 samples, 3.48%)</title><rect x="55.0269%" y="325" width="3.4820%" height="15" fill="rgb(239,167,4)" fg:x="172514006" fg:w="10916492"/><text x="55.2769%" y="335.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (10,916,492 samples, 3.48%)</title><rect x="55.0269%" y="309" width="3.4820%" height="15" fill="rgb(209,217,16)" fg:x="172514006" fg:w="10916492"/><text x="55.2769%" y="319.50">nda..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (10,916,492 samples, 3.48%)</title><rect x="55.0269%" y="293" width="3.4820%" height="15" fill="rgb(219,88,35)" fg:x="172514006" fg:w="10916492"/><text x="55.2769%" y="303.50">nda..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (10,916,492 samples, 3.48%)</title><rect x="55.0269%" y="277" width="3.4820%" height="15" fill="rgb(220,193,23)" fg:x="172514006" fg:w="10916492"/><text x="55.2769%" y="287.50">pro..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,300,188 samples, 1.05%)</title><rect x="58.5089%" y="309" width="1.0527%" height="15" fill="rgb(230,90,52)" fg:x="183430498" fg:w="3300188"/><text x="58.7589%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,300,188 samples, 1.05%)</title><rect x="58.5089%" y="293" width="1.0527%" height="15" fill="rgb(252,106,19)" fg:x="183430498" fg:w="3300188"/><text x="58.7589%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3,300,188 samples, 1.05%)</title><rect x="58.5089%" y="277" width="1.0527%" height="15" fill="rgb(206,74,20)" fg:x="183430498" fg:w="3300188"/><text x="58.7589%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3,300,188 samples, 1.05%)</title><rect x="58.5089%" y="261" width="1.0527%" height="15" fill="rgb(230,138,44)" fg:x="183430498" fg:w="3300188"/><text x="58.7589%" y="271.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (182,264,836 samples, 58.14%)</title><rect x="4.0125%" y="917" width="58.1371%" height="15" fill="rgb(235,182,43)" fg:x="12579445" fg:w="182264836"/><text x="4.2625%" y="927.50">rayon_core::join::join_context::call_b::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (182,264,836 samples, 58.14%)</title><rect x="4.0125%" y="901" width="58.1371%" height="15" fill="rgb(242,16,51)" fg:x="12579445" fg:w="182264836"/><text x="4.2625%" y="911.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (182,264,836 samples, 58.14%)</title><rect x="4.0125%" y="885" width="58.1371%" height="15" fill="rgb(248,9,4)" fg:x="12579445" fg:w="182264836"/><text x="4.2625%" y="895.50">rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>rayon_core::join::join_context (79,034,130 samples, 25.21%)</title><rect x="36.9400%" y="869" width="25.2095%" height="15" fill="rgb(210,31,22)" fg:x="115810151" fg:w="79034130"/><text x="37.1900%" y="879.50">rayon_core::join::join_context</text></g><g><title>rayon_core::registry::in_worker (79,034,130 samples, 25.21%)</title><rect x="36.9400%" y="853" width="25.2095%" height="15" fill="rgb(239,54,39)" fg:x="115810151" fg:w="79034130"/><text x="37.1900%" y="863.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::join::join_context::_{{closure}} (79,034,130 samples, 25.21%)</title><rect x="36.9400%" y="837" width="25.2095%" height="15" fill="rgb(230,99,41)" fg:x="115810151" fg:w="79034130"/><text x="37.1900%" y="847.50">rayon_core::join::join_context::_{{closu..</text></g><g><title>rayon_core::unwind::halt_unwinding (54,131,590 samples, 17.27%)</title><rect x="44.8832%" y="821" width="17.2664%" height="15" fill="rgb(253,106,12)" fg:x="140712691" fg:w="54131590"/><text x="45.1332%" y="831.50">rayon_core::unwind::halt_un..</text></g><g><title>std::panic::catch_unwind (54,131,590 samples, 17.27%)</title><rect x="44.8832%" y="805" width="17.2664%" height="15" fill="rgb(213,46,41)" fg:x="140712691" fg:w="54131590"/><text x="45.1332%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (54,131,590 samples, 17.27%)</title><rect x="44.8832%" y="789" width="17.2664%" height="15" fill="rgb(215,133,35)" fg:x="140712691" fg:w="54131590"/><text x="45.1332%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (54,131,590 samples, 17.27%)</title><rect x="44.8832%" y="773" width="17.2664%" height="15" fill="rgb(213,28,5)" fg:x="140712691" fg:w="54131590"/><text x="45.1332%" y="783.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54,131,590 samples, 17.27%)</title><rect x="44.8832%" y="757" width="17.2664%" height="15" fill="rgb(215,77,49)" fg:x="140712691" fg:w="54131590"/><text x="45.1332%" y="767.50">&lt;core::panic::unwind_safe::..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (54,131,590 samples, 17.27%)</title><rect x="44.8832%" y="741" width="17.2664%" height="15" fill="rgb(248,100,22)" fg:x="140712691" fg:w="54131590"/><text x="45.1332%" y="751.50">rayon_core::join::join_cont..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (54,131,590 samples, 17.27%)</title><rect x="44.8832%" y="725" width="17.2664%" height="15" fill="rgb(208,67,9)" fg:x="140712691" fg:w="54131590"/><text x="45.1332%" y="735.50">rayon::iter::plumbing::brid..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (54,131,590 samples, 17.27%)</title><rect x="44.8832%" y="709" width="17.2664%" height="15" fill="rgb(219,133,21)" fg:x="140712691" fg:w="54131590"/><text x="45.1332%" y="719.50">rayon::iter::plumbing::brid..</text></g><g><title>rayon_core::join::join_context (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="693" width="7.5294%" height="15" fill="rgb(246,46,29)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="703.50">rayon_core..</text></g><g><title>rayon_core::registry::in_worker (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="677" width="7.5294%" height="15" fill="rgb(246,185,52)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="687.50">rayon_core..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="661" width="7.5294%" height="15" fill="rgb(252,136,11)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="671.50">rayon_core..</text></g><g><title>rayon_core::unwind::halt_unwinding (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="645" width="7.5294%" height="15" fill="rgb(219,138,53)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="655.50">rayon_core..</text></g><g><title>std::panic::catch_unwind (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="629" width="7.5294%" height="15" fill="rgb(211,51,23)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="639.50">std::panic..</text></g><g><title>std::panicking::try (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="613" width="7.5294%" height="15" fill="rgb(247,221,28)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="623.50">std::panic..</text></g><g><title>std::panicking::try::do_call (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="597" width="7.5294%" height="15" fill="rgb(251,222,45)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="607.50">std::panic..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="581" width="7.5294%" height="15" fill="rgb(217,162,53)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="591.50">&lt;core::pan..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="565" width="7.5294%" height="15" fill="rgb(229,93,14)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="575.50">rayon_core..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="549" width="7.5294%" height="15" fill="rgb(209,67,49)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="559.50">rayon::ite..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="533" width="7.5294%" height="15" fill="rgb(213,87,29)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="543.50">rayon::ite..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="517" width="7.5294%" height="15" fill="rgb(205,151,52)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="527.50">rayon::ite..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="501" width="7.5294%" height="15" fill="rgb(253,215,39)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="511.50">&lt;rayon::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="485" width="7.5294%" height="15" fill="rgb(221,220,41)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="495.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="469" width="7.5294%" height="15" fill="rgb(218,133,21)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="479.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="453" width="7.5294%" height="15" fill="rgb(221,193,43)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="463.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="437" width="7.5294%" height="15" fill="rgb(240,128,52)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="447.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="421" width="7.5294%" height="15" fill="rgb(253,114,12)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="431.50">core::iter..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="405" width="7.5294%" height="15" fill="rgb(215,223,47)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="415.50">core::ops:..</text></g><g><title>profile::demean_impl::_{{closure}} (23,605,347 samples, 7.53%)</title><rect x="54.6201%" y="389" width="7.5294%" height="15" fill="rgb(248,225,23)" fg:x="171238934" fg:w="23605347"/><text x="54.8701%" y="399.50">profile::d..</text></g><g><title>profile::internal::subtract_weighted_group_mean (11,413,783 samples, 3.64%)</title><rect x="58.5089%" y="373" width="3.6407%" height="15" fill="rgb(250,108,0)" fg:x="183430498" fg:w="11413783"/><text x="58.7589%" y="383.50">prof..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11,413,783 samples, 3.64%)</title><rect x="58.5089%" y="357" width="3.6407%" height="15" fill="rgb(228,208,7)" fg:x="183430498" fg:w="11413783"/><text x="58.7589%" y="367.50">core..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,413,783 samples, 3.64%)</title><rect x="58.5089%" y="341" width="3.6407%" height="15" fill="rgb(244,45,10)" fg:x="183430498" fg:w="11413783"/><text x="58.7589%" y="351.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (11,413,783 samples, 3.64%)</title><rect x="58.5089%" y="325" width="3.6407%" height="15" fill="rgb(207,125,25)" fg:x="183430498" fg:w="11413783"/><text x="58.7589%" y="335.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8,113,595 samples, 2.59%)</title><rect x="59.5616%" y="309" width="2.5880%" height="15" fill="rgb(210,195,18)" fg:x="186730686" fg:w="8113595"/><text x="59.8116%" y="319.50">co..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (8,113,595 samples, 2.59%)</title><rect x="59.5616%" y="293" width="2.5880%" height="15" fill="rgb(249,80,12)" fg:x="186730686" fg:w="8113595"/><text x="59.8116%" y="303.50">pr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3,505,090 samples, 1.12%)</title><rect x="61.0315%" y="277" width="1.1180%" height="15" fill="rgb(221,65,9)" fg:x="191339191" fg:w="3505090"/><text x="61.2815%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3,505,090 samples, 1.12%)</title><rect x="61.0315%" y="261" width="1.1180%" height="15" fill="rgb(235,49,36)" fg:x="191339191" fg:w="3505090"/><text x="61.2815%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,505,090 samples, 1.12%)</title><rect x="61.0315%" y="245" width="1.1180%" height="15" fill="rgb(225,32,20)" fg:x="191339191" fg:w="3505090"/><text x="61.2815%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,486,874 samples, 0.47%)</title><rect x="62.1495%" y="133" width="0.4743%" height="15" fill="rgb(215,141,46)" fg:x="194844281" fg:w="1486874"/><text x="62.3995%" y="143.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,486,874 samples, 0.47%)</title><rect x="62.1495%" y="117" width="0.4743%" height="15" fill="rgb(250,160,47)" fg:x="194844281" fg:w="1486874"/><text x="62.3995%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,486,874 samples, 0.47%)</title><rect x="62.1495%" y="101" width="0.4743%" height="15" fill="rgb(216,222,40)" fg:x="194844281" fg:w="1486874"/><text x="62.3995%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1,486,874 samples, 0.47%)</title><rect x="62.1495%" y="85" width="0.4743%" height="15" fill="rgb(234,217,39)" fg:x="194844281" fg:w="1486874"/><text x="62.3995%" y="95.50"></text></g><g><title>core::ptr::write (1,486,874 samples, 0.47%)</title><rect x="62.1495%" y="69" width="0.4743%" height="15" fill="rgb(207,178,40)" fg:x="194844281" fg:w="1486874"/><text x="62.3995%" y="79.50"></text></g><g><title>[unknown] (1,486,874 samples, 0.47%)</title><rect x="62.1495%" y="53" width="0.4743%" height="15" fill="rgb(221,136,13)" fg:x="194844281" fg:w="1486874"/><text x="62.3995%" y="63.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,785,377 samples, 1.53%)</title><rect x="62.6238%" y="101" width="1.5264%" height="15" fill="rgb(249,199,10)" fg:x="196331155" fg:w="4785377"/><text x="62.8738%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (4,785,377 samples, 1.53%)</title><rect x="62.6238%" y="85" width="1.5264%" height="15" fill="rgb(249,222,13)" fg:x="196331155" fg:w="4785377"/><text x="62.8738%" y="95.50"></text></g><g><title>core::ptr::write (4,785,377 samples, 1.53%)</title><rect x="62.6238%" y="69" width="1.5264%" height="15" fill="rgb(244,185,38)" fg:x="196331155" fg:w="4785377"/><text x="62.8738%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7,602,907 samples, 2.43%)</title><rect x="62.1495%" y="261" width="2.4251%" height="15" fill="rgb(236,202,9)" fg:x="194844281" fg:w="7602907"/><text x="62.3995%" y="271.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7,602,907 samples, 2.43%)</title><rect x="62.1495%" y="245" width="2.4251%" height="15" fill="rgb(250,229,37)" fg:x="194844281" fg:w="7602907"/><text x="62.3995%" y="255.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,602,907 samples, 2.43%)</title><rect x="62.1495%" y="229" width="2.4251%" height="15" fill="rgb(206,174,23)" fg:x="194844281" fg:w="7602907"/><text x="62.3995%" y="239.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7,602,907 samples, 2.43%)</title><rect x="62.1495%" y="213" width="2.4251%" height="15" fill="rgb(211,33,43)" fg:x="194844281" fg:w="7602907"/><text x="62.3995%" y="223.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7,602,907 samples, 2.43%)</title><rect x="62.1495%" y="197" width="2.4251%" height="15" fill="rgb(245,58,50)" fg:x="194844281" fg:w="7602907"/><text x="62.3995%" y="207.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (7,602,907 samples, 2.43%)</title><rect x="62.1495%" y="181" width="2.4251%" height="15" fill="rgb(244,68,36)" fg:x="194844281" fg:w="7602907"/><text x="62.3995%" y="191.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7,602,907 samples, 2.43%)</title><rect x="62.1495%" y="165" width="2.4251%" height="15" fill="rgb(232,229,15)" fg:x="194844281" fg:w="7602907"/><text x="62.3995%" y="175.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,602,907 samples, 2.43%)</title><rect x="62.1495%" y="149" width="2.4251%" height="15" fill="rgb(254,30,23)" fg:x="194844281" fg:w="7602907"/><text x="62.3995%" y="159.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6,116,033 samples, 1.95%)</title><rect x="62.6238%" y="133" width="1.9508%" height="15" fill="rgb(235,160,14)" fg:x="196331155" fg:w="6116033"/><text x="62.8738%" y="143.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6,116,033 samples, 1.95%)</title><rect x="62.6238%" y="117" width="1.9508%" height="15" fill="rgb(212,155,44)" fg:x="196331155" fg:w="6116033"/><text x="62.8738%" y="127.50">c..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (1,330,656 samples, 0.42%)</title><rect x="64.1502%" y="101" width="0.4244%" height="15" fill="rgb(226,2,50)" fg:x="201116532" fg:w="1330656"/><text x="64.4002%" y="111.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (1,330,656 samples, 0.42%)</title><rect x="64.1502%" y="85" width="0.4244%" height="15" fill="rgb(234,177,6)" fg:x="201116532" fg:w="1330656"/><text x="64.4002%" y="95.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (1,330,656 samples, 0.42%)</title><rect x="64.1502%" y="69" width="0.4244%" height="15" fill="rgb(217,24,9)" fg:x="201116532" fg:w="1330656"/><text x="64.4002%" y="79.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (1,330,656 samples, 0.42%)</title><rect x="64.1502%" y="53" width="0.4244%" height="15" fill="rgb(220,13,46)" fg:x="201116532" fg:w="1330656"/><text x="64.4002%" y="63.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="245" width="0.4937%" height="15" fill="rgb(239,221,27)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="229" width="0.4937%" height="15" fill="rgb(222,198,25)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="213" width="0.4937%" height="15" fill="rgb(211,99,13)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="197" width="0.4937%" height="15" fill="rgb(232,111,31)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="181" width="0.4937%" height="15" fill="rgb(245,82,37)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="165" width="0.4937%" height="15" fill="rgb(227,149,46)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="149" width="0.4937%" height="15" fill="rgb(218,36,50)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="133" width="0.4937%" height="15" fill="rgb(226,80,48)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="117" width="0.4937%" height="15" fill="rgb(238,224,15)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="101" width="0.4937%" height="15" fill="rgb(241,136,10)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="85" width="0.4937%" height="15" fill="rgb(208,32,45)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="69" width="0.4937%" height="15" fill="rgb(207,135,9)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="53" width="0.4937%" height="15" fill="rgb(206,86,44)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="63.50"></text></g><g><title>core::ptr::write (1,547,776 samples, 0.49%)</title><rect x="64.5747%" y="37" width="0.4937%" height="15" fill="rgb(245,177,15)" fg:x="202447188" fg:w="1547776"/><text x="64.8247%" y="47.50"></text></g><g><title>[libc.so.6] (207,649,840 samples, 66.23%)</title><rect x="1.2458%" y="1381" width="66.2341%" height="15" fill="rgb(206,64,50)" fg:x="3905727" fg:w="207649840"/><text x="1.4958%" y="1391.50">[libc.so.6]</text></g><g><title>[libc.so.6] (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1365" width="63.4675%" height="15" fill="rgb(234,36,40)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1375.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1349" width="63.4675%" height="15" fill="rgb(213,64,8)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1359.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1333" width="63.4675%" height="15" fill="rgb(210,75,36)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1343.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1317" width="63.4675%" height="15" fill="rgb(229,88,21)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1327.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1301" width="63.4675%" height="15" fill="rgb(252,204,47)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1311.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1285" width="63.4675%" height="15" fill="rgb(208,77,27)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1295.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1269" width="63.4675%" height="15" fill="rgb(221,76,26)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1279.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1253" width="63.4675%" height="15" fill="rgb(225,139,18)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1263.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1237" width="63.4675%" height="15" fill="rgb(230,137,11)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1247.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1221" width="63.4675%" height="15" fill="rgb(212,28,1)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1231.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1205" width="63.4675%" height="15" fill="rgb(248,164,17)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1215.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1189" width="63.4675%" height="15" fill="rgb(222,171,42)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1199.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1173" width="63.4675%" height="15" fill="rgb(243,84,45)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1183.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}}</text></g><g><title>rayon_core::registry::ThreadBuilder::run (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1157" width="63.4675%" height="15" fill="rgb(252,49,23)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1167.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1141" width="63.4675%" height="15" fill="rgb(215,19,7)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1151.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1125" width="63.4675%" height="15" fill="rgb(238,81,41)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1135.50">rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1109" width="63.4675%" height="15" fill="rgb(210,199,37)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1119.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1093" width="63.4675%" height="15" fill="rgb(244,192,49)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1103.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::registry::WorkerThread::execute (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1077" width="63.4675%" height="15" fill="rgb(226,211,11)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1087.50">rayon_core::registry::WorkerThread::execute</text></g><g><title>rayon_core::job::JobRef::execute (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1061" width="63.4675%" height="15" fill="rgb(236,162,54)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1071.50">rayon_core::job::JobRef::execute</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1045" width="63.4675%" height="15" fill="rgb(220,229,9)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1055.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1029" width="63.4675%" height="15" fill="rgb(250,87,22)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1039.50">rayon_core::job::JobResult&lt;T&gt;::call</text></g><g><title>rayon_core::unwind::halt_unwinding (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="1013" width="63.4675%" height="15" fill="rgb(239,43,17)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1023.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="997" width="63.4675%" height="15" fill="rgb(231,177,25)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="981" width="63.4675%" height="15" fill="rgb(219,179,1)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="965" width="63.4675%" height="15" fill="rgb(238,219,53)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="975.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="949" width="63.4675%" height="15" fill="rgb(232,167,36)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="959.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (198,976,122 samples, 63.47%)</title><rect x="4.0125%" y="933" width="63.4675%" height="15" fill="rgb(244,19,51)" fg:x="12579445" fg:w="198976122"/><text x="4.2625%" y="943.50">rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}}</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="917" width="5.3304%" height="15" fill="rgb(224,6,22)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="927.50">rayon_c..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="901" width="5.3304%" height="15" fill="rgb(224,145,5)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="911.50">rayon_c..</text></g><g><title>rayon_core::unwind::halt_unwinding (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="885" width="5.3304%" height="15" fill="rgb(234,130,49)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="895.50">rayon_c..</text></g><g><title>std::panic::catch_unwind (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="869" width="5.3304%" height="15" fill="rgb(254,6,2)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="879.50">std::pa..</text></g><g><title>std::panicking::try (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="853" width="5.3304%" height="15" fill="rgb(208,96,46)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="863.50">std::pa..</text></g><g><title>std::panicking::try::do_call (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="837" width="5.3304%" height="15" fill="rgb(239,3,39)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="847.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="821" width="5.3304%" height="15" fill="rgb(233,210,1)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="831.50">&lt;core::..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="805" width="5.3304%" height="15" fill="rgb(244,137,37)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="815.50">rayon_c..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="789" width="5.3304%" height="15" fill="rgb(240,136,2)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="799.50">rayon::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="773" width="5.3304%" height="15" fill="rgb(239,18,37)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="783.50">rayon::..</text></g><g><title>rayon_core::join::join_context (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="757" width="5.3304%" height="15" fill="rgb(218,185,22)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="767.50">rayon_c..</text></g><g><title>rayon_core::registry::in_worker (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="741" width="5.3304%" height="15" fill="rgb(225,218,4)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="751.50">rayon_c..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="725" width="5.3304%" height="15" fill="rgb(230,182,32)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="735.50">rayon_c..</text></g><g><title>rayon_core::unwind::halt_unwinding (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="709" width="5.3304%" height="15" fill="rgb(242,56,43)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="719.50">rayon_c..</text></g><g><title>std::panic::catch_unwind (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="693" width="5.3304%" height="15" fill="rgb(233,99,24)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="703.50">std::pa..</text></g><g><title>std::panicking::try (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="677" width="5.3304%" height="15" fill="rgb(234,209,42)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="687.50">std::pa..</text></g><g><title>std::panicking::try::do_call (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="661" width="5.3304%" height="15" fill="rgb(227,7,12)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="671.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="645" width="5.3304%" height="15" fill="rgb(245,203,43)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="655.50">&lt;core::..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="629" width="5.3304%" height="15" fill="rgb(238,205,33)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="639.50">rayon_c..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="613" width="5.3304%" height="15" fill="rgb(231,56,7)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="623.50">rayon::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="597" width="5.3304%" height="15" fill="rgb(244,186,29)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="607.50">rayon::..</text></g><g><title>rayon_core::join::join_context (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="581" width="5.3304%" height="15" fill="rgb(234,111,31)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="591.50">rayon_c..</text></g><g><title>rayon_core::registry::in_worker (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="565" width="5.3304%" height="15" fill="rgb(241,149,10)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="575.50">rayon_c..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="549" width="5.3304%" height="15" fill="rgb(249,206,44)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="559.50">rayon_c..</text></g><g><title>rayon_core::unwind::halt_unwinding (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="533" width="5.3304%" height="15" fill="rgb(251,153,30)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="543.50">rayon_c..</text></g><g><title>std::panic::catch_unwind (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="517" width="5.3304%" height="15" fill="rgb(239,152,38)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="527.50">std::pa..</text></g><g><title>std::panicking::try (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="501" width="5.3304%" height="15" fill="rgb(249,139,47)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="511.50">std::pa..</text></g><g><title>std::panicking::try::do_call (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="485" width="5.3304%" height="15" fill="rgb(244,64,35)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="495.50">std::pa..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="469" width="5.3304%" height="15" fill="rgb(216,46,15)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="479.50">&lt;core::..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="453" width="5.3304%" height="15" fill="rgb(250,74,19)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="463.50">rayon_c..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="437" width="5.3304%" height="15" fill="rgb(249,42,33)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="447.50">rayon::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="421" width="5.3304%" height="15" fill="rgb(242,149,17)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="431.50">rayon::..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="405" width="5.3304%" height="15" fill="rgb(244,29,21)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="415.50">rayon::..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="389" width="5.3304%" height="15" fill="rgb(220,130,37)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="399.50">&lt;rayon:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="373" width="5.3304%" height="15" fill="rgb(211,67,2)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="383.50">core::i..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="357" width="5.3304%" height="15" fill="rgb(235,68,52)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="367.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="341" width="5.3304%" height="15" fill="rgb(246,142,3)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="351.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="325" width="5.3304%" height="15" fill="rgb(241,25,7)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="335.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="309" width="5.3304%" height="15" fill="rgb(242,119,39)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="319.50">core::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="293" width="5.3304%" height="15" fill="rgb(241,98,45)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="303.50">core::o..</text></g><g><title>profile::demean_impl::_{{closure}} (16,711,286 samples, 5.33%)</title><rect x="62.1495%" y="277" width="5.3304%" height="15" fill="rgb(254,28,30)" fg:x="194844281" fg:w="16711286"/><text x="62.3995%" y="287.50">profile..</text></g><g><title>profile::internal::subtract_weighted_group_mean (9,108,379 samples, 2.91%)</title><rect x="64.5747%" y="261" width="2.9053%" height="15" fill="rgb(241,142,54)" fg:x="202447188" fg:w="9108379"/><text x="64.8247%" y="271.50">pr..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7,560,603 samples, 2.41%)</title><rect x="65.0683%" y="245" width="2.4116%" height="15" fill="rgb(222,85,15)" fg:x="203994964" fg:w="7560603"/><text x="65.3183%" y="255.50">co..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,560,603 samples, 2.41%)</title><rect x="65.0683%" y="229" width="2.4116%" height="15" fill="rgb(210,85,47)" fg:x="203994964" fg:w="7560603"/><text x="65.3183%" y="239.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (7,560,603 samples, 2.41%)</title><rect x="65.0683%" y="213" width="2.4116%" height="15" fill="rgb(224,206,25)" fg:x="203994964" fg:w="7560603"/><text x="65.3183%" y="223.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7,560,603 samples, 2.41%)</title><rect x="65.0683%" y="197" width="2.4116%" height="15" fill="rgb(243,201,19)" fg:x="203994964" fg:w="7560603"/><text x="65.3183%" y="207.50">co..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (7,560,603 samples, 2.41%)</title><rect x="65.0683%" y="181" width="2.4116%" height="15" fill="rgb(236,59,4)" fg:x="203994964" fg:w="7560603"/><text x="65.3183%" y="191.50">pr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,717,090 samples, 0.55%)</title><rect x="66.9323%" y="165" width="0.5477%" height="15" fill="rgb(254,179,45)" fg:x="209838477" fg:w="1717090"/><text x="67.1823%" y="175.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,717,090 samples, 0.55%)</title><rect x="66.9323%" y="149" width="0.5477%" height="15" fill="rgb(226,14,10)" fg:x="209838477" fg:w="1717090"/><text x="67.1823%" y="159.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,717,090 samples, 0.55%)</title><rect x="66.9323%" y="133" width="0.5477%" height="15" fill="rgb(244,27,41)" fg:x="209838477" fg:w="1717090"/><text x="67.1823%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (43,609 samples, 0.01%)</title><rect x="67.4800%" y="1365" width="0.0139%" height="15" fill="rgb(235,35,32)" fg:x="211555567" fg:w="43609"/><text x="67.7300%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (43,609 samples, 0.01%)</title><rect x="67.4800%" y="1349" width="0.0139%" height="15" fill="rgb(218,68,31)" fg:x="211555567" fg:w="43609"/><text x="67.7300%" y="1359.50"></text></g><g><title>alloc::alloc::Global::grow_impl (43,609 samples, 0.01%)</title><rect x="67.4800%" y="1333" width="0.0139%" height="15" fill="rgb(207,120,37)" fg:x="211555567" fg:w="43609"/><text x="67.7300%" y="1343.50"></text></g><g><title>alloc::alloc::realloc (43,609 samples, 0.01%)</title><rect x="67.4800%" y="1317" width="0.0139%" height="15" fill="rgb(227,98,0)" fg:x="211555567" fg:w="43609"/><text x="67.7300%" y="1327.50"></text></g><g><title>__rustc::__rdl_realloc (43,609 samples, 0.01%)</title><rect x="67.4800%" y="1301" width="0.0139%" height="15" fill="rgb(207,7,3)" fg:x="211555567" fg:w="43609"/><text x="67.7300%" y="1311.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (43,609 samples, 0.01%)</title><rect x="67.4800%" y="1285" width="0.0139%" height="15" fill="rgb(206,98,19)" fg:x="211555567" fg:w="43609"/><text x="67.7300%" y="1295.50"></text></g><g><title>realloc (43,609 samples, 0.01%)</title><rect x="67.4800%" y="1269" width="0.0139%" height="15" fill="rgb(217,5,26)" fg:x="211555567" fg:w="43609"/><text x="67.7300%" y="1279.50"></text></g><g><title>[libc.so.6] (43,609 samples, 0.01%)</title><rect x="67.4800%" y="1253" width="0.0139%" height="15" fill="rgb(235,190,38)" fg:x="211555567" fg:w="43609"/><text x="67.7300%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::report::Report&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1365" width="0.0989%" height="15" fill="rgb(247,86,24)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;pprof::frames::Frames,isize&gt;&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1349" width="0.0989%" height="15" fill="rgb(205,101,16)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;pprof::frames::Frames,isize,std::hash::random::RandomState&gt;&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1333" width="0.0989%" height="15" fill="rgb(246,168,33)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(pprof::frames::Frames,isize)&gt;&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1317" width="0.0989%" height="15" fill="rgb(231,114,1)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1301" width="0.0989%" height="15" fill="rgb(207,184,53)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1285" width="0.0989%" height="15" fill="rgb(224,95,51)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1269" width="0.0989%" height="15" fill="rgb(212,188,45)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1279.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1253" width="0.0989%" height="15" fill="rgb(223,154,38)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1263.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1237" width="0.0989%" height="15" fill="rgb(251,22,52)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;(pprof::frames::Frames,isize)&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1221" width="0.0989%" height="15" fill="rgb(229,209,22)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::frames::Frames&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1205" width="0.0989%" height="15" fill="rgb(234,138,34)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;pprof::frames::Symbol&gt;&gt;&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1189" width="0.0989%" height="15" fill="rgb(212,95,11)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1173" width="0.0989%" height="15" fill="rgb(240,179,47)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;pprof::frames::Symbol&gt;]&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1157" width="0.0989%" height="15" fill="rgb(240,163,11)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pprof::frames::Symbol&gt;&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1141" width="0.0989%" height="15" fill="rgb(236,37,12)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1125" width="0.0989%" height="15" fill="rgb(232,164,16)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::frames::Symbol]&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1109" width="0.0989%" height="15" fill="rgb(244,205,15)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::frames::Symbol&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1093" width="0.0989%" height="15" fill="rgb(223,117,47)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;std::path::PathBuf&gt;&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1077" width="0.0989%" height="15" fill="rgb(244,107,35)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::path::PathBuf&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1061" width="0.0989%" height="15" fill="rgb(205,140,8)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::os_str::OsString&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1045" width="0.0989%" height="15" fill="rgb(228,84,46)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::os_str::bytes::Buf&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1029" width="0.0989%" height="15" fill="rgb(254,188,9)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="1013" width="0.0989%" height="15" fill="rgb(206,112,54)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (309,917 samples, 0.10%)</title><rect x="67.4939%" y="997" width="0.0989%" height="15" fill="rgb(216,84,49)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309,917 samples, 0.10%)</title><rect x="67.4939%" y="981" width="0.0989%" height="15" fill="rgb(214,194,35)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (309,917 samples, 0.10%)</title><rect x="67.4939%" y="965" width="0.0989%" height="15" fill="rgb(249,28,3)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (309,917 samples, 0.10%)</title><rect x="67.4939%" y="949" width="0.0989%" height="15" fill="rgb(222,56,52)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (309,917 samples, 0.10%)</title><rect x="67.4939%" y="933" width="0.0989%" height="15" fill="rgb(245,217,50)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="943.50"></text></g><g><title>__rustc::__rdl_dealloc (309,917 samples, 0.10%)</title><rect x="67.4939%" y="917" width="0.0989%" height="15" fill="rgb(213,201,24)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="927.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (309,917 samples, 0.10%)</title><rect x="67.4939%" y="901" width="0.0989%" height="15" fill="rgb(248,116,28)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="911.50"></text></g><g><title>cfree (309,917 samples, 0.10%)</title><rect x="67.4939%" y="885" width="0.0989%" height="15" fill="rgb(219,72,43)" fg:x="211599176" fg:w="309917"/><text x="67.7439%" y="895.50"></text></g><g><title>inferno::flamegraph::svg::write_str (89,344 samples, 0.03%)</title><rect x="67.5927%" y="1365" width="0.0285%" height="15" fill="rgb(209,138,14)" fg:x="211909093" fg:w="89344"/><text x="67.8427%" y="1375.50"></text></g><g><title>str_stack::StrStack::write_fmt (89,344 samples, 0.03%)</title><rect x="67.5927%" y="1349" width="0.0285%" height="15" fill="rgb(222,18,33)" fg:x="211909093" fg:w="89344"/><text x="67.8427%" y="1359.50"></text></g><g><title>core::fmt::Write::write_fmt (89,344 samples, 0.03%)</title><rect x="67.5927%" y="1333" width="0.0285%" height="15" fill="rgb(213,199,7)" fg:x="211909093" fg:w="89344"/><text x="67.8427%" y="1343.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (89,344 samples, 0.03%)</title><rect x="67.5927%" y="1317" width="0.0285%" height="15" fill="rgb(250,110,10)" fg:x="211909093" fg:w="89344"/><text x="67.8427%" y="1327.50"></text></g><g><title>[libc.so.6] (89,344 samples, 0.03%)</title><rect x="67.5927%" y="1301" width="0.0285%" height="15" fill="rgb(248,123,6)" fg:x="211909093" fg:w="89344"/><text x="67.8427%" y="1311.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1365" width="2.0883%" height="15" fill="rgb(206,91,31)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1375.50">p..</text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1349" width="2.0883%" height="15" fill="rgb(211,154,13)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1359.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1333" width="2.0883%" height="15" fill="rgb(225,148,7)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1343.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1317" width="2.0883%" height="15" fill="rgb(220,160,43)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1327.50">a..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1301" width="2.0883%" height="15" fill="rgb(213,52,39)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1311.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1285" width="2.0883%" height="15" fill="rgb(243,137,7)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1295.50">&lt;..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1269" width="2.0883%" height="15" fill="rgb(230,79,13)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1279.50">&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1253" width="2.0883%" height="15" fill="rgb(247,105,23)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1263.50">c..</text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1237" width="2.0883%" height="15" fill="rgb(223,179,41)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1247.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1221" width="2.0883%" height="15" fill="rgb(218,9,34)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1231.50">&lt;..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1205" width="2.0883%" height="15" fill="rgb(222,106,8)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1215.50">a..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1189" width="2.0883%" height="15" fill="rgb(211,220,0)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1199.50">a..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1173" width="2.0883%" height="15" fill="rgb(229,52,16)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1183.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1157" width="2.0883%" height="15" fill="rgb(212,155,18)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1167.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1141" width="2.0883%" height="15" fill="rgb(242,21,14)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1151.50">a..</text></g><g><title>alloc::alloc::alloc (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1125" width="2.0883%" height="15" fill="rgb(222,19,48)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1135.50">a..</text></g><g><title>__rustc::__rdl_alloc (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1109" width="2.0883%" height="15" fill="rgb(232,45,27)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1119.50">_..</text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1093" width="2.0883%" height="15" fill="rgb(249,103,42)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1103.50">s..</text></g><g><title>malloc (6,546,876 samples, 2.09%)</title><rect x="67.6212%" y="1077" width="2.0883%" height="15" fill="rgb(246,81,33)" fg:x="211998437" fg:w="6546876"/><text x="67.8712%" y="1087.50">m..</text></g><g><title>[libc.so.6] (5,740,054 samples, 1.83%)</title><rect x="67.8786%" y="1061" width="1.8309%" height="15" fill="rgb(252,33,42)" fg:x="212805259" fg:w="5740054"/><text x="68.1286%" y="1071.50">[..</text></g><g><title>__default_morecore (1,972,895 samples, 0.63%)</title><rect x="69.0802%" y="1045" width="0.6293%" height="15" fill="rgb(209,212,41)" fg:x="216572418" fg:w="1972895"/><text x="69.3302%" y="1055.50"></text></g><g><title>brk (1,574,742 samples, 0.50%)</title><rect x="69.2072%" y="1029" width="0.5023%" height="15" fill="rgb(207,154,6)" fg:x="216970571" fg:w="1574742"/><text x="69.4572%" y="1039.50"></text></g><g><title>[unknown] (1,574,742 samples, 0.50%)</title><rect x="69.2072%" y="1013" width="0.5023%" height="15" fill="rgb(223,64,47)" fg:x="216970571" fg:w="1574742"/><text x="69.4572%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::result::Result&lt;pprof::profiler::Profiler,pprof::error::Error&gt;&gt;&gt; (200,279 samples, 0.06%)</title><rect x="69.7095%" y="1253" width="0.0639%" height="15" fill="rgb(211,161,38)" fg:x="218545313" fg:w="200279"/><text x="69.9595%" y="1263.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (200,279 samples, 0.06%)</title><rect x="69.7095%" y="1237" width="0.0639%" height="15" fill="rgb(219,138,40)" fg:x="218545313" fg:w="200279"/><text x="69.9595%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (200,279 samples, 0.06%)</title><rect x="69.7095%" y="1221" width="0.0639%" height="15" fill="rgb(241,228,46)" fg:x="218545313" fg:w="200279"/><text x="69.9595%" y="1231.50"></text></g><g><title>[libc.so.6] (288,976 samples, 0.09%)</title><rect x="69.7095%" y="1285" width="0.0922%" height="15" fill="rgb(223,209,38)" fg:x="218545313" fg:w="288976"/><text x="69.9595%" y="1295.50"></text></g><g><title>perf_signal_handler (288,976 samples, 0.09%)</title><rect x="69.7095%" y="1269" width="0.0922%" height="15" fill="rgb(236,164,45)" fg:x="218545313" fg:w="288976"/><text x="69.9595%" y="1279.50"></text></g><g><title>pprof::profiler::Profiler::sample (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1253" width="0.0283%" height="15" fill="rgb(231,15,5)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1263.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::add (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1237" width="0.0283%" height="15" fill="rgb(252,35,15)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1247.50"></text></g><g><title>pprof::collector::HashCounter&lt;T&gt;::add (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1221" width="0.0283%" height="15" fill="rgb(248,181,18)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1231.50"></text></g><g><title>pprof::collector::Bucket&lt;T&gt;::add (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1205" width="0.0283%" height="15" fill="rgb(233,39,42)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1189" width="0.0283%" height="15" fill="rgb(238,110,33)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1199.50"></text></g><g><title>pprof::collector::Bucket&lt;T&gt;::add::_{{closure}} (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1173" width="0.0283%" height="15" fill="rgb(233,195,10)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1183.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::cmp::PartialEq&gt;::eq (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1157" width="0.0283%" height="15" fill="rgb(254,105,3)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1141" width="0.0283%" height="15" fill="rgb(221,225,9)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1125" width="0.0283%" height="15" fill="rgb(224,227,45)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1109" width="0.0283%" height="15" fill="rgb(229,198,43)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1119.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1093" width="0.0283%" height="15" fill="rgb(206,209,35)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1103.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::cmp::PartialEq&gt;::eq::_{{closure}} (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1077" width="0.0283%" height="15" fill="rgb(245,195,53)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1087.50"></text></g><g><title>backtrace::backtrace::Frame::symbol_address (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1061" width="0.0283%" height="15" fill="rgb(240,92,26)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1071.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (88,697 samples, 0.03%)</title><rect x="69.7734%" y="1045" width="0.0283%" height="15" fill="rgb(207,40,23)" fg:x="218745592" fg:w="88697"/><text x="70.0234%" y="1055.50"></text></g><g><title>[unknown] (7,319,371 samples, 2.33%)</title><rect x="67.4800%" y="1381" width="2.3347%" height="15" fill="rgb(223,111,35)" fg:x="211555567" fg:w="7319371"/><text x="67.7300%" y="1391.50">[..</text></g><g><title>std::io::Write::write_all (329,625 samples, 0.11%)</title><rect x="69.7095%" y="1365" width="0.1051%" height="15" fill="rgb(229,147,28)" fg:x="218545313" fg:w="329625"/><text x="69.9595%" y="1375.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (329,625 samples, 0.11%)</title><rect x="69.7095%" y="1349" width="0.1051%" height="15" fill="rgb(211,29,28)" fg:x="218545313" fg:w="329625"/><text x="69.9595%" y="1359.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (329,625 samples, 0.11%)</title><rect x="69.7095%" y="1333" width="0.1051%" height="15" fill="rgb(228,72,33)" fg:x="218545313" fg:w="329625"/><text x="69.9595%" y="1343.50"></text></g><g><title>std::sys::fs::unix::File::write (329,625 samples, 0.11%)</title><rect x="69.7095%" y="1317" width="0.1051%" height="15" fill="rgb(205,214,31)" fg:x="218545313" fg:w="329625"/><text x="69.9595%" y="1327.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (329,625 samples, 0.11%)</title><rect x="69.7095%" y="1301" width="0.1051%" height="15" fill="rgb(224,111,15)" fg:x="218545313" fg:w="329625"/><text x="69.9595%" y="1311.50"></text></g><g><title>write (40,649 samples, 0.01%)</title><rect x="69.8016%" y="1285" width="0.0130%" height="15" fill="rgb(253,21,26)" fg:x="218834289" fg:w="40649"/><text x="70.0516%" y="1295.50"></text></g><g><title>[unknown] (40,649 samples, 0.01%)</title><rect x="69.8016%" y="1269" width="0.0130%" height="15" fill="rgb(245,139,43)" fg:x="218834289" fg:w="40649"/><text x="70.0516%" y="1279.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.16%)</title><rect x="69.8146%" y="1317" width="0.1600%" height="15" fill="rgb(252,170,7)" fg:x="218874938" fg:w="501504"/><text x="70.0646%" y="1327.50"></text></g><g><title>fopen (501,504 samples, 0.16%)</title><rect x="69.8146%" y="1301" width="0.1600%" height="15" fill="rgb(231,118,14)" fg:x="218874938" fg:w="501504"/><text x="70.0646%" y="1311.50"></text></g><g><title>_IO_file_fopen (501,504 samples, 0.16%)</title><rect x="69.8146%" y="1285" width="0.1600%" height="15" fill="rgb(238,83,0)" fg:x="218874938" fg:w="501504"/><text x="70.0646%" y="1295.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.16%)</title><rect x="69.8146%" y="1269" width="0.1600%" height="15" fill="rgb(221,39,39)" fg:x="218874938" fg:w="501504"/><text x="70.0646%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Collector&lt;pprof::frames::UnresolvedFrames&gt;&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1205" width="0.6556%" height="15" fill="rgb(222,119,46)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::HashCounter&lt;pprof::frames::UnresolvedFrames&gt;&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1189" width="0.6556%" height="15" fill="rgb(222,165,49)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt;&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1173" width="0.6556%" height="15" fill="rgb(219,113,52)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1157" width="0.6556%" height="15" fill="rgb(214,7,15)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1141" width="0.6556%" height="15" fill="rgb(235,32,4)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt;&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1125" width="0.6556%" height="15" fill="rgb(238,90,54)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1109" width="0.6556%" height="15" fill="rgb(213,208,19)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1093" width="0.6556%" height="15" fill="rgb(233,156,4)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::frames::UnresolvedFrames&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1077" width="0.6556%" height="15" fill="rgb(207,194,5)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[backtrace::backtrace::Frame: 128]&gt;&gt; (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1061" width="0.6556%" height="15" fill="rgb(206,111,30)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1071.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2,055,278 samples, 0.66%)</title><rect x="69.9746%" y="1045" width="0.6556%" height="15" fill="rgb(243,70,54)" fg:x="219376442" fg:w="2055278"/><text x="70.2246%" y="1055.50"></text></g><g><title>[libc.so.6] (1,235,019 samples, 0.39%)</title><rect x="70.7532%" y="933" width="0.3939%" height="15" fill="rgb(242,28,8)" fg:x="221817474" fg:w="1235019"/><text x="71.0032%" y="943.50"></text></g><g><title>[unknown] (1,235,019 samples, 0.39%)</title><rect x="70.7532%" y="917" width="0.3939%" height="15" fill="rgb(219,106,18)" fg:x="221817474" fg:w="1235019"/><text x="71.0032%" y="927.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (2,312,668 samples, 0.74%)</title><rect x="70.7532%" y="1045" width="0.7377%" height="15" fill="rgb(244,222,10)" fg:x="221817474" fg:w="2312668"/><text x="71.0032%" y="1055.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (2,312,668 samples, 0.74%)</title><rect x="70.7532%" y="1029" width="0.7377%" height="15" fill="rgb(236,179,52)" fg:x="221817474" fg:w="2312668"/><text x="71.0032%" y="1039.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (2,312,668 samples, 0.74%)</title><rect x="70.7532%" y="1013" width="0.7377%" height="15" fill="rgb(213,23,39)" fg:x="221817474" fg:w="2312668"/><text x="71.0032%" y="1023.50"></text></g><g><title>std::time::SystemTime::now (2,312,668 samples, 0.74%)</title><rect x="70.7532%" y="997" width="0.7377%" height="15" fill="rgb(238,48,10)" fg:x="221817474" fg:w="2312668"/><text x="71.0032%" y="1007.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (2,312,668 samples, 0.74%)</title><rect x="70.7532%" y="981" width="0.7377%" height="15" fill="rgb(251,196,23)" fg:x="221817474" fg:w="2312668"/><text x="71.0032%" y="991.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2,312,668 samples, 0.74%)</title><rect x="70.7532%" y="965" width="0.7377%" height="15" fill="rgb(250,152,24)" fg:x="221817474" fg:w="2312668"/><text x="71.0032%" y="975.50"></text></g><g><title>clock_gettime (2,312,668 samples, 0.74%)</title><rect x="70.7532%" y="949" width="0.7377%" height="15" fill="rgb(209,150,17)" fg:x="221817474" fg:w="2312668"/><text x="71.0032%" y="959.50"></text></g><g><title>__vdso_clock_gettime (1,077,649 samples, 0.34%)</title><rect x="71.1471%" y="933" width="0.3437%" height="15" fill="rgb(234,202,34)" fg:x="223052493" fg:w="1077649"/><text x="71.3971%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::profiler::ProfilerGuard&gt; (14,171,812 samples, 4.52%)</title><rect x="69.9746%" y="1269" width="4.5204%" height="15" fill="rgb(253,148,53)" fg:x="219376442" fg:w="14171812"/><text x="70.2246%" y="1279.50">core:..</text></g><g><title>&lt;pprof::profiler::ProfilerGuard as core::ops::drop::Drop&gt;::drop (14,171,812 samples, 4.52%)</title><rect x="69.9746%" y="1253" width="4.5204%" height="15" fill="rgb(218,129,16)" fg:x="219376442" fg:w="14171812"/><text x="70.2246%" y="1263.50">&lt;ppro..</text></g><g><title>pprof::profiler::Profiler::stop (14,171,812 samples, 4.52%)</title><rect x="69.9746%" y="1237" width="4.5204%" height="15" fill="rgb(216,85,19)" fg:x="219376442" fg:w="14171812"/><text x="70.2246%" y="1247.50">pprof..</text></g><g><title>pprof::profiler::Profiler::init (14,171,812 samples, 4.52%)</title><rect x="69.9746%" y="1221" width="4.5204%" height="15" fill="rgb(235,228,7)" fg:x="219376442" fg:w="14171812"/><text x="70.2246%" y="1231.50">pprof..</text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (12,116,534 samples, 3.86%)</title><rect x="70.6302%" y="1205" width="3.8648%" height="15" fill="rgb(245,175,0)" fg:x="221431720" fg:w="12116534"/><text x="70.8802%" y="1215.50">ppro..</text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (12,116,534 samples, 3.86%)</title><rect x="70.6302%" y="1189" width="3.8648%" height="15" fill="rgb(208,168,36)" fg:x="221431720" fg:w="12116534"/><text x="70.8802%" y="1199.50">&lt;ppr..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (12,116,534 samples, 3.86%)</title><rect x="70.6302%" y="1173" width="3.8648%" height="15" fill="rgb(246,171,24)" fg:x="221431720" fg:w="12116534"/><text x="70.8802%" y="1183.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (12,116,534 samples, 3.86%)</title><rect x="70.6302%" y="1157" width="3.8648%" height="15" fill="rgb(215,142,24)" fg:x="221431720" fg:w="12116534"/><text x="70.8802%" y="1167.50">allo..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (12,116,534 samples, 3.86%)</title><rect x="70.6302%" y="1141" width="3.8648%" height="15" fill="rgb(250,187,7)" fg:x="221431720" fg:w="12116534"/><text x="70.8802%" y="1151.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (12,116,534 samples, 3.86%)</title><rect x="70.6302%" y="1125" width="3.8648%" height="15" fill="rgb(228,66,33)" fg:x="221431720" fg:w="12116534"/><text x="70.8802%" y="1135.50">&lt;cor..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12,116,534 samples, 3.86%)</title><rect x="70.6302%" y="1109" width="3.8648%" height="15" fill="rgb(234,215,21)" fg:x="221431720" fg:w="12116534"/><text x="70.8802%" y="1119.50">&lt;cor..</text></g><g><title>core::ops::function::FnMut::call_mut (11,730,780 samples, 3.74%)</title><rect x="70.7532%" y="1093" width="3.7418%" height="15" fill="rgb(222,191,20)" fg:x="221817474" fg:w="11730780"/><text x="71.0032%" y="1103.50">core..</text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (11,730,780 samples, 3.74%)</title><rect x="70.7532%" y="1077" width="3.7418%" height="15" fill="rgb(245,79,54)" fg:x="221817474" fg:w="11730780"/><text x="71.0032%" y="1087.50">&lt;ppr..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (11,730,780 samples, 3.74%)</title><rect x="70.7532%" y="1061" width="3.7418%" height="15" fill="rgb(240,10,37)" fg:x="221817474" fg:w="11730780"/><text x="71.0032%" y="1071.50">&lt;all..</text></g><g><title>core::ptr::write (9,418,112 samples, 3.00%)</title><rect x="71.4909%" y="1045" width="3.0041%" height="15" fill="rgb(214,192,32)" fg:x="224130142" fg:w="9418112"/><text x="71.7409%" y="1055.50">cor..</text></g><g><title>[unknown] (7,017,320 samples, 2.24%)</title><rect x="72.2567%" y="1029" width="2.2383%" height="15" fill="rgb(209,36,54)" fg:x="226530934" fg:w="7017320"/><text x="72.5067%" y="1039.50">[..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1,766,974 samples, 0.56%)</title><rect x="74.4950%" y="1221" width="0.5636%" height="15" fill="rgb(220,10,11)" fg:x="233548254" fg:w="1766974"/><text x="74.7450%" y="1231.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1,766,974 samples, 0.56%)</title><rect x="74.4950%" y="1205" width="0.5636%" height="15" fill="rgb(221,106,17)" fg:x="233548254" fg:w="1766974"/><text x="74.7450%" y="1215.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1,766,974 samples, 0.56%)</title><rect x="74.4950%" y="1189" width="0.5636%" height="15" fill="rgb(251,142,44)" fg:x="233548254" fg:w="1766974"/><text x="74.7450%" y="1199.50"></text></g><g><title>core::ptr::write (3,229,843 samples, 1.03%)</title><rect x="75.0586%" y="1205" width="1.0302%" height="15" fill="rgb(238,13,15)" fg:x="235315228" fg:w="3229843"/><text x="75.3086%" y="1215.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (1,607,558 samples, 0.51%)</title><rect x="76.5752%" y="949" width="0.5128%" height="15" fill="rgb(208,107,27)" fg:x="240069888" fg:w="1607558"/><text x="76.8252%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1,607,558 samples, 0.51%)</title><rect x="76.5752%" y="933" width="0.5128%" height="15" fill="rgb(205,136,37)" fg:x="240069888" fg:w="1607558"/><text x="76.8252%" y="943.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1,607,558 samples, 0.51%)</title><rect x="76.5752%" y="917" width="0.5128%" height="15" fill="rgb(250,205,27)" fg:x="240069888" fg:w="1607558"/><text x="76.8252%" y="927.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1,607,558 samples, 0.51%)</title><rect x="76.5752%" y="901" width="0.5128%" height="15" fill="rgb(210,80,43)" fg:x="240069888" fg:w="1607558"/><text x="76.8252%" y="911.50"></text></g><g><title>rand::rng::Rng::random (5,215,338 samples, 1.66%)</title><rect x="76.0888%" y="1189" width="1.6635%" height="15" fill="rgb(247,160,36)" fg:x="238545071" fg:w="5215338"/><text x="76.3388%" y="1199.50"></text></g><g><title>rand::distr::float::&lt;impl rand::distr::distribution::Distribution&lt;f64&gt; for rand::distr::StandardUniform&gt;::sample (5,215,338 samples, 1.66%)</title><rect x="76.0888%" y="1173" width="1.6635%" height="15" fill="rgb(234,13,49)" fg:x="238545071" fg:w="5215338"/><text x="76.3388%" y="1183.50"></text></g><g><title>rand::rng::Rng::random (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1157" width="1.1772%" height="15" fill="rgb(234,122,0)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1167.50"></text></g><g><title>rand::distr::integer::&lt;impl rand::distr::distribution::Distribution&lt;u64&gt; for rand::distr::StandardUniform&gt;::sample (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1141" width="1.1772%" height="15" fill="rgb(207,146,38)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1151.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1125" width="1.1772%" height="15" fill="rgb(207,177,25)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1135.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1109" width="1.1772%" height="15" fill="rgb(211,178,42)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1119.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1093" width="1.1772%" height="15" fill="rgb(230,69,54)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1103.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1077" width="1.1772%" height="15" fill="rgb(214,135,41)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1087.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1061" width="1.1772%" height="15" fill="rgb(237,67,25)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1071.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1045" width="1.1772%" height="15" fill="rgb(222,189,50)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1055.50"></text></g><g><title>rand_chacha::guts::refill_wide (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1029" width="1.1772%" height="15" fill="rgb(245,148,34)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1039.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="1013" width="1.1772%" height="15" fill="rgb(222,29,6)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1023.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="997" width="1.1772%" height="15" fill="rgb(221,189,43)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="1007.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="981" width="1.1772%" height="15" fill="rgb(207,36,27)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="991.50"></text></g><g><title>rand_chacha::guts::round (3,690,521 samples, 1.18%)</title><rect x="76.5752%" y="965" width="1.1772%" height="15" fill="rgb(217,90,24)" fg:x="240069888" fg:w="3690521"/><text x="76.8252%" y="975.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (2,082,963 samples, 0.66%)</title><rect x="77.0879%" y="949" width="0.6644%" height="15" fill="rgb(224,66,35)" fg:x="241677446" fg:w="2082963"/><text x="77.3379%" y="959.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (2,082,963 samples, 0.66%)</title><rect x="77.0879%" y="933" width="0.6644%" height="15" fill="rgb(221,13,50)" fg:x="241677446" fg:w="2082963"/><text x="77.3379%" y="943.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2,082,963 samples, 0.66%)</title><rect x="77.0879%" y="917" width="0.6644%" height="15" fill="rgb(236,68,49)" fg:x="241677446" fg:w="2082963"/><text x="77.3379%" y="927.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_fn (12,386,641 samples, 3.95%)</title><rect x="74.4950%" y="1269" width="3.9510%" height="15" fill="rgb(229,146,28)" fg:x="233548254" fg:w="12386641"/><text x="74.7450%" y="1279.50">ndar..</text></g><g><title>ndarray::iterators::to_vec_mapped (12,386,641 samples, 3.95%)</title><rect x="74.4950%" y="1253" width="3.9510%" height="15" fill="rgb(225,31,38)" fg:x="233548254" fg:w="12386641"/><text x="74.7450%" y="1263.50">ndar..</text></g><g><title>&lt;ndarray::indexes::IndicesIter&lt;D&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,386,641 samples, 3.95%)</title><rect x="74.4950%" y="1237" width="3.9510%" height="15" fill="rgb(250,208,3)" fg:x="233548254" fg:w="12386641"/><text x="74.7450%" y="1247.50">&lt;nda..</text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (10,619,667 samples, 3.39%)</title><rect x="75.0586%" y="1221" width="3.3874%" height="15" fill="rgb(246,54,23)" fg:x="235315228" fg:w="10619667"/><text x="75.3086%" y="1231.50">nda..</text></g><g><title>profile::main::_{{closure}} (7,389,824 samples, 2.36%)</title><rect x="76.0888%" y="1205" width="2.3571%" height="15" fill="rgb(243,76,11)" fg:x="238545071" fg:w="7389824"/><text x="76.3388%" y="1215.50">p..</text></g><g><title>rand::rng::Rng::random_range (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1189" width="0.6936%" height="15" fill="rgb(245,21,50)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distr::uniform::SampleRange&lt;T&gt;&gt;::sample_single (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1173" width="0.6936%" height="15" fill="rgb(228,9,43)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1183.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler&gt;::sample_single (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1157" width="0.6936%" height="15" fill="rgb(208,100,47)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1167.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformInt&lt;u32&gt; as rand::distr::uniform::UniformSampler&gt;::sample_single (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1141" width="0.6936%" height="15" fill="rgb(232,26,8)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1151.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformInt&lt;u32&gt; as rand::distr::uniform::UniformSampler&gt;::sample_single_inclusive (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1125" width="0.6936%" height="15" fill="rgb(216,166,38)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1135.50"></text></g><g><title>rand::rng::Rng::random (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1109" width="0.6936%" height="15" fill="rgb(251,202,51)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1119.50"></text></g><g><title>rand::distr::integer::&lt;impl rand::distr::distribution::Distribution&lt;u32&gt; for rand::distr::StandardUniform&gt;::sample (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1093" width="0.6936%" height="15" fill="rgb(254,216,34)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1103.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u32 (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1077" width="0.6936%" height="15" fill="rgb(251,32,27)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1087.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u32 (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1061" width="0.6936%" height="15" fill="rgb(208,127,28)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1071.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1045" width="0.6936%" height="15" fill="rgb(224,137,22)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1055.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1029" width="0.6936%" height="15" fill="rgb(254,70,32)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1039.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="1013" width="0.6936%" height="15" fill="rgb(229,75,37)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1023.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="997" width="0.6936%" height="15" fill="rgb(252,64,23)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="1007.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="981" width="0.6936%" height="15" fill="rgb(232,162,48)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="991.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="965" width="0.6936%" height="15" fill="rgb(246,160,12)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="975.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="949" width="0.6936%" height="15" fill="rgb(247,166,0)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="959.50"></text></g><g><title>rand_chacha::guts::round (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="933" width="0.6936%" height="15" fill="rgb(249,219,21)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="943.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="917" width="0.6936%" height="15" fill="rgb(205,209,3)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="927.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="901" width="0.6936%" height="15" fill="rgb(243,44,1)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="911.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2,174,486 samples, 0.69%)</title><rect x="77.7523%" y="885" width="0.6936%" height="15" fill="rgb(206,159,16)" fg:x="243760409" fg:w="2174486"/><text x="78.0023%" y="895.50"></text></g><g><title>[libc.so.6] (1,773,444 samples, 0.57%)</title><rect x="78.7676%" y="725" width="0.5657%" height="15" fill="rgb(244,77,30)" fg:x="246943474" fg:w="1773444"/><text x="79.0176%" y="735.50"></text></g><g><title>[unknown] (1,773,444 samples, 0.57%)</title><rect x="78.7676%" y="709" width="0.5657%" height="15" fill="rgb(218,69,12)" fg:x="246943474" fg:w="1773444"/><text x="79.0176%" y="719.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (3,717,574 samples, 1.19%)</title><rect x="78.4459%" y="837" width="1.1858%" height="15" fill="rgb(212,87,7)" fg:x="245934895" fg:w="3717574"/><text x="78.6959%" y="847.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (3,717,574 samples, 1.19%)</title><rect x="78.4459%" y="821" width="1.1858%" height="15" fill="rgb(245,114,25)" fg:x="245934895" fg:w="3717574"/><text x="78.6959%" y="831.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (3,717,574 samples, 1.19%)</title><rect x="78.4459%" y="805" width="1.1858%" height="15" fill="rgb(210,61,42)" fg:x="245934895" fg:w="3717574"/><text x="78.6959%" y="815.50"></text></g><g><title>std::time::SystemTime::now (3,717,574 samples, 1.19%)</title><rect x="78.4459%" y="789" width="1.1858%" height="15" fill="rgb(211,52,33)" fg:x="245934895" fg:w="3717574"/><text x="78.6959%" y="799.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (3,717,574 samples, 1.19%)</title><rect x="78.4459%" y="773" width="1.1858%" height="15" fill="rgb(234,58,33)" fg:x="245934895" fg:w="3717574"/><text x="78.6959%" y="783.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,717,574 samples, 1.19%)</title><rect x="78.4459%" y="757" width="1.1858%" height="15" fill="rgb(220,115,36)" fg:x="245934895" fg:w="3717574"/><text x="78.6959%" y="767.50"></text></g><g><title>clock_gettime (3,179,893 samples, 1.01%)</title><rect x="78.6174%" y="741" width="1.0143%" height="15" fill="rgb(243,153,54)" fg:x="246472576" fg:w="3179893"/><text x="78.8674%" y="751.50"></text></g><g><title>__vdso_clock_gettime (935,551 samples, 0.30%)</title><rect x="79.3333%" y="725" width="0.2984%" height="15" fill="rgb(251,47,18)" fg:x="248716918" fg:w="935551"/><text x="79.5833%" y="735.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="981" width="4.2166%" height="15" fill="rgb(242,102,42)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="991.50">&lt;ppro..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="965" width="4.2166%" height="15" fill="rgb(234,31,38)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="975.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="949" width="4.2166%" height="15" fill="rgb(221,117,51)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="959.50">alloc..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="933" width="4.2166%" height="15" fill="rgb(212,20,18)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="943.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="917" width="4.2166%" height="15" fill="rgb(245,133,36)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="927.50">&lt;core..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="901" width="4.2166%" height="15" fill="rgb(212,6,19)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="911.50">&lt;core..</text></g><g><title>core::ops::function::FnMut::call_mut (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="885" width="4.2166%" height="15" fill="rgb(218,1,36)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="895.50">core:..</text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="869" width="4.2166%" height="15" fill="rgb(246,84,54)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="879.50">&lt;ppro..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (13,219,474 samples, 4.22%)</title><rect x="78.4459%" y="853" width="4.2166%" height="15" fill="rgb(242,110,6)" fg:x="245934895" fg:w="13219474"/><text x="78.6959%" y="863.50">&lt;allo..</text></g><g><title>core::ptr::write (9,501,900 samples, 3.03%)</title><rect x="79.6317%" y="837" width="3.0308%" height="15" fill="rgb(214,47,5)" fg:x="249652469" fg:w="9501900"/><text x="79.8817%" y="847.50">cor..</text></g><g><title>[unknown] (5,163,568 samples, 1.65%)</title><rect x="81.0155%" y="821" width="1.6470%" height="15" fill="rgb(218,159,25)" fg:x="253990801" fg:w="5163568"/><text x="81.2655%" y="831.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1221" width="4.3380%" height="15" fill="rgb(215,211,28)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1231.50">&lt;once..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1205" width="4.3380%" height="15" fill="rgb(238,59,32)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1215.50">once_..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1189" width="4.3380%" height="15" fill="rgb(226,82,3)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1199.50">once_..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1173" width="4.3380%" height="15" fill="rgb(240,164,32)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1183.50">once_..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1157" width="4.3380%" height="15" fill="rgb(232,46,7)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1167.50">once_..</text></g><g><title>once_cell::imp::initialize_or_wait (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1141" width="4.3380%" height="15" fill="rgb(229,129,53)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1151.50">once_..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1125" width="4.3380%" height="15" fill="rgb(234,188,29)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1135.50">core:..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1109" width="4.3380%" height="15" fill="rgb(246,141,4)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1119.50">once_..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1093" width="4.3380%" height="15" fill="rgb(229,23,39)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1103.50">once_..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1077" width="4.3380%" height="15" fill="rgb(206,12,3)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1087.50">once_..</text></g><g><title>core::ops::function::FnOnce::call_once (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1061" width="4.3380%" height="15" fill="rgb(252,226,20)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1071.50">core:..</text></g><g><title>core::ops::function::FnOnce::call_once (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1045" width="4.3380%" height="15" fill="rgb(216,123,35)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1055.50">core:..</text></g><g><title>pprof::profiler::PROFILER::_{{closure}} (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1029" width="4.3380%" height="15" fill="rgb(212,68,40)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1039.50">pprof..</text></g><g><title>pprof::profiler::Profiler::new (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="1013" width="4.3380%" height="15" fill="rgb(254,125,32)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1023.50">pprof..</text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (13,599,984 samples, 4.34%)</title><rect x="78.4459%" y="997" width="4.3380%" height="15" fill="rgb(253,97,22)" fg:x="245934895" fg:w="13599984"/><text x="78.6959%" y="1007.50">pprof..</text></g><g><title>pprof::collector::TempFdArray&lt;T&gt;::new (380,510 samples, 0.12%)</title><rect x="82.6626%" y="981" width="0.1214%" height="15" fill="rgb(241,101,14)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (380,510 samples, 0.12%)</title><rect x="82.6626%" y="965" width="0.1214%" height="15" fill="rgb(238,103,29)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (380,510 samples, 0.12%)</title><rect x="82.6626%" y="949" width="0.1214%" height="15" fill="rgb(233,195,47)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (380,510 samples, 0.12%)</title><rect x="82.6626%" y="933" width="0.1214%" height="15" fill="rgb(246,218,30)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (380,510 samples, 0.12%)</title><rect x="82.6626%" y="917" width="0.1214%" height="15" fill="rgb(219,145,47)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="927.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (380,510 samples, 0.12%)</title><rect x="82.6626%" y="901" width="0.1214%" height="15" fill="rgb(243,12,26)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each::check::_{{closure}} (380,510 samples, 0.12%)</title><rect x="82.6626%" y="885" width="0.1214%" height="15" fill="rgb(214,87,16)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (380,510 samples, 0.12%)</title><rect x="82.6626%" y="869" width="0.1214%" height="15" fill="rgb(208,99,42)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="879.50"></text></g><g><title>core::ptr::write (380,510 samples, 0.12%)</title><rect x="82.6626%" y="853" width="0.1214%" height="15" fill="rgb(253,99,2)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="863.50"></text></g><g><title>[unknown] (380,510 samples, 0.12%)</title><rect x="82.6626%" y="837" width="0.1214%" height="15" fill="rgb(220,168,23)" fg:x="259154369" fg:w="380510"/><text x="82.9126%" y="847.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_attributes (1,698,837 samples, 0.54%)</title><rect x="82.7839%" y="789" width="0.5419%" height="15" fill="rgb(242,38,24)" fg:x="259534879" fg:w="1698837"/><text x="83.0339%" y="799.50"></text></g><g><title>gimli::read::abbrev::Attributes::push (1,698,837 samples, 0.54%)</title><rect x="82.7839%" y="773" width="0.5419%" height="15" fill="rgb(225,182,9)" fg:x="259534879" fg:w="1698837"/><text x="83.0339%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2,022,081 samples, 0.64%)</title><rect x="83.3258%" y="709" width="0.6450%" height="15" fill="rgb(243,178,37)" fg:x="261233716" fg:w="2022081"/><text x="83.5758%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,022,081 samples, 0.64%)</title><rect x="83.3258%" y="693" width="0.6450%" height="15" fill="rgb(232,139,19)" fg:x="261233716" fg:w="2022081"/><text x="83.5758%" y="703.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse (5,541,633 samples, 1.77%)</title><rect x="82.7839%" y="805" width="1.7676%" height="15" fill="rgb(225,201,24)" fg:x="259534879" fg:w="5541633"/><text x="83.0339%" y="815.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (3,842,796 samples, 1.23%)</title><rect x="83.3258%" y="789" width="1.2257%" height="15" fill="rgb(221,47,46)" fg:x="261233716" fg:w="3842796"/><text x="83.5758%" y="799.50"></text></g><g><title>gimli::leb128::read::unsigned (3,842,796 samples, 1.23%)</title><rect x="83.3258%" y="773" width="1.2257%" height="15" fill="rgb(249,23,13)" fg:x="261233716" fg:w="3842796"/><text x="83.5758%" y="783.50"></text></g><g><title>gimli::read::reader::Reader::read_u8 (3,842,796 samples, 1.23%)</title><rect x="83.3258%" y="757" width="1.2257%" height="15" fill="rgb(219,9,5)" fg:x="261233716" fg:w="3842796"/><text x="83.5758%" y="767.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (3,842,796 samples, 1.23%)</title><rect x="83.3258%" y="741" width="1.2257%" height="15" fill="rgb(254,171,16)" fg:x="261233716" fg:w="3842796"/><text x="83.5758%" y="751.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (3,842,796 samples, 1.23%)</title><rect x="83.3258%" y="725" width="1.2257%" height="15" fill="rgb(230,171,20)" fg:x="261233716" fg:w="3842796"/><text x="83.5758%" y="735.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (1,820,715 samples, 0.58%)</title><rect x="83.9708%" y="709" width="0.5808%" height="15" fill="rgb(210,71,41)" fg:x="263255797" fg:w="1820715"/><text x="84.2208%" y="719.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::mapping_for_lib (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="1045" width="2.4126%" height="15" fill="rgb(206,173,20)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="1055.50">ba..</text></g><g><title>backtrace::symbolize::gimli::create_mapping (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="1029" width="2.4126%" height="15" fill="rgb(233,88,34)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="1039.50">ba..</text></g><g><title>backtrace::symbolize::gimli::elf::&lt;impl backtrace::symbolize::gimli::Mapping&gt;::new (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="1013" width="2.4126%" height="15" fill="rgb(223,209,46)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="1023.50">ba..</text></g><g><title>backtrace::symbolize::gimli::Mapping::mk_or_other (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="997" width="2.4126%" height="15" fill="rgb(250,43,18)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="1007.50">ba..</text></g><g><title>backtrace::symbolize::gimli::elf::_&lt;impl backtrace::symbolize::gimli::Mapping&gt;::new::_{{closure}} (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="981" width="2.4126%" height="15" fill="rgb(208,13,10)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="991.50">ba..</text></g><g><title>backtrace::symbolize::gimli::Context::new (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="965" width="2.4126%" height="15" fill="rgb(212,200,36)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="975.50">ba..</text></g><g><title>addr2line::Context&lt;R&gt;::from_dwarf (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="949" width="2.4126%" height="15" fill="rgb(225,90,30)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="959.50">ad..</text></g><g><title>addr2line::Context&lt;R&gt;::from_arc_dwarf (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="933" width="2.4126%" height="15" fill="rgb(236,182,39)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="943.50">ad..</text></g><g><title>addr2line::unit::ResUnits&lt;R&gt;::parse (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="917" width="2.4126%" height="15" fill="rgb(212,144,35)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="927.50">ad..</text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::unit (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="901" width="2.4126%" height="15" fill="rgb(228,63,44)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="911.50">gi..</text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="885" width="2.4126%" height="15" fill="rgb(228,109,6)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="895.50">gi..</text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::abbreviations (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="869" width="2.4126%" height="15" fill="rgb(238,117,24)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="879.50">gi..</text></g><g><title>gimli::read::abbrev::AbbreviationsCache::get (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="853" width="2.4126%" height="15" fill="rgb(242,26,26)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="863.50">gi..</text></g><g><title>gimli::read::abbrev::DebugAbbrev&lt;R&gt;::abbreviations (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="837" width="2.4126%" height="15" fill="rgb(221,92,48)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="847.50">gi..</text></g><g><title>gimli::read::abbrev::Abbreviations::parse (7,563,714 samples, 2.41%)</title><rect x="82.7839%" y="821" width="2.4126%" height="15" fill="rgb(209,209,32)" fg:x="259534879" fg:w="7563714"/><text x="83.0339%" y="831.50">gi..</text></g><g><title>gimli::read::abbrev::Abbreviations::insert (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="805" width="0.6450%" height="15" fill="rgb(221,70,22)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="789" width="0.6450%" height="15" fill="rgb(248,145,5)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="773" width="0.6450%" height="15" fill="rgb(226,116,26)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="757" width="0.6450%" height="15" fill="rgb(244,5,17)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="741" width="0.6450%" height="15" fill="rgb(252,159,33)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="725" width="0.6450%" height="15" fill="rgb(206,71,0)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="709" width="0.6450%" height="15" fill="rgb(233,118,54)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="693" width="0.6450%" height="15" fill="rgb(234,83,48)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="703.50"></text></g><g><title>alloc::alloc::realloc (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="677" width="0.6450%" height="15" fill="rgb(228,3,54)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="687.50"></text></g><g><title>__rustc::__rdl_realloc (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="661" width="0.6450%" height="15" fill="rgb(226,155,13)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="671.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="645" width="0.6450%" height="15" fill="rgb(241,28,37)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="655.50"></text></g><g><title>realloc (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="629" width="0.6450%" height="15" fill="rgb(233,93,10)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="639.50"></text></g><g><title>[libc.so.6] (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="613" width="0.6450%" height="15" fill="rgb(225,113,19)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="623.50"></text></g><g><title>[libc.so.6] (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="597" width="0.6450%" height="15" fill="rgb(241,2,18)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="607.50"></text></g><g><title>[unknown] (2,022,081 samples, 0.64%)</title><rect x="84.5515%" y="581" width="0.6450%" height="15" fill="rgb(228,207,21)" fg:x="265076512" fg:w="2022081"/><text x="84.8015%" y="591.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="709" width="0.4497%" height="15" fill="rgb(213,211,35)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="719.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="693" width="0.4497%" height="15" fill="rgb(209,83,10)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="703.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="677" width="0.4497%" height="15" fill="rgb(209,164,1)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="687.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="661" width="0.4497%" height="15" fill="rgb(213,184,43)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="671.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="645" width="0.4497%" height="15" fill="rgb(231,61,34)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="655.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="629" width="0.4497%" height="15" fill="rgb(235,75,3)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="639.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="613" width="0.4497%" height="15" fill="rgb(220,106,47)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="623.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="597" width="0.4497%" height="15" fill="rgb(210,196,33)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="607.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="581" width="0.4497%" height="15" fill="rgb(229,154,42)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="591.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="565" width="0.4497%" height="15" fill="rgb(228,114,26)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="575.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="549" width="0.4497%" height="15" fill="rgb(208,144,1)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="559.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="533" width="0.4497%" height="15" fill="rgb(239,112,37)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="543.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="517" width="0.4497%" height="15" fill="rgb(210,96,50)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="527.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="501" width="0.4497%" height="15" fill="rgb(222,178,2)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="511.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="485" width="0.4497%" height="15" fill="rgb(226,74,18)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="495.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="469" width="0.4497%" height="15" fill="rgb(225,67,54)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="479.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="453" width="0.4497%" height="15" fill="rgb(251,92,32)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="463.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="437" width="0.4497%" height="15" fill="rgb(228,149,22)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="447.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="421" width="0.4497%" height="15" fill="rgb(243,54,13)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="431.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="405" width="0.4497%" height="15" fill="rgb(243,180,28)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="415.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="389" width="0.4497%" height="15" fill="rgb(208,167,24)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="399.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="373" width="0.4497%" height="15" fill="rgb(245,73,45)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="383.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="357" width="0.4497%" height="15" fill="rgb(237,203,48)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="367.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="341" width="0.4497%" height="15" fill="rgb(211,197,16)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="351.50"></text></g><g><title>addr2line::function::name_attr (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="325" width="0.4497%" height="15" fill="rgb(243,99,51)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="335.50"></text></g><g><title>addr2line::function::name_entry (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="309" width="0.4497%" height="15" fill="rgb(215,123,29)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="319.50"></text></g><g><title>addr2line::function::name_attr (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="293" width="0.4497%" height="15" fill="rgb(239,186,37)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="303.50"></text></g><g><title>addr2line::function::name_entry (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="277" width="0.4497%" height="15" fill="rgb(252,136,39)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="287.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_attribute (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="261" width="0.4497%" height="15" fill="rgb(223,213,32)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="271.50"></text></g><g><title>gimli::read::unit::parse_attribute (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="245" width="0.4497%" height="15" fill="rgb(233,115,5)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="255.50"></text></g><g><title>gimli::read::reader::Reader::read_offset (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="229" width="0.4497%" height="15" fill="rgb(207,226,44)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="239.50"></text></g><g><title>gimli::read::reader::Reader::read_word (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="213" width="0.4497%" height="15" fill="rgb(208,126,0)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="223.50"></text></g><g><title>gimli::read::reader::Reader::read_u32 (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="197" width="0.4497%" height="15" fill="rgb(244,66,21)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="207.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="181" width="0.4497%" height="15" fill="rgb(222,97,12)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="191.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="165" width="0.4497%" height="15" fill="rgb(219,213,19)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="175.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (1,409,906 samples, 0.45%)</title><rect x="85.1965%" y="149" width="0.4497%" height="15" fill="rgb(252,169,30)" fg:x="267098593" fg:w="1409906"/><text x="85.4465%" y="159.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="901" width="0.9091%" height="15" fill="rgb(206,32,51)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="911.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="885" width="0.9091%" height="15" fill="rgb(250,172,42)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="895.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="869" width="0.9091%" height="15" fill="rgb(209,34,43)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="879.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="853" width="0.9091%" height="15" fill="rgb(223,11,35)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="863.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="837" width="0.9091%" height="15" fill="rgb(251,219,26)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="847.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="821" width="0.9091%" height="15" fill="rgb(231,119,3)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="831.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="805" width="0.9091%" height="15" fill="rgb(216,97,11)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="815.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="789" width="0.9091%" height="15" fill="rgb(223,59,9)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="799.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="773" width="0.9091%" height="15" fill="rgb(233,93,31)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="783.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="757" width="0.9091%" height="15" fill="rgb(239,81,33)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="767.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="741" width="0.9091%" height="15" fill="rgb(213,120,34)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="751.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,850,145 samples, 0.91%)</title><rect x="85.1965%" y="725" width="0.9091%" height="15" fill="rgb(243,49,53)" fg:x="267098593" fg:w="2850145"/><text x="85.4465%" y="735.50"></text></g><g><title>addr2line::function::name_attr (1,440,239 samples, 0.46%)</title><rect x="85.6463%" y="709" width="0.4594%" height="15" fill="rgb(247,216,33)" fg:x="268508499" fg:w="1440239"/><text x="85.8963%" y="719.50"></text></g><g><title>addr2line::function::name_entry (1,440,239 samples, 0.46%)</title><rect x="85.6463%" y="693" width="0.4594%" height="15" fill="rgb(226,26,14)" fg:x="268508499" fg:w="1440239"/><text x="85.8963%" y="703.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow (4,137,198 samples, 1.32%)</title><rect x="85.1965%" y="965" width="1.3196%" height="15" fill="rgb(215,49,53)" fg:x="267098593" fg:w="4137198"/><text x="85.4465%" y="975.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4,137,198 samples, 1.32%)</title><rect x="85.1965%" y="949" width="1.3196%" height="15" fill="rgb(245,162,40)" fg:x="267098593" fg:w="4137198"/><text x="85.4465%" y="959.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow::_{{closure}} (4,137,198 samples, 1.32%)</title><rect x="85.1965%" y="933" width="1.3196%" height="15" fill="rgb(229,68,17)" fg:x="267098593" fg:w="4137198"/><text x="85.4465%" y="943.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse (4,137,198 samples, 1.32%)</title><rect x="85.1965%" y="917" width="1.3196%" height="15" fill="rgb(213,182,10)" fg:x="267098593" fg:w="4137198"/><text x="85.4465%" y="927.50"></text></g><g><title>gimli::read::dwarf::UnitRef&lt;R&gt;::attr_string (1,287,053 samples, 0.41%)</title><rect x="86.1056%" y="901" width="0.4105%" height="15" fill="rgb(245,125,30)" fg:x="269948738" fg:w="1287053"/><text x="86.3556%" y="911.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::attr_string (1,287,053 samples, 0.41%)</title><rect x="86.1056%" y="885" width="0.4105%" height="15" fill="rgb(232,202,2)" fg:x="269948738" fg:w="1287053"/><text x="86.3556%" y="895.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::attributes (2,867,858 samples, 0.91%)</title><rect x="86.5162%" y="901" width="0.9148%" height="15" fill="rgb(237,140,51)" fg:x="271235791" fg:w="2867858"/><text x="86.7662%" y="911.50"></text></g><g><title>&lt;gimli::read::abbrev::Attributes as core::ops::deref::Deref&gt;::deref (2,867,858 samples, 0.91%)</title><rect x="86.5162%" y="885" width="0.9148%" height="15" fill="rgb(236,157,25)" fg:x="271235791" fg:w="2867858"/><text x="86.7662%" y="895.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow (4,410,649 samples, 1.41%)</title><rect x="86.5162%" y="965" width="1.4069%" height="15" fill="rgb(219,209,0)" fg:x="271235791" fg:w="4410649"/><text x="86.7662%" y="975.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4,410,649 samples, 1.41%)</title><rect x="86.5162%" y="949" width="1.4069%" height="15" fill="rgb(240,116,54)" fg:x="271235791" fg:w="4410649"/><text x="86.7662%" y="959.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow::_{{closure}} (4,410,649 samples, 1.41%)</title><rect x="86.5162%" y="933" width="1.4069%" height="15" fill="rgb(216,10,36)" fg:x="271235791" fg:w="4410649"/><text x="86.7662%" y="943.50"></text></g><g><title>addr2line::function::Functions&lt;R&gt;::parse (4,410,649 samples, 1.41%)</title><rect x="86.5162%" y="917" width="1.4069%" height="15" fill="rgb(222,72,44)" fg:x="271235791" fg:w="4410649"/><text x="86.7662%" y="927.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::skip_attributes (1,542,791 samples, 0.49%)</title><rect x="87.4309%" y="901" width="0.4921%" height="15" fill="rgb(232,159,9)" fg:x="274103649" fg:w="1542791"/><text x="87.6809%" y="911.50"></text></g><g><title>gimli::read::unit::skip_attributes (1,542,791 samples, 0.49%)</title><rect x="87.4309%" y="885" width="0.4921%" height="15" fill="rgb(210,39,32)" fg:x="274103649" fg:w="1542791"/><text x="87.6809%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,542,791 samples, 0.49%)</title><rect x="87.4309%" y="869" width="0.4921%" height="15" fill="rgb(216,194,45)" fg:x="274103649" fg:w="1542791"/><text x="87.6809%" y="879.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,542,791 samples, 0.49%)</title><rect x="87.4309%" y="853" width="0.4921%" height="15" fill="rgb(218,18,35)" fg:x="274103649" fg:w="1542791"/><text x="87.6809%" y="863.50"></text></g><g><title>pprof::profiler::ProfilerGuard::new (31,015,718 samples, 9.89%)</title><rect x="78.4459%" y="1269" width="9.8931%" height="15" fill="rgb(207,83,51)" fg:x="245934895" fg:w="31015718"/><text x="78.6959%" y="1279.50">pprof::profile..</text></g><g><title>pprof::profiler::ProfilerGuardBuilder::build (31,015,718 samples, 9.89%)</title><rect x="78.4459%" y="1253" width="9.8931%" height="15" fill="rgb(225,63,43)" fg:x="245934895" fg:w="31015718"/><text x="78.6959%" y="1263.50">pprof::profile..</text></g><g><title>pprof::profiler::trigger_lazy (31,015,718 samples, 9.89%)</title><rect x="78.4459%" y="1237" width="9.8931%" height="15" fill="rgb(207,57,36)" fg:x="245934895" fg:w="31015718"/><text x="78.6959%" y="1247.50">pprof::profile..</text></g><g><title>backtrace::capture::Backtrace::new (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1221" width="5.5551%" height="15" fill="rgb(216,99,33)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1231.50">backtra..</text></g><g><title>backtrace::capture::Backtrace::resolve (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1205" width="5.5551%" height="15" fill="rgb(225,42,16)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1215.50">backtra..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1189" width="5.5551%" height="15" fill="rgb(220,201,45)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1199.50">&lt;core::..</text></g><g><title>core::ops::function::FnMut::call_mut (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1173" width="5.5551%" height="15" fill="rgb(225,33,4)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1183.50">core::o..</text></g><g><title>backtrace::capture::BacktraceFrame::resolve (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1157" width="5.5551%" height="15" fill="rgb(224,33,50)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1167.50">backtra..</text></g><g><title>backtrace::capture::Frame::resolve_symbols (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1141" width="5.5551%" height="15" fill="rgb(246,198,51)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1151.50">backtra..</text></g><g><title>backtrace::symbolize::resolve_frame (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1125" width="5.5551%" height="15" fill="rgb(205,22,4)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1135.50">backtra..</text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1109" width="5.5551%" height="15" fill="rgb(206,3,8)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1119.50">backtra..</text></g><g><title>backtrace::symbolize::gimli::resolve (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1093" width="5.5551%" height="15" fill="rgb(251,23,15)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1103.50">backtra..</text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1077" width="5.5551%" height="15" fill="rgb(252,88,28)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1087.50">backtra..</text></g><g><title>backtrace::symbolize::gimli::resolve::_{{closure}} (17,415,734 samples, 5.56%)</title><rect x="82.7839%" y="1061" width="5.5551%" height="15" fill="rgb(212,127,14)" fg:x="259534879" fg:w="17415734"/><text x="83.0339%" y="1071.50">backtra..</text></g><g><title>backtrace::symbolize::gimli::Context::find_frames (9,852,020 samples, 3.14%)</title><rect x="85.1965%" y="1045" width="3.1425%" height="15" fill="rgb(247,145,37)" fg:x="267098593" fg:w="9852020"/><text x="85.4465%" y="1055.50">bac..</text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (9,852,020 samples, 3.14%)</title><rect x="85.1965%" y="1029" width="3.1425%" height="15" fill="rgb(209,117,53)" fg:x="267098593" fg:w="9852020"/><text x="85.4465%" y="1039.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location (9,852,020 samples, 3.14%)</title><rect x="85.1965%" y="1013" width="3.1425%" height="15" fill="rgb(212,90,42)" fg:x="267098593" fg:w="9852020"/><text x="85.4465%" y="1023.50">add..</text></g><g><title>addr2line::lookup::LookupResult&lt;L&gt;::map (9,852,020 samples, 3.14%)</title><rect x="85.1965%" y="997" width="3.1425%" height="15" fill="rgb(218,164,37)" fg:x="267098593" fg:w="9852020"/><text x="85.4465%" y="1007.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location::_{{closure}} (9,852,020 samples, 3.14%)</title><rect x="85.1965%" y="981" width="3.1425%" height="15" fill="rgb(246,65,34)" fg:x="267098593" fg:w="9852020"/><text x="85.4465%" y="991.50">add..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_location (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="965" width="0.4160%" height="15" fill="rgb(231,100,33)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="975.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::parse_lines (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="949" width="0.4160%" height="15" fill="rgb(228,126,14)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="959.50"></text></g><g><title>addr2line::line::LazyLines::borrow (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="933" width="0.4160%" height="15" fill="rgb(215,173,21)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="943.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="917" width="0.4160%" height="15" fill="rgb(210,6,40)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="927.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="901" width="0.4160%" height="15" fill="rgb(212,48,18)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="911.50"></text></g><g><title>addr2line::line::Lines::parse (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="885" width="0.4160%" height="15" fill="rgb(230,214,11)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="895.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="869" width="0.4160%" height="15" fill="rgb(254,105,39)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="879.50"></text></g><g><title>gimli::read::line::LineRow::execute (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="853" width="0.4160%" height="15" fill="rgb(245,158,5)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="863.50"></text></g><g><title>gimli::read::line::LineRow::apply_line_advance (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="837" width="0.4160%" height="15" fill="rgb(249,208,11)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="847.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::arith::AddAssign&gt;::add_assign (1,304,173 samples, 0.42%)</title><rect x="87.9230%" y="821" width="0.4160%" height="15" fill="rgb(210,39,28)" fg:x="275646440" fg:w="1304173"/><text x="88.1730%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1141" width="1.1984%" height="15" fill="rgb(211,56,53)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1151.50"></text></g><g><title>&lt;pprof::frames::Frames as core::convert::From&lt;pprof::frames::UnresolvedFrames&gt;&gt;::from::_{{closure}} (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1125" width="1.1984%" height="15" fill="rgb(226,201,30)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1135.50"></text></g><g><title>pprof::frames::Symbol::name (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1109" width="1.1984%" height="15" fill="rgb(239,101,34)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1119.50"></text></g><g><title>symbolic_demangle::demangle (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1093" width="1.1984%" height="15" fill="rgb(226,209,5)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1103.50"></text></g><g><title>&lt;symbolic_common::types::Name as symbolic_demangle::Demangle&gt;::demangle (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1077" width="1.1984%" height="15" fill="rgb(250,105,47)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1087.50"></text></g><g><title>symbolic_demangle::try_demangle_rust (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1061" width="1.1984%" height="15" fill="rgb(230,72,3)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1071.50"></text></g><g><title>alloc::fmt::format (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1045" width="1.1984%" height="15" fill="rgb(232,218,39)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1029" width="1.1984%" height="15" fill="rgb(248,166,6)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1039.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="1013" width="1.1984%" height="15" fill="rgb(247,89,20)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1023.50"></text></g><g><title>alloc::fmt::format::format_inner (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="997" width="1.1984%" height="15" fill="rgb(248,130,54)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="1007.50"></text></g><g><title>core::fmt::Write::write_fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="981" width="1.1984%" height="15" fill="rgb(234,196,4)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="991.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="965" width="1.1984%" height="15" fill="rgb(250,143,31)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="975.50"></text></g><g><title>core::fmt::write (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="949" width="1.1984%" height="15" fill="rgb(211,110,34)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="959.50"></text></g><g><title>core::fmt::run (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="933" width="1.1984%" height="15" fill="rgb(215,124,48)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="943.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="917" width="1.1984%" height="15" fill="rgb(216,46,13)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="927.50"></text></g><g><title>&lt;rustc_demangle::Demangle as core::fmt::Display&gt;::fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="901" width="1.1984%" height="15" fill="rgb(205,184,25)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="885" width="1.1984%" height="15" fill="rgb(228,1,10)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="869" width="1.1984%" height="15" fill="rgb(213,116,27)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="879.50"></text></g><g><title>core::fmt::write (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="853" width="1.1984%" height="15" fill="rgb(241,95,50)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="863.50"></text></g><g><title>core::fmt::run (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="837" width="1.1984%" height="15" fill="rgb(238,48,32)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="847.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="821" width="1.1984%" height="15" fill="rgb(235,113,49)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="831.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="805" width="1.1984%" height="15" fill="rgb(205,127,43)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="815.50"></text></g><g><title>&lt;rustc_demangle::DemangleStyle as core::fmt::Display&gt;::fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="789" width="1.1984%" height="15" fill="rgb(250,162,2)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="799.50"></text></g><g><title>&lt;rustc_demangle::legacy::Demangle as core::fmt::Display&gt;::fmt (3,756,947 samples, 1.20%)</title><rect x="88.3390%" y="773" width="1.1984%" height="15" fill="rgb(220,13,41)" fg:x="276950613" fg:w="3756947"/><text x="88.5890%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_str (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="757" width="0.5913%" height="15" fill="rgb(249,221,25)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="741" width="0.5913%" height="15" fill="rgb(215,208,19)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="751.50"></text></g><g><title>alloc::string::String::push_str (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="725" width="0.5913%" height="15" fill="rgb(236,175,2)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="709" width="0.5913%" height="15" fill="rgb(241,52,2)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="693" width="0.5913%" height="15" fill="rgb(248,140,14)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="677" width="0.5913%" height="15" fill="rgb(253,22,42)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="661" width="0.5913%" height="15" fill="rgb(234,61,47)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="645" width="0.5913%" height="15" fill="rgb(208,226,15)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="629" width="0.5913%" height="15" fill="rgb(217,221,4)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="613" width="0.5913%" height="15" fill="rgb(212,174,34)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="597" width="0.5913%" height="15" fill="rgb(253,83,4)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="581" width="0.5913%" height="15" fill="rgb(250,195,49)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="565" width="0.5913%" height="15" fill="rgb(241,192,25)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="549" width="0.5913%" height="15" fill="rgb(208,124,10)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="533" width="0.5913%" height="15" fill="rgb(222,33,0)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="543.50"></text></g><g><title>__rustc::__rdl_realloc (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="517" width="0.5913%" height="15" fill="rgb(234,209,28)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="501" width="0.5913%" height="15" fill="rgb(224,11,23)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="511.50"></text></g><g><title>realloc (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="485" width="0.5913%" height="15" fill="rgb(232,99,1)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="495.50"></text></g><g><title>[libc.so.6] (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="469" width="0.5913%" height="15" fill="rgb(237,95,45)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="479.50"></text></g><g><title>[libc.so.6] (1,853,915 samples, 0.59%)</title><rect x="88.9460%" y="453" width="0.5913%" height="15" fill="rgb(208,109,11)" fg:x="278853645" fg:w="1853915"/><text x="89.1960%" y="463.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::mapping_for_lib (1,659,946 samples, 0.53%)</title><rect x="89.5374%" y="1045" width="0.5295%" height="15" fill="rgb(216,190,48)" fg:x="280707560" fg:w="1659946"/><text x="89.7874%" y="1055.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="885" width="0.5878%" height="15" fill="rgb(251,171,36)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="895.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="869" width="0.5878%" height="15" fill="rgb(230,62,22)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="879.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="853" width="0.5878%" height="15" fill="rgb(225,114,35)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="863.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="837" width="0.5878%" height="15" fill="rgb(215,118,42)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="847.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="821" width="0.5878%" height="15" fill="rgb(243,119,21)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="831.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="805" width="0.5878%" height="15" fill="rgb(252,177,53)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="815.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="789" width="0.5878%" height="15" fill="rgb(237,209,29)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="799.50"></text></g><g><title>addr2line::function::name_attr (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="773" width="0.5878%" height="15" fill="rgb(212,65,23)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="783.50"></text></g><g><title>addr2line::function::name_entry (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="757" width="0.5878%" height="15" fill="rgb(230,222,46)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="767.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_abbreviation (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="741" width="0.5878%" height="15" fill="rgb(215,135,32)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="751.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="725" width="0.5878%" height="15" fill="rgb(246,101,22)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="735.50"></text></g><g><title>gimli::leb128::read::unsigned (1,842,863 samples, 0.59%)</title><rect x="90.4978%" y="709" width="0.5878%" height="15" fill="rgb(206,107,13)" fg:x="283718379" fg:w="1842863"/><text x="90.7478%" y="719.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow (5,303,790 samples, 1.69%)</title><rect x="90.0669%" y="965" width="1.6918%" height="15" fill="rgb(250,100,44)" fg:x="282367506" fg:w="5303790"/><text x="90.3169%" y="975.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (5,303,790 samples, 1.69%)</title><rect x="90.0669%" y="949" width="1.6918%" height="15" fill="rgb(231,147,38)" fg:x="282367506" fg:w="5303790"/><text x="90.3169%" y="959.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow::_{{closure}} (5,303,790 samples, 1.69%)</title><rect x="90.0669%" y="933" width="1.6918%" height="15" fill="rgb(229,8,40)" fg:x="282367506" fg:w="5303790"/><text x="90.3169%" y="943.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse (5,303,790 samples, 1.69%)</title><rect x="90.0669%" y="917" width="1.6918%" height="15" fill="rgb(221,135,30)" fg:x="282367506" fg:w="5303790"/><text x="90.3169%" y="927.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,952,917 samples, 1.26%)</title><rect x="90.4978%" y="901" width="1.2609%" height="15" fill="rgb(249,193,18)" fg:x="283718379" fg:w="3952917"/><text x="90.7478%" y="911.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_abbreviation (2,110,054 samples, 0.67%)</title><rect x="91.0856%" y="885" width="0.6730%" height="15" fill="rgb(209,133,39)" fg:x="285561242" fg:w="2110054"/><text x="91.3356%" y="895.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::next_offset (1,912,094 samples, 0.61%)</title><rect x="91.7586%" y="901" width="0.6099%" height="15" fill="rgb(232,100,14)" fg:x="287671296" fg:w="1912094"/><text x="92.0086%" y="911.50"></text></g><g><title>&lt;usize as core::ops::arith::Add&gt;::add (1,912,094 samples, 0.61%)</title><rect x="91.7586%" y="885" width="0.6099%" height="15" fill="rgb(224,185,1)" fg:x="287671296" fg:w="1912094"/><text x="92.0086%" y="895.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::get (738,229 samples, 0.24%)</title><rect x="92.3685%" y="885" width="0.2355%" height="15" fill="rgb(223,139,8)" fg:x="289583390" fg:w="738229"/><text x="92.6185%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (738,229 samples, 0.24%)</title><rect x="92.3685%" y="869" width="0.2355%" height="15" fill="rgb(232,213,38)" fg:x="289583390" fg:w="738229"/><text x="92.6185%" y="879.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow (4,852,465 samples, 1.55%)</title><rect x="91.7586%" y="965" width="1.5478%" height="15" fill="rgb(207,94,22)" fg:x="287671296" fg:w="4852465"/><text x="92.0086%" y="975.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4,852,465 samples, 1.55%)</title><rect x="91.7586%" y="949" width="1.5478%" height="15" fill="rgb(219,183,54)" fg:x="287671296" fg:w="4852465"/><text x="92.0086%" y="959.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow::_{{closure}} (4,852,465 samples, 1.55%)</title><rect x="91.7586%" y="933" width="1.5478%" height="15" fill="rgb(216,185,54)" fg:x="287671296" fg:w="4852465"/><text x="92.0086%" y="943.50"></text></g><g><title>addr2line::function::Functions&lt;R&gt;::parse (4,852,465 samples, 1.55%)</title><rect x="91.7586%" y="917" width="1.5478%" height="15" fill="rgb(254,217,39)" fg:x="287671296" fg:w="4852465"/><text x="92.0086%" y="927.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_abbreviation (2,940,371 samples, 0.94%)</title><rect x="92.3685%" y="901" width="0.9379%" height="15" fill="rgb(240,178,23)" fg:x="289583390" fg:w="2940371"/><text x="92.6185%" y="911.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (2,202,142 samples, 0.70%)</title><rect x="92.6040%" y="885" width="0.7024%" height="15" fill="rgb(218,11,47)" fg:x="290321619" fg:w="2202142"/><text x="92.8540%" y="895.50"></text></g><g><title>gimli::leb128::read::unsigned (2,202,142 samples, 0.70%)</title><rect x="92.6040%" y="869" width="0.7024%" height="15" fill="rgb(218,51,51)" fg:x="290321619" fg:w="2202142"/><text x="92.8540%" y="879.50"></text></g><g><title>gimli::leb128::low_bits_of_byte (1,700,638 samples, 0.54%)</title><rect x="92.7640%" y="853" width="0.5425%" height="15" fill="rgb(238,126,27)" fg:x="290823123" fg:w="1700638"/><text x="93.0140%" y="863.50"></text></g><g><title>gimli::read::reader::Reader::read_sleb128 (1,637,973 samples, 0.52%)</title><rect x="93.3064%" y="821" width="0.5225%" height="15" fill="rgb(249,202,22)" fg:x="292523761" fg:w="1637973"/><text x="93.5564%" y="831.50"></text></g><g><title>gimli::leb128::read::signed (1,637,973 samples, 0.52%)</title><rect x="93.3064%" y="805" width="0.5225%" height="15" fill="rgb(254,195,49)" fg:x="292523761" fg:w="1637973"/><text x="93.5564%" y="815.50"></text></g><g><title>pprof::report::ReportBuilder::build (18,987,003 samples, 6.06%)</title><rect x="88.3390%" y="1269" width="6.0563%" height="15" fill="rgb(208,123,14)" fg:x="276950613" fg:w="18987003"/><text x="88.5890%" y="1279.50">pprof::r..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18,987,003 samples, 6.06%)</title><rect x="88.3390%" y="1253" width="6.0563%" height="15" fill="rgb(224,200,8)" fg:x="276950613" fg:w="18987003"/><text x="88.5890%" y="1263.50">core::it..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18,987,003 samples, 6.06%)</title><rect x="88.3390%" y="1237" width="6.0563%" height="15" fill="rgb(217,61,36)" fg:x="276950613" fg:w="18987003"/><text x="88.5890%" y="1247.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (18,987,003 samples, 6.06%)</title><rect x="88.3390%" y="1221" width="6.0563%" height="15" fill="rgb(206,35,45)" fg:x="276950613" fg:w="18987003"/><text x="88.5890%" y="1231.50">core::it..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18,987,003 samples, 6.06%)</title><rect x="88.3390%" y="1205" width="6.0563%" height="15" fill="rgb(217,65,33)" fg:x="276950613" fg:w="18987003"/><text x="88.5890%" y="1215.50">core::op..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (18,987,003 samples, 6.06%)</title><rect x="88.3390%" y="1189" width="6.0563%" height="15" fill="rgb(222,158,48)" fg:x="276950613" fg:w="18987003"/><text x="88.5890%" y="1199.50">core::it..</text></g><g><title>pprof::report::ReportBuilder::build::_{{closure}} (18,987,003 samples, 6.06%)</title><rect x="88.3390%" y="1173" width="6.0563%" height="15" fill="rgb(254,2,54)" fg:x="276950613" fg:w="18987003"/><text x="88.5890%" y="1183.50">pprof::r..</text></g><g><title>&lt;pprof::frames::Frames as core::convert::From&lt;pprof::frames::UnresolvedFrames&gt;&gt;::from (18,987,003 samples, 6.06%)</title><rect x="88.3390%" y="1157" width="6.0563%" height="15" fill="rgb(250,143,38)" fg:x="276950613" fg:w="18987003"/><text x="88.5890%" y="1167.50">&lt;pprof::..</text></g><g><title>pprof::backtrace::backtrace_rs::&lt;impl pprof::backtrace::Frame for backtrace::backtrace::Frame&gt;::resolve_symbol (15,230,056 samples, 4.86%)</title><rect x="89.5374%" y="1141" width="4.8579%" height="15" fill="rgb(248,25,0)" fg:x="280707560" fg:w="15230056"/><text x="89.7874%" y="1151.50">pprof:..</text></g><g><title>backtrace::symbolize::resolve_frame (15,230,056 samples, 4.86%)</title><rect x="89.5374%" y="1125" width="4.8579%" height="15" fill="rgb(206,152,27)" fg:x="280707560" fg:w="15230056"/><text x="89.7874%" y="1135.50">backtr..</text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (15,230,056 samples, 4.86%)</title><rect x="89.5374%" y="1109" width="4.8579%" height="15" fill="rgb(240,77,30)" fg:x="280707560" fg:w="15230056"/><text x="89.7874%" y="1119.50">backtr..</text></g><g><title>backtrace::symbolize::gimli::resolve (15,230,056 samples, 4.86%)</title><rect x="89.5374%" y="1093" width="4.8579%" height="15" fill="rgb(231,5,3)" fg:x="280707560" fg:w="15230056"/><text x="89.7874%" y="1103.50">backtr..</text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (15,230,056 samples, 4.86%)</title><rect x="89.5374%" y="1077" width="4.8579%" height="15" fill="rgb(207,226,32)" fg:x="280707560" fg:w="15230056"/><text x="89.7874%" y="1087.50">backtr..</text></g><g><title>backtrace::symbolize::gimli::resolve::_{{closure}} (15,230,056 samples, 4.86%)</title><rect x="89.5374%" y="1061" width="4.8579%" height="15" fill="rgb(222,207,47)" fg:x="280707560" fg:w="15230056"/><text x="89.7874%" y="1071.50">backtr..</text></g><g><title>backtrace::symbolize::gimli::Context::find_frames (13,570,110 samples, 4.33%)</title><rect x="90.0669%" y="1045" width="4.3285%" height="15" fill="rgb(229,115,45)" fg:x="282367506" fg:w="13570110"/><text x="90.3169%" y="1055.50">backt..</text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (13,570,110 samples, 4.33%)</title><rect x="90.0669%" y="1029" width="4.3285%" height="15" fill="rgb(224,191,6)" fg:x="282367506" fg:w="13570110"/><text x="90.3169%" y="1039.50">addr2..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location (13,570,110 samples, 4.33%)</title><rect x="90.0669%" y="1013" width="4.3285%" height="15" fill="rgb(230,227,24)" fg:x="282367506" fg:w="13570110"/><text x="90.3169%" y="1023.50">addr2..</text></g><g><title>addr2line::lookup::LookupResult&lt;L&gt;::map (13,570,110 samples, 4.33%)</title><rect x="90.0669%" y="997" width="4.3285%" height="15" fill="rgb(228,80,19)" fg:x="282367506" fg:w="13570110"/><text x="90.3169%" y="1007.50">addr2..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location::_{{closure}} (13,570,110 samples, 4.33%)</title><rect x="90.0669%" y="981" width="4.3285%" height="15" fill="rgb(247,229,0)" fg:x="282367506" fg:w="13570110"/><text x="90.3169%" y="991.50">addr2..</text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_location (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="965" width="1.0889%" height="15" fill="rgb(237,194,15)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="975.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::parse_lines (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="949" width="1.0889%" height="15" fill="rgb(219,203,20)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="959.50"></text></g><g><title>addr2line::line::LazyLines::borrow (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="933" width="1.0889%" height="15" fill="rgb(234,128,8)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="943.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="917" width="1.0889%" height="15" fill="rgb(248,202,8)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="927.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="901" width="1.0889%" height="15" fill="rgb(206,104,37)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="911.50"></text></g><g><title>addr2line::line::Lines::parse (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="885" width="1.0889%" height="15" fill="rgb(223,8,27)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="895.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="869" width="1.0889%" height="15" fill="rgb(216,217,28)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="879.50"></text></g><g><title>gimli::read::line::LineInstructions&lt;R&gt;::next_instruction (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="853" width="1.0889%" height="15" fill="rgb(249,199,1)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="863.50"></text></g><g><title>gimli::read::line::LineInstruction&lt;R,Offset&gt;::parse (3,413,855 samples, 1.09%)</title><rect x="93.3064%" y="837" width="1.0889%" height="15" fill="rgb(240,85,17)" fg:x="292523761" fg:w="3413855"/><text x="93.5564%" y="847.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (1,775,882 samples, 0.57%)</title><rect x="93.8289%" y="821" width="0.5665%" height="15" fill="rgb(206,108,45)" fg:x="294161734" fg:w="1775882"/><text x="94.0789%" y="831.50"></text></g><g><title>gimli::leb128::read::unsigned (1,775,882 samples, 0.57%)</title><rect x="93.8289%" y="805" width="0.5665%" height="15" fill="rgb(245,210,41)" fg:x="294161734" fg:w="1775882"/><text x="94.0789%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1237" width="0.7013%" height="15" fill="rgb(206,13,37)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1221" width="0.7013%" height="15" fill="rgb(250,61,18)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1205" width="0.7013%" height="15" fill="rgb(235,172,48)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1189" width="0.7013%" height="15" fill="rgb(249,201,17)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1173" width="0.7013%" height="15" fill="rgb(219,208,6)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1157" width="0.7013%" height="15" fill="rgb(248,31,23)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1141" width="0.7013%" height="15" fill="rgb(245,15,42)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1125" width="0.7013%" height="15" fill="rgb(222,217,39)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1109" width="0.7013%" height="15" fill="rgb(210,219,27)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1119.50"></text></g><g><title>pprof::report::flamegraph::_&lt;impl pprof::report::Report&gt;::flamegraph_with_options::_{{closure}} (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1093" width="0.7013%" height="15" fill="rgb(252,166,36)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1103.50"></text></g><g><title>core::fmt::Write::write_fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1077" width="0.7013%" height="15" fill="rgb(245,132,34)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1087.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1061" width="0.7013%" height="15" fill="rgb(236,54,3)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1071.50"></text></g><g><title>core::fmt::write (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1045" width="0.7013%" height="15" fill="rgb(241,173,43)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1029" width="0.7013%" height="15" fill="rgb(215,190,9)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1039.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="1013" width="0.7013%" height="15" fill="rgb(242,101,16)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1023.50"></text></g><g><title>&lt;pprof::frames::Symbol as core::fmt::Display&gt;::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="997" width="0.7013%" height="15" fill="rgb(223,190,21)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="1007.50"></text></g><g><title>pprof::frames::Symbol::name (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="981" width="0.7013%" height="15" fill="rgb(215,228,25)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="991.50"></text></g><g><title>symbolic_demangle::demangle (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="965" width="0.7013%" height="15" fill="rgb(225,36,22)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="975.50"></text></g><g><title>&lt;symbolic_common::types::Name as symbolic_demangle::Demangle&gt;::demangle (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="949" width="0.7013%" height="15" fill="rgb(251,106,46)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="959.50"></text></g><g><title>symbolic_demangle::try_demangle_rust (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="933" width="0.7013%" height="15" fill="rgb(208,90,1)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="943.50"></text></g><g><title>alloc::fmt::format (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="917" width="0.7013%" height="15" fill="rgb(243,10,4)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="901" width="0.7013%" height="15" fill="rgb(212,137,27)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="911.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="885" width="0.7013%" height="15" fill="rgb(231,220,49)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="895.50"></text></g><g><title>alloc::fmt::format::format_inner (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="869" width="0.7013%" height="15" fill="rgb(237,96,20)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="853" width="0.7013%" height="15" fill="rgb(239,229,30)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="837" width="0.7013%" height="15" fill="rgb(219,65,33)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="847.50"></text></g><g><title>core::fmt::write (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="821" width="0.7013%" height="15" fill="rgb(243,134,7)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="831.50"></text></g><g><title>core::fmt::run (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="805" width="0.7013%" height="15" fill="rgb(216,177,54)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="789" width="0.7013%" height="15" fill="rgb(211,160,20)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="799.50"></text></g><g><title>&lt;rustc_demangle::Demangle as core::fmt::Display&gt;::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="773" width="0.7013%" height="15" fill="rgb(239,85,39)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="757" width="0.7013%" height="15" fill="rgb(232,125,22)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="741" width="0.7013%" height="15" fill="rgb(244,57,34)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="751.50"></text></g><g><title>core::fmt::write (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="725" width="0.7013%" height="15" fill="rgb(214,203,32)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="735.50"></text></g><g><title>core::fmt::run (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="709" width="0.7013%" height="15" fill="rgb(207,58,43)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="693" width="0.7013%" height="15" fill="rgb(215,193,15)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="677" width="0.7013%" height="15" fill="rgb(232,15,44)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="687.50"></text></g><g><title>&lt;rustc_demangle::DemangleStyle as core::fmt::Display&gt;::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="661" width="0.7013%" height="15" fill="rgb(212,3,48)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="671.50"></text></g><g><title>&lt;rustc_demangle::legacy::Demangle as core::fmt::Display&gt;::fmt (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="645" width="0.7013%" height="15" fill="rgb(218,128,7)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="629" width="0.7013%" height="15" fill="rgb(226,216,39)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="613" width="0.7013%" height="15" fill="rgb(243,47,51)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="623.50"></text></g><g><title>alloc::string::String::push_str (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="597" width="0.7013%" height="15" fill="rgb(241,183,40)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="581" width="0.7013%" height="15" fill="rgb(231,217,32)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="565" width="0.7013%" height="15" fill="rgb(229,61,38)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="549" width="0.7013%" height="15" fill="rgb(225,210,5)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="533" width="0.7013%" height="15" fill="rgb(231,79,45)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="517" width="0.7013%" height="15" fill="rgb(224,100,7)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="501" width="0.7013%" height="15" fill="rgb(241,198,18)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="485" width="0.7013%" height="15" fill="rgb(252,97,53)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="469" width="0.7013%" height="15" fill="rgb(220,88,7)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="453" width="0.7013%" height="15" fill="rgb(213,176,14)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="463.50"></text></g><g><title>malloc (2,198,564 samples, 0.70%)</title><rect x="94.3953%" y="437" width="0.7013%" height="15" fill="rgb(246,73,7)" fg:x="295937616" fg:w="2198564"/><text x="94.6453%" y="447.50"></text></g><g><title>inferno::flamegraph::Rectangle::width_pct (74,957 samples, 0.02%)</title><rect x="95.1535%" y="1221" width="0.0239%" height="15" fill="rgb(245,64,36)" fg:x="298314570" fg:w="74957"/><text x="95.4035%" y="1231.50"></text></g><g><title>[libc.so.6] (294,244 samples, 0.09%)</title><rect x="95.1774%" y="1109" width="0.0939%" height="15" fill="rgb(245,80,10)" fg:x="298389527" fg:w="294244"/><text x="95.4274%" y="1119.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (57,403 samples, 0.02%)</title><rect x="95.2713%" y="1093" width="0.0183%" height="15" fill="rgb(232,107,50)" fg:x="298683771" fg:w="57403"/><text x="95.5213%" y="1103.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (57,403 samples, 0.02%)</title><rect x="95.2713%" y="1077" width="0.0183%" height="15" fill="rgb(253,3,0)" fg:x="298683771" fg:w="57403"/><text x="95.5213%" y="1087.50"></text></g><g><title>&lt;str_stack::Writer as core::fmt::Write&gt;::write_str (57,403 samples, 0.02%)</title><rect x="95.2713%" y="1061" width="0.0183%" height="15" fill="rgb(212,99,53)" fg:x="298683771" fg:w="57403"/><text x="95.5213%" y="1071.50"></text></g><g><title>core::num::bignum::Big32x40::from_u64 (847,521 samples, 0.27%)</title><rect x="95.3062%" y="1029" width="0.2703%" height="15" fill="rgb(249,111,54)" fg:x="298793289" fg:w="847521"/><text x="95.5562%" y="1039.50"></text></g><g><title>core::num::flt2dec::round_up (402,942 samples, 0.13%)</title><rect x="95.5765%" y="1029" width="0.1285%" height="15" fill="rgb(249,55,30)" fg:x="299640810" fg:w="402942"/><text x="95.8265%" y="1039.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (402,942 samples, 0.13%)</title><rect x="95.5765%" y="1013" width="0.1285%" height="15" fill="rgb(237,47,42)" fg:x="299640810" fg:w="402942"/><text x="95.8265%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (402,942 samples, 0.13%)</title><rect x="95.5765%" y="997" width="0.1285%" height="15" fill="rgb(211,20,18)" fg:x="299640810" fg:w="402942"/><text x="95.8265%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (402,942 samples, 0.13%)</title><rect x="95.5765%" y="981" width="0.1285%" height="15" fill="rgb(231,203,46)" fg:x="299640810" fg:w="402942"/><text x="95.8265%" y="991.50"></text></g><g><title>inferno::flamegraph::filled_rectangle (1,980,666 samples, 0.63%)</title><rect x="95.1774%" y="1221" width="0.6318%" height="15" fill="rgb(237,142,3)" fg:x="298389527" fg:w="1980666"/><text x="95.4274%" y="1231.50"></text></g><g><title>str_stack::StrStack::write_fmt (1,980,666 samples, 0.63%)</title><rect x="95.1774%" y="1205" width="0.6318%" height="15" fill="rgb(241,107,1)" fg:x="298389527" fg:w="1980666"/><text x="95.4274%" y="1215.50"></text></g><g><title>core::fmt::Write::write_fmt (1,980,666 samples, 0.63%)</title><rect x="95.1774%" y="1189" width="0.6318%" height="15" fill="rgb(229,83,13)" fg:x="298389527" fg:w="1980666"/><text x="95.4274%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1,980,666 samples, 0.63%)</title><rect x="95.1774%" y="1173" width="0.6318%" height="15" fill="rgb(241,91,40)" fg:x="298389527" fg:w="1980666"/><text x="95.4274%" y="1183.50"></text></g><g><title>core::fmt::write (1,980,666 samples, 0.63%)</title><rect x="95.1774%" y="1157" width="0.6318%" height="15" fill="rgb(225,3,45)" fg:x="298389527" fg:w="1980666"/><text x="95.4274%" y="1167.50"></text></g><g><title>core::fmt::run (1,980,666 samples, 0.63%)</title><rect x="95.1774%" y="1141" width="0.6318%" height="15" fill="rgb(244,223,14)" fg:x="298389527" fg:w="1980666"/><text x="95.4274%" y="1151.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1,980,666 samples, 0.63%)</title><rect x="95.1774%" y="1125" width="0.6318%" height="15" fill="rgb(224,124,37)" fg:x="298389527" fg:w="1980666"/><text x="95.4274%" y="1135.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (1,686,422 samples, 0.54%)</title><rect x="95.2713%" y="1109" width="0.5379%" height="15" fill="rgb(251,171,30)" fg:x="298683771" fg:w="1686422"/><text x="95.5213%" y="1119.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (1,629,019 samples, 0.52%)</title><rect x="95.2896%" y="1093" width="0.5196%" height="15" fill="rgb(236,46,54)" fg:x="298741174" fg:w="1629019"/><text x="95.5396%" y="1103.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,629,019 samples, 0.52%)</title><rect x="95.2896%" y="1077" width="0.5196%" height="15" fill="rgb(245,213,5)" fg:x="298741174" fg:w="1629019"/><text x="95.5396%" y="1087.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (1,629,019 samples, 0.52%)</title><rect x="95.2896%" y="1061" width="0.5196%" height="15" fill="rgb(230,144,27)" fg:x="298741174" fg:w="1629019"/><text x="95.5396%" y="1071.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (1,629,019 samples, 0.52%)</title><rect x="95.2896%" y="1045" width="0.5196%" height="15" fill="rgb(220,86,6)" fg:x="298741174" fg:w="1629019"/><text x="95.5396%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (326,441 samples, 0.10%)</title><rect x="95.7051%" y="1029" width="0.1041%" height="15" fill="rgb(240,20,13)" fg:x="300043752" fg:w="326441"/><text x="95.9551%" y="1039.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (326,441 samples, 0.10%)</title><rect x="95.7051%" y="1013" width="0.1041%" height="15" fill="rgb(217,89,34)" fg:x="300043752" fg:w="326441"/><text x="95.9551%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (326,441 samples, 0.10%)</title><rect x="95.7051%" y="997" width="0.1041%" height="15" fill="rgb(229,13,5)" fg:x="300043752" fg:w="326441"/><text x="95.9551%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1,912,930 samples, 0.61%)</title><rect x="95.9511%" y="1189" width="0.6102%" height="15" fill="rgb(244,67,35)" fg:x="300815205" fg:w="1912930"/><text x="96.2011%" y="1199.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (347,573 samples, 0.11%)</title><rect x="96.5613%" y="1189" width="0.1109%" height="15" fill="rgb(221,40,2)" fg:x="302728135" fg:w="347573"/><text x="96.8113%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (347,573 samples, 0.11%)</title><rect x="96.5613%" y="1173" width="0.1109%" height="15" fill="rgb(237,157,21)" fg:x="302728135" fg:w="347573"/><text x="96.8113%" y="1183.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (3,078,179 samples, 0.98%)</title><rect x="95.8234%" y="1205" width="0.9818%" height="15" fill="rgb(222,94,11)" fg:x="300414647" fg:w="3078179"/><text x="96.0734%" y="1215.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (417,118 samples, 0.13%)</title><rect x="96.6722%" y="1189" width="0.1330%" height="15" fill="rgb(249,113,6)" fg:x="303075708" fg:w="417118"/><text x="96.9222%" y="1199.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (417,118 samples, 0.13%)</title><rect x="96.6722%" y="1173" width="0.1330%" height="15" fill="rgb(238,137,36)" fg:x="303075708" fg:w="417118"/><text x="96.9222%" y="1183.50"></text></g><g><title>std::io::Write::write_all (151,388 samples, 0.05%)</title><rect x="96.7569%" y="1157" width="0.0483%" height="15" fill="rgb(210,102,26)" fg:x="303341438" fg:w="151388"/><text x="97.0069%" y="1167.50"></text></g><g><title>core::fmt::float::&lt;impl core::fmt::Display for f64&gt;::fmt (68,585 samples, 0.02%)</title><rect x="96.8052%" y="1109" width="0.0219%" height="15" fill="rgb(218,30,30)" fg:x="303492826" fg:w="68585"/><text x="97.0552%" y="1119.50"></text></g><g><title>core::fmt::Formatter::pad_formatted_parts (99,627 samples, 0.03%)</title><rect x="96.8271%" y="1093" width="0.0318%" height="15" fill="rgb(214,67,26)" fg:x="303561411" fg:w="99627"/><text x="97.0771%" y="1103.50"></text></g><g><title>inferno::flamegraph::svg::write_str (3,372,823 samples, 1.08%)</title><rect x="95.8092%" y="1221" width="1.0758%" height="15" fill="rgb(251,9,53)" fg:x="300370193" fg:w="3372823"/><text x="96.0592%" y="1231.50"></text></g><g><title>str_stack::StrStack::write_fmt (250,190 samples, 0.08%)</title><rect x="96.8052%" y="1205" width="0.0798%" height="15" fill="rgb(228,204,25)" fg:x="303492826" fg:w="250190"/><text x="97.0552%" y="1215.50"></text></g><g><title>core::fmt::Write::write_fmt (250,190 samples, 0.08%)</title><rect x="96.8052%" y="1189" width="0.0798%" height="15" fill="rgb(207,153,8)" fg:x="303492826" fg:w="250190"/><text x="97.0552%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (250,190 samples, 0.08%)</title><rect x="96.8052%" y="1173" width="0.0798%" height="15" fill="rgb(242,9,16)" fg:x="303492826" fg:w="250190"/><text x="97.0552%" y="1183.50"></text></g><g><title>core::fmt::write (250,190 samples, 0.08%)</title><rect x="96.8052%" y="1157" width="0.0798%" height="15" fill="rgb(217,211,10)" fg:x="303492826" fg:w="250190"/><text x="97.0552%" y="1167.50"></text></g><g><title>core::fmt::run (250,190 samples, 0.08%)</title><rect x="96.8052%" y="1141" width="0.0798%" height="15" fill="rgb(219,228,52)" fg:x="303492826" fg:w="250190"/><text x="97.0552%" y="1151.50"></text></g><g><title>core::fmt::rt::Argument::fmt (250,190 samples, 0.08%)</title><rect x="96.8052%" y="1125" width="0.0798%" height="15" fill="rgb(231,92,29)" fg:x="303492826" fg:w="250190"/><text x="97.0552%" y="1135.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (181,605 samples, 0.06%)</title><rect x="96.8271%" y="1109" width="0.0579%" height="15" fill="rgb(232,8,23)" fg:x="303561411" fg:w="181605"/><text x="97.0771%" y="1119.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (81,978 samples, 0.03%)</title><rect x="96.8589%" y="1093" width="0.0261%" height="15" fill="rgb(216,211,34)" fg:x="303661038" fg:w="81978"/><text x="97.1089%" y="1103.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (81,978 samples, 0.03%)</title><rect x="96.8589%" y="1077" width="0.0261%" height="15" fill="rgb(236,151,0)" fg:x="303661038" fg:w="81978"/><text x="97.1089%" y="1087.50"></text></g><g><title>&lt;str_stack::Writer as core::fmt::Write&gt;::write_str (81,978 samples, 0.03%)</title><rect x="96.8589%" y="1061" width="0.0261%" height="15" fill="rgb(209,168,3)" fg:x="303661038" fg:w="81978"/><text x="97.1089%" y="1071.50"></text></g><g><title>inferno::flamegraph::write_container_start (110,998 samples, 0.04%)</title><rect x="96.8850%" y="1221" width="0.0354%" height="15" fill="rgb(208,129,28)" fg:x="303743016" fg:w="110998"/><text x="97.1350%" y="1231.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (110,998 samples, 0.04%)</title><rect x="96.8850%" y="1205" width="0.0354%" height="15" fill="rgb(229,78,22)" fg:x="303743016" fg:w="110998"/><text x="97.1350%" y="1215.50"></text></g><g><title>alloc::string::String::from_utf8 (159,011 samples, 0.05%)</title><rect x="96.9204%" y="1173" width="0.0507%" height="15" fill="rgb(228,187,13)" fg:x="303854014" fg:w="159011"/><text x="97.1704%" y="1183.50"></text></g><g><title>core::str::converts::from_utf8 (159,011 samples, 0.05%)</title><rect x="96.9204%" y="1157" width="0.0507%" height="15" fill="rgb(240,119,24)" fg:x="303854014" fg:w="159011"/><text x="97.1704%" y="1167.50"></text></g><g><title>quick_xml::events::BytesText::new (337,401 samples, 0.11%)</title><rect x="96.9204%" y="1221" width="0.1076%" height="15" fill="rgb(209,194,42)" fg:x="303854014" fg:w="337401"/><text x="97.1704%" y="1231.50"></text></g><g><title>quick_xml::escapei::escape (337,401 samples, 0.11%)</title><rect x="96.9204%" y="1205" width="0.1076%" height="15" fill="rgb(247,200,46)" fg:x="303854014" fg:w="337401"/><text x="97.1704%" y="1215.50"></text></g><g><title>quick_xml::escapei::_escape (337,401 samples, 0.11%)</title><rect x="96.9204%" y="1189" width="0.1076%" height="15" fill="rgb(218,76,16)" fg:x="303854014" fg:w="337401"/><text x="97.1704%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (178,390 samples, 0.06%)</title><rect x="96.9711%" y="1173" width="0.0569%" height="15" fill="rgb(225,21,48)" fg:x="304013025" fg:w="178390"/><text x="97.2211%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (178,390 samples, 0.06%)</title><rect x="96.9711%" y="1157" width="0.0569%" height="15" fill="rgb(239,223,50)" fg:x="304013025" fg:w="178390"/><text x="97.2211%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (178,390 samples, 0.06%)</title><rect x="96.9711%" y="1141" width="0.0569%" height="15" fill="rgb(244,45,21)" fg:x="304013025" fg:w="178390"/><text x="97.2211%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (178,390 samples, 0.06%)</title><rect x="96.9711%" y="1125" width="0.0569%" height="15" fill="rgb(232,33,43)" fg:x="304013025" fg:w="178390"/><text x="97.2211%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (178,390 samples, 0.06%)</title><rect x="96.9711%" y="1109" width="0.0569%" height="15" fill="rgb(209,8,3)" fg:x="304013025" fg:w="178390"/><text x="97.2211%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (178,390 samples, 0.06%)</title><rect x="96.9711%" y="1093" width="0.0569%" height="15" fill="rgb(214,25,53)" fg:x="304013025" fg:w="178390"/><text x="97.2211%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (178,390 samples, 0.06%)</title><rect x="96.9711%" y="1077" width="0.0569%" height="15" fill="rgb(254,186,54)" fg:x="304013025" fg:w="178390"/><text x="97.2211%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (178,390 samples, 0.06%)</title><rect x="96.9711%" y="1061" width="0.0569%" height="15" fill="rgb(208,174,49)" fg:x="304013025" fg:w="178390"/><text x="97.2211%" y="1071.50"></text></g><g><title>&lt;quick_xml::events::BytesText as core::ops::deref::Deref&gt;::deref (366,354 samples, 0.12%)</title><rect x="97.0280%" y="1205" width="0.1169%" height="15" fill="rgb(233,191,51)" fg:x="304191415" fg:w="366354"/><text x="97.2780%" y="1215.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (366,354 samples, 0.12%)</title><rect x="97.0280%" y="1189" width="0.1169%" height="15" fill="rgb(222,134,10)" fg:x="304191415" fg:w="366354"/><text x="97.2780%" y="1199.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (605,422 samples, 0.19%)</title><rect x="97.0280%" y="1221" width="0.1931%" height="15" fill="rgb(230,226,20)" fg:x="304191415" fg:w="605422"/><text x="97.2780%" y="1231.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (239,068 samples, 0.08%)</title><rect x="97.1449%" y="1205" width="0.0763%" height="15" fill="rgb(251,111,25)" fg:x="304557769" fg:w="239068"/><text x="97.3949%" y="1215.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (239,068 samples, 0.08%)</title><rect x="97.1449%" y="1189" width="0.0763%" height="15" fill="rgb(224,40,46)" fg:x="304557769" fg:w="239068"/><text x="97.3949%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (38,789 samples, 0.01%)</title><rect x="97.2088%" y="1173" width="0.0124%" height="15" fill="rgb(236,108,47)" fg:x="304758048" fg:w="38789"/><text x="97.4588%" y="1183.50"></text></g><g><title>pprof::report::flamegraph::&lt;impl pprof::report::Report&gt;::flamegraph (9,001,089 samples, 2.87%)</title><rect x="94.3953%" y="1269" width="2.8711%" height="15" fill="rgb(234,93,0)" fg:x="295937616" fg:w="9001089"/><text x="94.6453%" y="1279.50">pp..</text></g><g><title>pprof::report::flamegraph::&lt;impl pprof::report::Report&gt;::flamegraph_with_options (9,001,089 samples, 2.87%)</title><rect x="94.3953%" y="1253" width="2.8711%" height="15" fill="rgb(224,213,32)" fg:x="295937616" fg:w="9001089"/><text x="94.6453%" y="1263.50">pp..</text></g><g><title>inferno::flamegraph::from_lines (6,802,525 samples, 2.17%)</title><rect x="95.0966%" y="1237" width="2.1698%" height="15" fill="rgb(251,11,48)" fg:x="298136180" fg:w="6802525"/><text x="95.3466%" y="1247.50">i..</text></g><g><title>str_stack::StrStack::write_fmt (141,868 samples, 0.05%)</title><rect x="97.2212%" y="1221" width="0.0453%" height="15" fill="rgb(236,173,5)" fg:x="304796837" fg:w="141868"/><text x="97.4712%" y="1231.50"></text></g><g><title>core::fmt::Write::write_fmt (141,868 samples, 0.05%)</title><rect x="97.2212%" y="1205" width="0.0453%" height="15" fill="rgb(230,95,12)" fg:x="304796837" fg:w="141868"/><text x="97.4712%" y="1215.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (141,868 samples, 0.05%)</title><rect x="97.2212%" y="1189" width="0.0453%" height="15" fill="rgb(232,209,1)" fg:x="304796837" fg:w="141868"/><text x="97.4712%" y="1199.50"></text></g><g><title>core::fmt::write (141,868 samples, 0.05%)</title><rect x="97.2212%" y="1173" width="0.0453%" height="15" fill="rgb(232,6,1)" fg:x="304796837" fg:w="141868"/><text x="97.4712%" y="1183.50"></text></g><g><title>&lt;str_stack::Writer as core::fmt::Write&gt;::write_str (141,868 samples, 0.05%)</title><rect x="97.2212%" y="1157" width="0.0453%" height="15" fill="rgb(210,224,50)" fg:x="304796837" fg:w="141868"/><text x="97.4712%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,251,005 samples, 0.40%)</title><rect x="97.2664%" y="1173" width="0.3990%" height="15" fill="rgb(228,127,35)" fg:x="304938705" fg:w="1251005"/><text x="97.5164%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,919,375 samples, 0.93%)</title><rect x="97.2664%" y="1253" width="0.9312%" height="15" fill="rgb(245,102,45)" fg:x="304938705" fg:w="2919375"/><text x="97.5164%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,919,375 samples, 0.93%)</title><rect x="97.2664%" y="1237" width="0.9312%" height="15" fill="rgb(214,1,49)" fg:x="304938705" fg:w="2919375"/><text x="97.5164%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,919,375 samples, 0.93%)</title><rect x="97.2664%" y="1221" width="0.9312%" height="15" fill="rgb(226,163,40)" fg:x="304938705" fg:w="2919375"/><text x="97.5164%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,919,375 samples, 0.93%)</title><rect x="97.2664%" y="1205" width="0.9312%" height="15" fill="rgb(239,212,28)" fg:x="304938705" fg:w="2919375"/><text x="97.5164%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,919,375 samples, 0.93%)</title><rect x="97.2664%" y="1189" width="0.9312%" height="15" fill="rgb(220,20,13)" fg:x="304938705" fg:w="2919375"/><text x="97.5164%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1173" width="0.5322%" height="15" fill="rgb(210,164,35)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1157" width="0.5322%" height="15" fill="rgb(248,109,41)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1141" width="0.5322%" height="15" fill="rgb(238,23,50)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1125" width="0.5322%" height="15" fill="rgb(211,48,49)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1109" width="0.5322%" height="15" fill="rgb(223,36,21)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1119.50"></text></g><g><title>profile::demean_impl::_{{closure}} (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1093" width="0.5322%" height="15" fill="rgb(207,123,46)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1077" width="0.5322%" height="15" fill="rgb(240,218,32)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1061" width="0.5322%" height="15" fill="rgb(252,5,43)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1045" width="0.5322%" height="15" fill="rgb(252,84,19)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1029" width="0.5322%" height="15" fill="rgb(243,152,39)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="1013" width="0.5322%" height="15" fill="rgb(234,160,15)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="997" width="0.5322%" height="15" fill="rgb(237,34,20)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="981" width="0.5322%" height="15" fill="rgb(229,97,13)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="965" width="0.5322%" height="15" fill="rgb(234,71,50)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="949" width="0.5322%" height="15" fill="rgb(253,155,4)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="933" width="0.5322%" height="15" fill="rgb(222,185,37)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="917" width="0.5322%" height="15" fill="rgb(251,177,13)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="901" width="0.5322%" height="15" fill="rgb(250,179,40)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="911.50"></text></g><g><title>core::ptr::write (1,668,370 samples, 0.53%)</title><rect x="97.6654%" y="885" width="0.5322%" height="15" fill="rgb(242,44,2)" fg:x="306189710" fg:w="1668370"/><text x="97.9154%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (967,303 samples, 0.31%)</title><rect x="98.1976%" y="1253" width="0.3085%" height="15" fill="rgb(216,177,13)" fg:x="307858080" fg:w="967303"/><text x="98.4476%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (967,303 samples, 0.31%)</title><rect x="98.1976%" y="1237" width="0.3085%" height="15" fill="rgb(216,106,43)" fg:x="307858080" fg:w="967303"/><text x="98.4476%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (967,303 samples, 0.31%)</title><rect x="98.1976%" y="1221" width="0.3085%" height="15" fill="rgb(216,183,2)" fg:x="307858080" fg:w="967303"/><text x="98.4476%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (967,303 samples, 0.31%)</title><rect x="98.1976%" y="1205" width="0.3085%" height="15" fill="rgb(249,75,3)" fg:x="307858080" fg:w="967303"/><text x="98.4476%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (967,303 samples, 0.31%)</title><rect x="98.1976%" y="1189" width="0.3085%" height="15" fill="rgb(219,67,39)" fg:x="307858080" fg:w="967303"/><text x="98.4476%" y="1199.50"></text></g><g><title>&lt;ndarray::iterators::Iter&lt;A,D&gt; as core::iter::traits::iterator::Iterator&gt;::fold (967,303 samples, 0.31%)</title><rect x="98.1976%" y="1173" width="0.3085%" height="15" fill="rgb(253,228,2)" fg:x="307858080" fg:w="967303"/><text x="98.4476%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (967,303 samples, 0.31%)</title><rect x="98.1976%" y="1157" width="0.3085%" height="15" fill="rgb(235,138,27)" fg:x="307858080" fg:w="967303"/><text x="98.4476%" y="1167.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (379,635 samples, 0.12%)</title><rect x="98.3850%" y="1141" width="0.1211%" height="15" fill="rgb(236,97,51)" fg:x="308445748" fg:w="379635"/><text x="98.6350%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::_{{closure}} (379,635 samples, 0.12%)</title><rect x="98.3850%" y="1125" width="0.1211%" height="15" fill="rgb(240,80,30)" fg:x="308445748" fg:w="379635"/><text x="98.6350%" y="1135.50"></text></g><g><title>core::cmp::max_by (379,635 samples, 0.12%)</title><rect x="98.3850%" y="1109" width="0.1211%" height="15" fill="rgb(230,178,19)" fg:x="308445748" fg:w="379635"/><text x="98.6350%" y="1119.50"></text></g><g><title>_start (91,473,289 samples, 29.18%)</title><rect x="69.8146%" y="1381" width="29.1773%" height="15" fill="rgb(210,190,27)" fg:x="218874938" fg:w="91473289"/><text x="70.0646%" y="1391.50">_start</text></g><g><title>__libc_start_main (91,473,289 samples, 29.18%)</title><rect x="69.8146%" y="1365" width="29.1773%" height="15" fill="rgb(222,107,31)" fg:x="218874938" fg:w="91473289"/><text x="70.0646%" y="1375.50">__libc_start_main</text></g><g><title>[libc.so.6] (91,473,289 samples, 29.18%)</title><rect x="69.8146%" y="1349" width="29.1773%" height="15" fill="rgb(216,127,34)" fg:x="218874938" fg:w="91473289"/><text x="70.0646%" y="1359.50">[libc.so.6]</text></g><g><title>main (91,473,289 samples, 29.18%)</title><rect x="69.8146%" y="1333" width="29.1773%" height="15" fill="rgb(234,116,52)" fg:x="218874938" fg:w="91473289"/><text x="70.0646%" y="1343.50">main</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (90,971,785 samples, 29.02%)</title><rect x="69.9746%" y="1317" width="29.0173%" height="15" fill="rgb(222,124,15)" fg:x="219376442" fg:w="90971785"/><text x="70.2246%" y="1327.50">std::sys::backtrace::__rust_begin_short_backtra..</text></g><g><title>core::ops::function::FnOnce::call_once (90,971,785 samples, 29.02%)</title><rect x="69.9746%" y="1301" width="29.0173%" height="15" fill="rgb(231,179,28)" fg:x="219376442" fg:w="90971785"/><text x="70.2246%" y="1311.50">core::ops::function::FnOnce::call_once</text></g><g><title>profile::main (90,971,785 samples, 29.02%)</title><rect x="69.9746%" y="1285" width="29.0173%" height="15" fill="rgb(226,93,45)" fg:x="219376442" fg:w="90971785"/><text x="70.2246%" y="1295.50">profile::main</text></g><g><title>profile::demean_impl (5,409,522 samples, 1.73%)</title><rect x="97.2664%" y="1269" width="1.7255%" height="15" fill="rgb(215,8,51)" fg:x="304938705" fg:w="5409522"/><text x="97.5164%" y="1279.50"></text></g><g><title>rayon::iter::ParallelIterator::for_each (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1253" width="0.4857%" height="15" fill="rgb(223,106,5)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1263.50"></text></g><g><title>rayon::iter::for_each::for_each (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1237" width="0.4857%" height="15" fill="rgb(250,191,5)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1247.50"></text></g><g><title>&lt;rayon::iter::enumerate::Enumerate&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1221" width="0.4857%" height="15" fill="rgb(242,132,44)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1205" width="0.4857%" height="15" fill="rgb(251,152,29)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1215.50"></text></g><g><title>&lt;rayon::iter::enumerate::Enumerate&lt;I&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1189" width="0.4857%" height="15" fill="rgb(218,179,5)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1199.50"></text></g><g><title>&lt;ndarray::parallel::par::Parallel&lt;ndarray::iterators::AxisIterMut&lt;A,D&gt;&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1173" width="0.4857%" height="15" fill="rgb(227,67,19)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1183.50"></text></g><g><title>&lt;&lt;rayon::iter::enumerate::Enumerate&lt;I&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer::Callback&lt;CB&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1157" width="0.4857%" height="15" fill="rgb(233,119,31)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1167.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1141" width="0.4857%" height="15" fill="rgb(241,120,22)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1125" width="0.4857%" height="15" fill="rgb(224,102,30)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::new (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1109" width="0.4857%" height="15" fill="rgb(210,164,37)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Splitter::new (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1093" width="0.4857%" height="15" fill="rgb(226,191,16)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1103.50"></text></g><g><title>rayon_core::current_num_threads (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1077" width="0.4857%" height="15" fill="rgb(214,40,45)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1087.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1061" width="0.4857%" height="15" fill="rgb(244,29,26)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1071.50"></text></g><g><title>rayon_core::registry::global_registry (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1045" width="0.4857%" height="15" fill="rgb(216,16,5)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1055.50"></text></g><g><title>rayon_core::registry::set_global_registry (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1029" width="0.4857%" height="15" fill="rgb(249,76,35)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1039.50"></text></g><g><title>std::sync::poison::once::Once::call_once (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="1013" width="0.4857%" height="15" fill="rgb(207,11,44)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1023.50"></text></g><g><title>std::sys::sync::once::futex::Once::call (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="997" width="0.4857%" height="15" fill="rgb(228,190,49)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="1007.50"></text></g><g><title>std::sync::poison::once::Once::call_once::_{{closure}} (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="981" width="0.4857%" height="15" fill="rgb(214,173,12)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="991.50"></text></g><g><title>rayon_core::registry::set_global_registry::_{{closure}} (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="965" width="0.4857%" height="15" fill="rgb(218,26,35)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="949" width="0.4857%" height="15" fill="rgb(220,200,19)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="959.50"></text></g><g><title>rayon_core::registry::default_global_registry (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="933" width="0.4857%" height="15" fill="rgb(239,95,49)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="943.50"></text></g><g><title>rayon_core::registry::Registry::new (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="917" width="0.4857%" height="15" fill="rgb(235,85,53)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="927.50"></text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::get_num_threads (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="901" width="0.4857%" height="15" fill="rgb(233,133,31)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="911.50"></text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::get_num_threads::_{{closure}} (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="885" width="0.4857%" height="15" fill="rgb(218,25,20)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="895.50"></text></g><g><title>std::thread::available_parallelism (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="869" width="0.4857%" height="15" fill="rgb(252,210,38)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="879.50"></text></g><g><title>std::sys::pal::unix::thread::available_parallelism (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="853" width="0.4857%" height="15" fill="rgb(242,134,21)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="863.50"></text></g><g><title>std::sys::pal::unix::thread::cgroups::quota (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="837" width="0.4857%" height="15" fill="rgb(213,28,48)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="821" width="0.4857%" height="15" fill="rgb(250,196,2)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="831.50"></text></g><g><title>std::sys::pal::unix::thread::cgroups::quota::_{{closure}} (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="805" width="0.4857%" height="15" fill="rgb(227,5,17)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="789" width="0.4857%" height="15" fill="rgb(221,226,24)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="773" width="0.4857%" height="15" fill="rgb(211,5,48)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="757" width="0.4857%" height="15" fill="rgb(219,150,6)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="741" width="0.4857%" height="15" fill="rgb(251,46,16)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="725" width="0.4857%" height="15" fill="rgb(220,204,40)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="709" width="0.4857%" height="15" fill="rgb(211,85,2)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="693" width="0.4857%" height="15" fill="rgb(229,17,7)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="677" width="0.4857%" height="15" fill="rgb(239,72,28)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="661" width="0.4857%" height="15" fill="rgb(230,47,54)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="645" width="0.4857%" height="15" fill="rgb(214,50,8)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="629" width="0.4857%" height="15" fill="rgb(216,198,43)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="639.50"></text></g><g><title>malloc (1,522,844 samples, 0.49%)</title><rect x="98.5061%" y="613" width="0.4857%" height="15" fill="rgb(234,20,35)" fg:x="308825383" fg:w="1522844"/><text x="98.7561%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Collector&lt;pprof::frames::UnresolvedFrames&gt;&gt; (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1381" width="0.4573%" height="15" fill="rgb(254,45,19)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::HashCounter&lt;pprof::frames::UnresolvedFrames&gt;&gt; (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1365" width="0.4573%" height="15" fill="rgb(219,14,44)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt;&gt; (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1349" width="0.4573%" height="15" fill="rgb(217,220,26)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt; (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1333" width="0.4573%" height="15" fill="rgb(213,158,28)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;&gt; (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1317" width="0.4573%" height="15" fill="rgb(252,51,52)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt;&gt; (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1301" width="0.4573%" height="15" fill="rgb(246,89,16)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1285" width="0.4573%" height="15" fill="rgb(216,158,49)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1269" width="0.4573%" height="15" fill="rgb(236,107,19)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1253" width="0.4573%" height="15" fill="rgb(228,185,30)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1263.50"></text></g><g><title>__rustc::__rdl_dealloc (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1237" width="0.4573%" height="15" fill="rgb(246,134,8)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1247.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1221" width="0.4573%" height="15" fill="rgb(214,143,50)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1231.50"></text></g><g><title>cfree (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1205" width="0.4573%" height="15" fill="rgb(228,75,8)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1215.50"></text></g><g><title>[libc.so.6] (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1189" width="0.4573%" height="15" fill="rgb(207,175,4)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1199.50"></text></g><g><title>[libc.so.6] (1,433,658 samples, 0.46%)</title><rect x="98.9919%" y="1173" width="0.4573%" height="15" fill="rgb(205,108,24)" fg:x="310348227" fg:w="1433658"/><text x="99.2419%" y="1183.50"></text></g><g><title>malloc (501,504 samples, 0.16%)</title><rect x="99.4492%" y="1381" width="0.1600%" height="15" fill="rgb(244,120,49)" fg:x="311781885" fg:w="501504"/><text x="99.6992%" y="1391.50"></text></g><g><title>std::io::Write::write_all (444,526 samples, 0.14%)</title><rect x="99.6091%" y="1381" width="0.1418%" height="15" fill="rgb(223,47,38)" fg:x="312283389" fg:w="444526"/><text x="99.8591%" y="1391.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (444,526 samples, 0.14%)</title><rect x="99.6091%" y="1365" width="0.1418%" height="15" fill="rgb(229,179,11)" fg:x="312283389" fg:w="444526"/><text x="99.8591%" y="1375.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (444,526 samples, 0.14%)</title><rect x="99.6091%" y="1349" width="0.1418%" height="15" fill="rgb(231,122,1)" fg:x="312283389" fg:w="444526"/><text x="99.8591%" y="1359.50"></text></g><g><title>std::sys::fs::unix::File::write (444,526 samples, 0.14%)</title><rect x="99.6091%" y="1333" width="0.1418%" height="15" fill="rgb(245,119,9)" fg:x="312283389" fg:w="444526"/><text x="99.8591%" y="1343.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (444,526 samples, 0.14%)</title><rect x="99.6091%" y="1317" width="0.1418%" height="15" fill="rgb(241,163,25)" fg:x="312283389" fg:w="444526"/><text x="99.8591%" y="1327.50"></text></g><g><title>[libc.so.6] (444,526 samples, 0.14%)</title><rect x="99.6091%" y="1301" width="0.1418%" height="15" fill="rgb(217,214,3)" fg:x="312283389" fg:w="444526"/><text x="99.8591%" y="1311.50"></text></g><g><title>all (313,508,763 samples, 100%)</title><rect x="0.0000%" y="1413" width="100.0000%" height="15" fill="rgb(240,86,28)" fg:x="0" fg:w="313508763"/><text x="0.2500%" y="1423.50"></text></g><g><title>profile (313,508,763 samples, 100.00%)</title><rect x="0.0000%" y="1397" width="100.0000%" height="15" fill="rgb(215,47,9)" fg:x="0" fg:w="313508763"/><text x="0.2500%" y="1407.50">profile</text></g><g><title>write (780,848 samples, 0.25%)</title><rect x="99.7509%" y="1381" width="0.2491%" height="15" fill="rgb(252,25,45)" fg:x="312727915" fg:w="780848"/><text x="100.0009%" y="1391.50"></text></g></svg></svg>