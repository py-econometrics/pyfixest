<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="8230" onload="init(evt)" viewBox="0 0 1200 8230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="8230" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="8213.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="8213.00"> </text><svg id="frames" x="10" width="1180" total_samples="17527178247"><g><title>core::option::Option&lt;T&gt;::as_mut (2,886,249 samples, 0.02%)</title><rect x="0.0000%" y="53" width="0.0165%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2886249"/><text x="0.2500%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8149" width="0.0279%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8159.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8133" width="0.0279%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8143.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8117" width="0.0279%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8127.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8101" width="0.0279%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8111.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8085" width="0.0279%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8095.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8069" width="0.0279%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8079.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8053" width="0.0279%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8063.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8037" width="0.0279%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8047.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8021" width="0.0279%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8031.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="8005" width="0.0279%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="8015.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7989" width="0.0279%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7999.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7973" width="0.0279%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7983.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7957" width="0.0279%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7967.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7941" width="0.0279%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7951.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7925" width="0.0279%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7935.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7909" width="0.0279%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7919.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7893" width="0.0279%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7903.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7877" width="0.0279%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7887.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7861" width="0.0279%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7871.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7845" width="0.0279%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7855.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7829" width="0.0279%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7839.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7813" width="0.0279%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7823.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7797" width="0.0279%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7807.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7781" width="0.0279%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7791.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7765" width="0.0279%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7775.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7749" width="0.0279%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7759.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7733" width="0.0279%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7743.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7717" width="0.0279%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7727.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7701" width="0.0279%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7711.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7685" width="0.0279%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7695.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7669" width="0.0279%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7679.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7653" width="0.0279%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7663.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7637" width="0.0279%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7647.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7621" width="0.0279%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7631.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7605" width="0.0279%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7615.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7589" width="0.0279%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7599.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7573" width="0.0279%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7583.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7557" width="0.0279%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7567.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7541" width="0.0279%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7551.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7525" width="0.0279%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7535.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7509" width="0.0279%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7519.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7493" width="0.0279%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7503.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7477" width="0.0279%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7487.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7461" width="0.0279%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7471.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7445" width="0.0279%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7455.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7429" width="0.0279%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7439.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7413" width="0.0279%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7423.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7397" width="0.0279%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7407.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7381" width="0.0279%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7391.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7365" width="0.0279%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7375.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7349" width="0.0279%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7359.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7333" width="0.0279%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7343.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7317" width="0.0279%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7327.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7301" width="0.0279%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7285" width="0.0279%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7295.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7269" width="0.0279%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7279.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7253" width="0.0279%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7263.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7237" width="0.0279%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7221" width="0.0279%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7231.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7205" width="0.0279%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7215.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7189" width="0.0279%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7199.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7173" width="0.0279%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7157" width="0.0279%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7167.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7141" width="0.0279%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7151.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7125" width="0.0279%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7135.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7109" width="0.0279%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7093" width="0.0279%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7103.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7077" width="0.0279%" height="15" fill="rgb(246,177,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7087.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7061" width="0.0279%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7071.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7045" width="0.0279%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7029" width="0.0279%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7039.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="7013" width="0.0279%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7023.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6997" width="0.0279%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="7007.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6981" width="0.0279%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6965" width="0.0279%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6975.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6949" width="0.0279%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6959.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6933" width="0.0279%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6943.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6917" width="0.0279%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6901" width="0.0279%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6911.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6885" width="0.0279%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6895.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6869" width="0.0279%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6879.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6853" width="0.0279%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6837" width="0.0279%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6847.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6821" width="0.0279%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6831.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6805" width="0.0279%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6815.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6789" width="0.0279%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6773" width="0.0279%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6783.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6757" width="0.0279%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6767.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6741" width="0.0279%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6751.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6725" width="0.0279%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6709" width="0.0279%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6719.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6693" width="0.0279%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6703.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6677" width="0.0279%" height="15" fill="rgb(230,116,27)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6687.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6661" width="0.0279%" height="15" fill="rgb(228,99,48)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6645" width="0.0279%" height="15" fill="rgb(253,11,6)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6655.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6629" width="0.0279%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6639.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6613" width="0.0279%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6623.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6597" width="0.0279%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6581" width="0.0279%" height="15" fill="rgb(216,164,2)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6591.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6565" width="0.0279%" height="15" fill="rgb(220,129,5)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6549" width="0.0279%" height="15" fill="rgb(242,17,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6559.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6533" width="0.0279%" height="15" fill="rgb(242,107,0)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6517" width="0.0279%" height="15" fill="rgb(251,28,31)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6527.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6501" width="0.0279%" height="15" fill="rgb(233,223,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6511.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6485" width="0.0279%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6495.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6469" width="0.0279%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6453" width="0.0279%" height="15" fill="rgb(244,5,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6463.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6437" width="0.0279%" height="15" fill="rgb(226,81,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6447.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6421" width="0.0279%" height="15" fill="rgb(247,70,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6431.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6405" width="0.0279%" height="15" fill="rgb(212,68,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6389" width="0.0279%" height="15" fill="rgb(240,187,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6399.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6373" width="0.0279%" height="15" fill="rgb(223,113,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6357" width="0.0279%" height="15" fill="rgb(206,192,2)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6367.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6341" width="0.0279%" height="15" fill="rgb(241,108,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6325" width="0.0279%" height="15" fill="rgb(247,173,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6335.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6309" width="0.0279%" height="15" fill="rgb(224,114,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6319.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6293" width="0.0279%" height="15" fill="rgb(245,159,27)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6303.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6277" width="0.0279%" height="15" fill="rgb(245,172,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6287.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6261" width="0.0279%" height="15" fill="rgb(236,23,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6271.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6245" width="0.0279%" height="15" fill="rgb(205,117,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6229" width="0.0279%" height="15" fill="rgb(237,72,25)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6239.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6213" width="0.0279%" height="15" fill="rgb(244,70,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6223.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6197" width="0.0279%" height="15" fill="rgb(217,125,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6207.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6181" width="0.0279%" height="15" fill="rgb(235,36,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6191.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6165" width="0.0279%" height="15" fill="rgb(251,123,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6175.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6149" width="0.0279%" height="15" fill="rgb(221,13,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6159.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6133" width="0.0279%" height="15" fill="rgb(238,131,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6143.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6117" width="0.0279%" height="15" fill="rgb(211,50,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6127.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6101" width="0.0279%" height="15" fill="rgb(245,182,24)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6111.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6085" width="0.0279%" height="15" fill="rgb(242,14,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6095.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6069" width="0.0279%" height="15" fill="rgb(246,228,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6079.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6053" width="0.0279%" height="15" fill="rgb(213,55,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6063.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6037" width="0.0279%" height="15" fill="rgb(209,9,3)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6047.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6021" width="0.0279%" height="15" fill="rgb(230,59,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6031.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="6005" width="0.0279%" height="15" fill="rgb(209,121,21)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="6015.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5989" width="0.0279%" height="15" fill="rgb(220,109,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5999.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5973" width="0.0279%" height="15" fill="rgb(232,18,1)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5983.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5957" width="0.0279%" height="15" fill="rgb(215,41,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5967.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5941" width="0.0279%" height="15" fill="rgb(224,123,36)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5951.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5925" width="0.0279%" height="15" fill="rgb(240,125,3)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5935.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5909" width="0.0279%" height="15" fill="rgb(205,98,50)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5919.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5893" width="0.0279%" height="15" fill="rgb(205,185,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5903.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5877" width="0.0279%" height="15" fill="rgb(238,207,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5887.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5861" width="0.0279%" height="15" fill="rgb(213,199,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5871.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5845" width="0.0279%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5855.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5829" width="0.0279%" height="15" fill="rgb(207,46,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5839.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5813" width="0.0279%" height="15" fill="rgb(241,35,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5823.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5797" width="0.0279%" height="15" fill="rgb(243,32,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5807.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5781" width="0.0279%" height="15" fill="rgb(247,202,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5791.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5765" width="0.0279%" height="15" fill="rgb(219,102,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5775.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5749" width="0.0279%" height="15" fill="rgb(243,110,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5759.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5733" width="0.0279%" height="15" fill="rgb(222,74,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5743.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5717" width="0.0279%" height="15" fill="rgb(216,99,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5727.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5701" width="0.0279%" height="15" fill="rgb(226,22,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5711.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5685" width="0.0279%" height="15" fill="rgb(217,163,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5695.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5669" width="0.0279%" height="15" fill="rgb(213,25,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5679.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5653" width="0.0279%" height="15" fill="rgb(252,105,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5663.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5637" width="0.0279%" height="15" fill="rgb(220,39,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5647.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5621" width="0.0279%" height="15" fill="rgb(229,68,48)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5631.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5605" width="0.0279%" height="15" fill="rgb(252,8,32)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5615.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5589" width="0.0279%" height="15" fill="rgb(223,20,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5599.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5573" width="0.0279%" height="15" fill="rgb(229,81,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5583.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5557" width="0.0279%" height="15" fill="rgb(236,28,36)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5567.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5541" width="0.0279%" height="15" fill="rgb(249,185,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5551.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5525" width="0.0279%" height="15" fill="rgb(249,174,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5535.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5509" width="0.0279%" height="15" fill="rgb(233,201,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5519.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5493" width="0.0279%" height="15" fill="rgb(221,78,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5503.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5477" width="0.0279%" height="15" fill="rgb(250,127,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5487.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5461" width="0.0279%" height="15" fill="rgb(230,49,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5471.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5445" width="0.0279%" height="15" fill="rgb(229,67,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5455.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5429" width="0.0279%" height="15" fill="rgb(249,83,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5439.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5413" width="0.0279%" height="15" fill="rgb(215,43,3)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5423.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5397" width="0.0279%" height="15" fill="rgb(238,154,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5407.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5381" width="0.0279%" height="15" fill="rgb(219,56,2)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5391.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5365" width="0.0279%" height="15" fill="rgb(233,0,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5375.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5349" width="0.0279%" height="15" fill="rgb(235,30,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5359.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5333" width="0.0279%" height="15" fill="rgb(250,79,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5343.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5317" width="0.0279%" height="15" fill="rgb(211,146,34)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5327.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5301" width="0.0279%" height="15" fill="rgb(228,22,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5311.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5285" width="0.0279%" height="15" fill="rgb(235,168,5)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5295.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5269" width="0.0279%" height="15" fill="rgb(221,155,16)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5279.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5253" width="0.0279%" height="15" fill="rgb(215,215,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5237" width="0.0279%" height="15" fill="rgb(223,4,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5247.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5221" width="0.0279%" height="15" fill="rgb(234,103,6)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5231.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5205" width="0.0279%" height="15" fill="rgb(227,97,0)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5215.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5189" width="0.0279%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5199.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5173" width="0.0279%" height="15" fill="rgb(228,201,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5183.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5157" width="0.0279%" height="15" fill="rgb(222,22,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5167.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5141" width="0.0279%" height="15" fill="rgb(237,53,32)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5151.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5125" width="0.0279%" height="15" fill="rgb(233,25,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5135.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5109" width="0.0279%" height="15" fill="rgb(210,40,34)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5119.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5093" width="0.0279%" height="15" fill="rgb(241,220,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5103.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5077" width="0.0279%" height="15" fill="rgb(235,28,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5087.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5061" width="0.0279%" height="15" fill="rgb(210,56,17)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5045" width="0.0279%" height="15" fill="rgb(224,130,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5055.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5029" width="0.0279%" height="15" fill="rgb(235,212,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5039.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="5013" width="0.0279%" height="15" fill="rgb(223,33,50)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5023.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4997" width="0.0279%" height="15" fill="rgb(219,149,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="5007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4981" width="0.0279%" height="15" fill="rgb(250,156,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4991.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4965" width="0.0279%" height="15" fill="rgb(216,193,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4975.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4949" width="0.0279%" height="15" fill="rgb(216,135,14)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4959.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4933" width="0.0279%" height="15" fill="rgb(241,47,5)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4917" width="0.0279%" height="15" fill="rgb(233,42,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4927.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4901" width="0.0279%" height="15" fill="rgb(231,13,6)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4911.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4885" width="0.0279%" height="15" fill="rgb(207,181,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4895.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4869" width="0.0279%" height="15" fill="rgb(254,173,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4879.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4853" width="0.0279%" height="15" fill="rgb(221,1,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4863.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4837" width="0.0279%" height="15" fill="rgb(206,124,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4847.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4821" width="0.0279%" height="15" fill="rgb(249,21,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4831.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4805" width="0.0279%" height="15" fill="rgb(222,201,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4789" width="0.0279%" height="15" fill="rgb(235,61,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4799.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4773" width="0.0279%" height="15" fill="rgb(219,207,3)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4783.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4757" width="0.0279%" height="15" fill="rgb(222,56,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4767.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4741" width="0.0279%" height="15" fill="rgb(239,76,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4725" width="0.0279%" height="15" fill="rgb(231,124,27)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4735.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4709" width="0.0279%" height="15" fill="rgb(249,195,6)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4719.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4693" width="0.0279%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4703.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4677" width="0.0279%" height="15" fill="rgb(206,201,31)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4661" width="0.0279%" height="15" fill="rgb(231,57,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4671.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4645" width="0.0279%" height="15" fill="rgb(248,177,22)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4629" width="0.0279%" height="15" fill="rgb(215,211,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4639.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4613" width="0.0279%" height="15" fill="rgb(241,128,51)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4597" width="0.0279%" height="15" fill="rgb(227,165,31)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4607.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4581" width="0.0279%" height="15" fill="rgb(228,167,24)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4565" width="0.0279%" height="15" fill="rgb(228,143,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4575.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4549" width="0.0279%" height="15" fill="rgb(249,149,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4533" width="0.0279%" height="15" fill="rgb(243,35,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4543.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4517" width="0.0279%" height="15" fill="rgb(246,89,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4501" width="0.0279%" height="15" fill="rgb(233,213,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4511.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4485" width="0.0279%" height="15" fill="rgb(233,141,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4469" width="0.0279%" height="15" fill="rgb(239,167,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4479.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4453" width="0.0279%" height="15" fill="rgb(209,217,16)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4437" width="0.0279%" height="15" fill="rgb(219,88,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4447.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4421" width="0.0279%" height="15" fill="rgb(220,193,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4405" width="0.0279%" height="15" fill="rgb(230,90,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4415.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4389" width="0.0279%" height="15" fill="rgb(252,106,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4373" width="0.0279%" height="15" fill="rgb(206,74,20)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4383.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4357" width="0.0279%" height="15" fill="rgb(230,138,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4341" width="0.0279%" height="15" fill="rgb(235,182,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4351.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4325" width="0.0279%" height="15" fill="rgb(242,16,51)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4335.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4309" width="0.0279%" height="15" fill="rgb(248,9,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4319.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4293" width="0.0279%" height="15" fill="rgb(210,31,22)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4303.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4277" width="0.0279%" height="15" fill="rgb(239,54,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4287.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4261" width="0.0279%" height="15" fill="rgb(230,99,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4271.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4245" width="0.0279%" height="15" fill="rgb(253,106,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4255.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4229" width="0.0279%" height="15" fill="rgb(213,46,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4239.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4213" width="0.0279%" height="15" fill="rgb(215,133,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4223.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4197" width="0.0279%" height="15" fill="rgb(213,28,5)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4207.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4181" width="0.0279%" height="15" fill="rgb(215,77,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4191.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4165" width="0.0279%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4175.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4149" width="0.0279%" height="15" fill="rgb(208,67,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4159.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4133" width="0.0279%" height="15" fill="rgb(219,133,21)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4143.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4117" width="0.0279%" height="15" fill="rgb(246,46,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4127.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4101" width="0.0279%" height="15" fill="rgb(246,185,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4111.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4085" width="0.0279%" height="15" fill="rgb(252,136,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4095.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4069" width="0.0279%" height="15" fill="rgb(219,138,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4079.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4053" width="0.0279%" height="15" fill="rgb(211,51,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4063.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4037" width="0.0279%" height="15" fill="rgb(247,221,28)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4047.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4021" width="0.0279%" height="15" fill="rgb(251,222,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4031.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="4005" width="0.0279%" height="15" fill="rgb(217,162,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="4015.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3989" width="0.0279%" height="15" fill="rgb(229,93,14)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3999.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3973" width="0.0279%" height="15" fill="rgb(209,67,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3983.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3957" width="0.0279%" height="15" fill="rgb(213,87,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3967.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3941" width="0.0279%" height="15" fill="rgb(205,151,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3951.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3925" width="0.0279%" height="15" fill="rgb(253,215,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3935.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3909" width="0.0279%" height="15" fill="rgb(221,220,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3919.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3893" width="0.0279%" height="15" fill="rgb(218,133,21)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3903.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3877" width="0.0279%" height="15" fill="rgb(221,193,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3887.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3861" width="0.0279%" height="15" fill="rgb(240,128,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3871.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3845" width="0.0279%" height="15" fill="rgb(253,114,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3855.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3829" width="0.0279%" height="15" fill="rgb(215,223,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3839.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3813" width="0.0279%" height="15" fill="rgb(248,225,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3823.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3797" width="0.0279%" height="15" fill="rgb(250,108,0)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3807.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3781" width="0.0279%" height="15" fill="rgb(228,208,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3791.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3765" width="0.0279%" height="15" fill="rgb(244,45,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3775.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3749" width="0.0279%" height="15" fill="rgb(207,125,25)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3759.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3733" width="0.0279%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3743.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3717" width="0.0279%" height="15" fill="rgb(249,80,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3727.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3701" width="0.0279%" height="15" fill="rgb(221,65,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3711.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3685" width="0.0279%" height="15" fill="rgb(235,49,36)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3695.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3669" width="0.0279%" height="15" fill="rgb(225,32,20)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3679.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3653" width="0.0279%" height="15" fill="rgb(215,141,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3637" width="0.0279%" height="15" fill="rgb(250,160,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3647.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3621" width="0.0279%" height="15" fill="rgb(216,222,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3631.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3605" width="0.0279%" height="15" fill="rgb(234,217,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3615.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3589" width="0.0279%" height="15" fill="rgb(207,178,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3599.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3573" width="0.0279%" height="15" fill="rgb(221,136,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3583.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3557" width="0.0279%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3567.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3541" width="0.0279%" height="15" fill="rgb(249,222,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3551.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3525" width="0.0279%" height="15" fill="rgb(244,185,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3535.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3509" width="0.0279%" height="15" fill="rgb(236,202,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3519.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3493" width="0.0279%" height="15" fill="rgb(250,229,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3503.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3477" width="0.0279%" height="15" fill="rgb(206,174,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3487.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3461" width="0.0279%" height="15" fill="rgb(211,33,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3471.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3445" width="0.0279%" height="15" fill="rgb(245,58,50)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3455.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3429" width="0.0279%" height="15" fill="rgb(244,68,36)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3439.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3413" width="0.0279%" height="15" fill="rgb(232,229,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3423.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3397" width="0.0279%" height="15" fill="rgb(254,30,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3407.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3381" width="0.0279%" height="15" fill="rgb(235,160,14)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3391.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3365" width="0.0279%" height="15" fill="rgb(212,155,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3375.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3349" width="0.0279%" height="15" fill="rgb(226,2,50)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3359.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3333" width="0.0279%" height="15" fill="rgb(234,177,6)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3343.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3317" width="0.0279%" height="15" fill="rgb(217,24,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3327.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3301" width="0.0279%" height="15" fill="rgb(220,13,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3311.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3285" width="0.0279%" height="15" fill="rgb(239,221,27)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3295.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3269" width="0.0279%" height="15" fill="rgb(222,198,25)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3253" width="0.0279%" height="15" fill="rgb(211,99,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3263.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3237" width="0.0279%" height="15" fill="rgb(232,111,31)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3247.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3221" width="0.0279%" height="15" fill="rgb(245,82,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3231.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3205" width="0.0279%" height="15" fill="rgb(227,149,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3215.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3189" width="0.0279%" height="15" fill="rgb(218,36,50)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3199.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3173" width="0.0279%" height="15" fill="rgb(226,80,48)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3183.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3157" width="0.0279%" height="15" fill="rgb(238,224,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3167.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3141" width="0.0279%" height="15" fill="rgb(241,136,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3125" width="0.0279%" height="15" fill="rgb(208,32,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3135.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3109" width="0.0279%" height="15" fill="rgb(207,135,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3119.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3093" width="0.0279%" height="15" fill="rgb(206,86,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3103.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3077" width="0.0279%" height="15" fill="rgb(245,177,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3061" width="0.0279%" height="15" fill="rgb(206,64,50)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3071.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3045" width="0.0279%" height="15" fill="rgb(234,36,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3055.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3029" width="0.0279%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3039.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="3013" width="0.0279%" height="15" fill="rgb(210,75,36)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2997" width="0.0279%" height="15" fill="rgb(229,88,21)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="3007.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2981" width="0.0279%" height="15" fill="rgb(252,204,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2991.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2965" width="0.0279%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2975.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2949" width="0.0279%" height="15" fill="rgb(221,76,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2933" width="0.0279%" height="15" fill="rgb(225,139,18)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2943.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2917" width="0.0279%" height="15" fill="rgb(230,137,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2927.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2901" width="0.0279%" height="15" fill="rgb(212,28,1)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2911.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2885" width="0.0279%" height="15" fill="rgb(248,164,17)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2869" width="0.0279%" height="15" fill="rgb(222,171,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2879.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2853" width="0.0279%" height="15" fill="rgb(243,84,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2863.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2837" width="0.0279%" height="15" fill="rgb(252,49,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2847.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2821" width="0.0279%" height="15" fill="rgb(215,19,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2805" width="0.0279%" height="15" fill="rgb(238,81,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2815.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2789" width="0.0279%" height="15" fill="rgb(210,199,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2799.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2773" width="0.0279%" height="15" fill="rgb(244,192,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2783.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2757" width="0.0279%" height="15" fill="rgb(226,211,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2741" width="0.0279%" height="15" fill="rgb(236,162,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2751.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2725" width="0.0279%" height="15" fill="rgb(220,229,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2735.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2709" width="0.0279%" height="15" fill="rgb(250,87,22)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2719.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2693" width="0.0279%" height="15" fill="rgb(239,43,17)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2677" width="0.0279%" height="15" fill="rgb(231,177,25)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2687.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2661" width="0.0279%" height="15" fill="rgb(219,179,1)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2671.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2645" width="0.0279%" height="15" fill="rgb(238,219,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2655.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2629" width="0.0279%" height="15" fill="rgb(232,167,36)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2613" width="0.0279%" height="15" fill="rgb(244,19,51)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2623.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2597" width="0.0279%" height="15" fill="rgb(224,6,22)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2581" width="0.0279%" height="15" fill="rgb(224,145,5)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2591.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2565" width="0.0279%" height="15" fill="rgb(234,130,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2549" width="0.0279%" height="15" fill="rgb(254,6,2)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2559.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2533" width="0.0279%" height="15" fill="rgb(208,96,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2517" width="0.0279%" height="15" fill="rgb(239,3,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2527.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2501" width="0.0279%" height="15" fill="rgb(233,210,1)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2485" width="0.0279%" height="15" fill="rgb(244,137,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2495.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2469" width="0.0279%" height="15" fill="rgb(240,136,2)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2453" width="0.0279%" height="15" fill="rgb(239,18,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2463.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2437" width="0.0279%" height="15" fill="rgb(218,185,22)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2421" width="0.0279%" height="15" fill="rgb(225,218,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2431.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2405" width="0.0279%" height="15" fill="rgb(230,182,32)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2415.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2389" width="0.0279%" height="15" fill="rgb(242,56,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2399.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2373" width="0.0279%" height="15" fill="rgb(233,99,24)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2357" width="0.0279%" height="15" fill="rgb(234,209,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2367.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2341" width="0.0279%" height="15" fill="rgb(227,7,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2325" width="0.0279%" height="15" fill="rgb(245,203,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2335.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2309" width="0.0279%" height="15" fill="rgb(238,205,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2293" width="0.0279%" height="15" fill="rgb(231,56,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2303.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2277" width="0.0279%" height="15" fill="rgb(244,186,29)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2287.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2261" width="0.0279%" height="15" fill="rgb(234,111,31)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2271.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2245" width="0.0279%" height="15" fill="rgb(241,149,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2229" width="0.0279%" height="15" fill="rgb(249,206,44)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2239.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2213" width="0.0279%" height="15" fill="rgb(251,153,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2223.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2197" width="0.0279%" height="15" fill="rgb(239,152,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2207.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2181" width="0.0279%" height="15" fill="rgb(249,139,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2165" width="0.0279%" height="15" fill="rgb(244,64,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2175.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2149" width="0.0279%" height="15" fill="rgb(216,46,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2159.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2133" width="0.0279%" height="15" fill="rgb(250,74,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2143.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2117" width="0.0279%" height="15" fill="rgb(249,42,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2127.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2101" width="0.0279%" height="15" fill="rgb(242,149,17)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2111.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2085" width="0.0279%" height="15" fill="rgb(244,29,21)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2069" width="0.0279%" height="15" fill="rgb(220,130,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2079.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2053" width="0.0279%" height="15" fill="rgb(211,67,2)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2063.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2037" width="0.0279%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2047.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2021" width="0.0279%" height="15" fill="rgb(246,142,3)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2031.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="2005" width="0.0279%" height="15" fill="rgb(241,25,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="2015.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1989" width="0.0279%" height="15" fill="rgb(242,119,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1999.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1973" width="0.0279%" height="15" fill="rgb(241,98,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1983.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1957" width="0.0279%" height="15" fill="rgb(254,28,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1941" width="0.0279%" height="15" fill="rgb(241,142,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1951.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1925" width="0.0279%" height="15" fill="rgb(222,85,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1935.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1909" width="0.0279%" height="15" fill="rgb(210,85,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1919.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1893" width="0.0279%" height="15" fill="rgb(224,206,25)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1877" width="0.0279%" height="15" fill="rgb(243,201,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1887.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1861" width="0.0279%" height="15" fill="rgb(236,59,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1871.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1845" width="0.0279%" height="15" fill="rgb(254,179,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1855.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1829" width="0.0279%" height="15" fill="rgb(226,14,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1813" width="0.0279%" height="15" fill="rgb(244,27,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1823.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1797" width="0.0279%" height="15" fill="rgb(235,35,32)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1807.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1781" width="0.0279%" height="15" fill="rgb(218,68,31)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1791.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1765" width="0.0279%" height="15" fill="rgb(207,120,37)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1749" width="0.0279%" height="15" fill="rgb(227,98,0)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1759.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1733" width="0.0279%" height="15" fill="rgb(207,7,3)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1743.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1717" width="0.0279%" height="15" fill="rgb(206,98,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1727.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1701" width="0.0279%" height="15" fill="rgb(217,5,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1685" width="0.0279%" height="15" fill="rgb(235,190,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1695.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1669" width="0.0279%" height="15" fill="rgb(247,86,24)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1679.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1653" width="0.0279%" height="15" fill="rgb(205,101,16)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1663.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1637" width="0.0279%" height="15" fill="rgb(246,168,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1621" width="0.0279%" height="15" fill="rgb(231,114,1)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1631.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1605" width="0.0279%" height="15" fill="rgb(207,184,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1615.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1589" width="0.0279%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1599.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1573" width="0.0279%" height="15" fill="rgb(212,188,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1557" width="0.0279%" height="15" fill="rgb(223,154,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1567.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1541" width="0.0279%" height="15" fill="rgb(251,22,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1525" width="0.0279%" height="15" fill="rgb(229,209,22)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1535.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1509" width="0.0279%" height="15" fill="rgb(234,138,34)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1493" width="0.0279%" height="15" fill="rgb(212,95,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1503.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1477" width="0.0279%" height="15" fill="rgb(240,179,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1487.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1461" width="0.0279%" height="15" fill="rgb(240,163,11)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1471.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1445" width="0.0279%" height="15" fill="rgb(236,37,12)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1429" width="0.0279%" height="15" fill="rgb(232,164,16)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1439.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1413" width="0.0279%" height="15" fill="rgb(244,205,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1423.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1397" width="0.0279%" height="15" fill="rgb(223,117,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1407.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1381" width="0.0279%" height="15" fill="rgb(244,107,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1365" width="0.0279%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1375.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1349" width="0.0279%" height="15" fill="rgb(228,84,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1359.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1333" width="0.0279%" height="15" fill="rgb(254,188,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1343.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1317" width="0.0279%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1301" width="0.0279%" height="15" fill="rgb(216,84,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1311.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1285" width="0.0279%" height="15" fill="rgb(214,194,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1269" width="0.0279%" height="15" fill="rgb(249,28,3)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1279.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1253" width="0.0279%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1237" width="0.0279%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1247.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1221" width="0.0279%" height="15" fill="rgb(213,201,24)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1205" width="0.0279%" height="15" fill="rgb(248,116,28)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1215.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1189" width="0.0279%" height="15" fill="rgb(219,72,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1173" width="0.0279%" height="15" fill="rgb(209,138,14)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1183.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1157" width="0.0279%" height="15" fill="rgb(222,18,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1141" width="0.0279%" height="15" fill="rgb(213,199,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1151.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1125" width="0.0279%" height="15" fill="rgb(250,110,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1109" width="0.0279%" height="15" fill="rgb(248,123,6)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1119.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1093" width="0.0279%" height="15" fill="rgb(206,91,31)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1077" width="0.0279%" height="15" fill="rgb(211,154,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1087.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1061" width="0.0279%" height="15" fill="rgb(225,148,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1045" width="0.0279%" height="15" fill="rgb(220,160,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1055.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1029" width="0.0279%" height="15" fill="rgb(213,52,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="1013" width="0.0279%" height="15" fill="rgb(243,137,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1023.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="997" width="0.0279%" height="15" fill="rgb(230,79,13)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="981" width="0.0279%" height="15" fill="rgb(247,105,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="991.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="965" width="0.0279%" height="15" fill="rgb(223,179,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="949" width="0.0279%" height="15" fill="rgb(218,9,34)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="959.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="933" width="0.0279%" height="15" fill="rgb(222,106,8)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="917" width="0.0279%" height="15" fill="rgb(211,220,0)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="927.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="901" width="0.0279%" height="15" fill="rgb(229,52,16)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="885" width="0.0279%" height="15" fill="rgb(212,155,18)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="895.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="869" width="0.0279%" height="15" fill="rgb(242,21,14)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="853" width="0.0279%" height="15" fill="rgb(222,19,48)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="863.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="837" width="0.0279%" height="15" fill="rgb(232,45,27)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="821" width="0.0279%" height="15" fill="rgb(249,103,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="831.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="805" width="0.0279%" height="15" fill="rgb(246,81,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="789" width="0.0279%" height="15" fill="rgb(252,33,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="799.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="773" width="0.0279%" height="15" fill="rgb(209,212,41)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="757" width="0.0279%" height="15" fill="rgb(207,154,6)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="767.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="741" width="0.0279%" height="15" fill="rgb(223,64,47)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="725" width="0.0279%" height="15" fill="rgb(211,161,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="735.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="709" width="0.0279%" height="15" fill="rgb(219,138,40)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="693" width="0.0279%" height="15" fill="rgb(241,228,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="703.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="677" width="0.0279%" height="15" fill="rgb(223,209,38)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="661" width="0.0279%" height="15" fill="rgb(236,164,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="671.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="645" width="0.0279%" height="15" fill="rgb(231,15,5)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="629" width="0.0279%" height="15" fill="rgb(252,35,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="639.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="613" width="0.0279%" height="15" fill="rgb(248,181,18)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="597" width="0.0279%" height="15" fill="rgb(233,39,42)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="607.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="581" width="0.0279%" height="15" fill="rgb(238,110,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="565" width="0.0279%" height="15" fill="rgb(233,195,10)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="575.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="549" width="0.0279%" height="15" fill="rgb(254,105,3)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="533" width="0.0279%" height="15" fill="rgb(221,225,9)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="543.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="517" width="0.0279%" height="15" fill="rgb(224,227,45)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="501" width="0.0279%" height="15" fill="rgb(229,198,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="511.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="485" width="0.0279%" height="15" fill="rgb(206,209,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="469" width="0.0279%" height="15" fill="rgb(245,195,53)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="479.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="453" width="0.0279%" height="15" fill="rgb(240,92,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="437" width="0.0279%" height="15" fill="rgb(207,40,23)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="447.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="421" width="0.0279%" height="15" fill="rgb(223,111,35)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="405" width="0.0279%" height="15" fill="rgb(229,147,28)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="415.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="389" width="0.0279%" height="15" fill="rgb(211,29,28)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="373" width="0.0279%" height="15" fill="rgb(228,72,33)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="383.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="357" width="0.0279%" height="15" fill="rgb(205,214,31)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="341" width="0.0279%" height="15" fill="rgb(224,111,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="351.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="325" width="0.0279%" height="15" fill="rgb(253,21,26)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="309" width="0.0279%" height="15" fill="rgb(245,139,43)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="319.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="293" width="0.0279%" height="15" fill="rgb(252,170,7)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="277" width="0.0279%" height="15" fill="rgb(231,118,14)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="287.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="261" width="0.0279%" height="15" fill="rgb(238,83,0)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="271.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="245" width="0.0279%" height="15" fill="rgb(221,39,39)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="255.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="229" width="0.0279%" height="15" fill="rgb(222,119,46)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="213" width="0.0279%" height="15" fill="rgb(222,165,49)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="223.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="197" width="0.0279%" height="15" fill="rgb(219,113,52)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="207.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="181" width="0.0279%" height="15" fill="rgb(214,7,15)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="191.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="165" width="0.0279%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="149" width="0.0279%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="159.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="133" width="0.0279%" height="15" fill="rgb(213,208,19)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="143.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="117" width="0.0279%" height="15" fill="rgb(233,156,4)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="127.50"></text></g><g><title>alloc::boxed::iter::&lt;impl core::iter::traits::iterator::Iterator for alloc::boxed::Box&lt;I,A&gt;&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="101" width="0.0279%" height="15" fill="rgb(207,194,5)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="85" width="0.0279%" height="15" fill="rgb(206,111,30)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="95.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (4,888,294 samples, 0.03%)</title><rect x="0.0000%" y="69" width="0.0279%" height="15" fill="rgb(243,70,54)" fg:x="0" fg:w="4888294"/><text x="0.2500%" y="79.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2,002,045 samples, 0.01%)</title><rect x="0.0165%" y="53" width="0.0114%" height="15" fill="rgb(242,28,8)" fg:x="2886249" fg:w="2002045"/><text x="0.2665%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2,002,045 samples, 0.01%)</title><rect x="0.0165%" y="37" width="0.0114%" height="15" fill="rgb(219,106,18)" fg:x="2886249" fg:w="2002045"/><text x="0.2665%" y="47.50"></text></g><g><title>[[stack]] (2,216,287 samples, 0.01%)</title><rect x="0.0341%" y="8149" width="0.0126%" height="15" fill="rgb(244,222,10)" fg:x="5982820" fg:w="2216287"/><text x="0.2841%" y="8159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (31,600,780 samples, 0.18%)</title><rect x="3.3114%" y="7333" width="0.1803%" height="15" fill="rgb(236,179,52)" fg:x="580394306" fg:w="31600780"/><text x="3.5614%" y="7343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (31,600,780 samples, 0.18%)</title><rect x="3.3114%" y="7317" width="0.1803%" height="15" fill="rgb(213,23,39)" fg:x="580394306" fg:w="31600780"/><text x="3.5614%" y="7327.50"></text></g><g><title>core::ptr::write (31,600,780 samples, 0.18%)</title><rect x="3.3114%" y="7301" width="0.1803%" height="15" fill="rgb(238,48,10)" fg:x="580394306" fg:w="31600780"/><text x="3.5614%" y="7311.50"></text></g><g><title>[unknown] (17,903,740 samples, 0.10%)</title><rect x="3.3895%" y="7285" width="0.1021%" height="15" fill="rgb(251,196,23)" fg:x="594091346" fg:w="17903740"/><text x="3.6395%" y="7295.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (64,578,155 samples, 0.37%)</title><rect x="3.3114%" y="7349" width="0.3684%" height="15" fill="rgb(250,152,24)" fg:x="580394306" fg:w="64578155"/><text x="3.5614%" y="7359.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (32,977,375 samples, 0.19%)</title><rect x="3.4917%" y="7333" width="0.1881%" height="15" fill="rgb(209,150,17)" fg:x="611995086" fg:w="32977375"/><text x="3.7417%" y="7343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77,849,199 samples, 0.44%)</title><rect x="3.3114%" y="7365" width="0.4442%" height="15" fill="rgb(234,202,34)" fg:x="580394306" fg:w="77849199"/><text x="3.5614%" y="7375.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (13,271,044 samples, 0.08%)</title><rect x="3.6798%" y="7349" width="0.0757%" height="15" fill="rgb(253,148,53)" fg:x="644972461" fg:w="13271044"/><text x="3.9298%" y="7359.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (24,319,245 samples, 0.14%)</title><rect x="3.7556%" y="7301" width="0.1388%" height="15" fill="rgb(218,129,16)" fg:x="658243505" fg:w="24319245"/><text x="4.0056%" y="7311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (554,299,393 samples, 3.16%)</title><rect x="3.7556%" y="7333" width="3.1625%" height="15" fill="rgb(216,85,19)" fg:x="658243505" fg:w="554299393"/><text x="4.0056%" y="7343.50">cor..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (554,299,393 samples, 3.16%)</title><rect x="3.7556%" y="7317" width="3.1625%" height="15" fill="rgb(235,228,7)" fg:x="658243505" fg:w="554299393"/><text x="4.0056%" y="7327.50">all..</text></g><g><title>core::ptr::write (529,980,148 samples, 3.02%)</title><rect x="3.8943%" y="7301" width="3.0238%" height="15" fill="rgb(245,175,0)" fg:x="682562750" fg:w="529980148"/><text x="4.1443%" y="7311.50">cor..</text></g><g><title>[unknown] (23,892,245 samples, 0.14%)</title><rect x="6.7818%" y="7285" width="0.1363%" height="15" fill="rgb(208,168,36)" fg:x="1188650653" fg:w="23892245"/><text x="7.0318%" y="7295.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (18,554,363 samples, 0.11%)</title><rect x="7.1590%" y="7301" width="0.1059%" height="15" fill="rgb(246,171,24)" fg:x="1254778248" fg:w="18554363"/><text x="7.4090%" y="7311.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (18,554,363 samples, 0.11%)</title><rect x="7.1590%" y="7285" width="0.1059%" height="15" fill="rgb(215,142,24)" fg:x="1254778248" fg:w="18554363"/><text x="7.4090%" y="7295.50"></text></g><g><title>ndarray::dimension::stride_offset (9,443,651 samples, 0.05%)</title><rect x="7.2110%" y="7269" width="0.0539%" height="15" fill="rgb(250,187,7)" fg:x="1263888960" fg:w="9443651"/><text x="7.4610%" y="7279.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (617,665,659 samples, 3.52%)</title><rect x="3.7556%" y="7349" width="3.5240%" height="15" fill="rgb(228,66,33)" fg:x="658243505" fg:w="617665659"/><text x="4.0056%" y="7359.50">cor..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (63,366,266 samples, 0.36%)</title><rect x="6.9181%" y="7333" width="0.3615%" height="15" fill="rgb(234,215,21)" fg:x="1212542898" fg:w="63366266"/><text x="7.1681%" y="7343.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (21,130,916 samples, 0.12%)</title><rect x="7.1590%" y="7317" width="0.1206%" height="15" fill="rgb(222,191,20)" fg:x="1254778248" fg:w="21130916"/><text x="7.4090%" y="7327.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2,576,553 samples, 0.01%)</title><rect x="7.2649%" y="7301" width="0.0147%" height="15" fill="rgb(245,79,54)" fg:x="1273332611" fg:w="2576553"/><text x="7.5149%" y="7311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (698,171,245 samples, 3.98%)</title><rect x="3.3114%" y="7493" width="3.9834%" height="15" fill="rgb(240,10,37)" fg:x="580394306" fg:w="698171245"/><text x="3.5614%" y="7503.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (698,171,245 samples, 3.98%)</title><rect x="3.3114%" y="7477" width="3.9834%" height="15" fill="rgb(214,192,32)" fg:x="580394306" fg:w="698171245"/><text x="3.5614%" y="7487.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (698,171,245 samples, 3.98%)</title><rect x="3.3114%" y="7461" width="3.9834%" height="15" fill="rgb(209,36,54)" fg:x="580394306" fg:w="698171245"/><text x="3.5614%" y="7471.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (698,171,245 samples, 3.98%)</title><rect x="3.3114%" y="7445" width="3.9834%" height="15" fill="rgb(220,10,11)" fg:x="580394306" fg:w="698171245"/><text x="3.5614%" y="7455.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (698,171,245 samples, 3.98%)</title><rect x="3.3114%" y="7429" width="3.9834%" height="15" fill="rgb(221,106,17)" fg:x="580394306" fg:w="698171245"/><text x="3.5614%" y="7439.50">&lt;all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (698,171,245 samples, 3.98%)</title><rect x="3.3114%" y="7413" width="3.9834%" height="15" fill="rgb(251,142,44)" fg:x="580394306" fg:w="698171245"/><text x="3.5614%" y="7423.50">allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (698,171,245 samples, 3.98%)</title><rect x="3.3114%" y="7397" width="3.9834%" height="15" fill="rgb(238,13,15)" fg:x="580394306" fg:w="698171245"/><text x="3.5614%" y="7407.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (698,171,245 samples, 3.98%)</title><rect x="3.3114%" y="7381" width="3.9834%" height="15" fill="rgb(208,107,27)" fg:x="580394306" fg:w="698171245"/><text x="3.5614%" y="7391.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (620,322,046 samples, 3.54%)</title><rect x="3.7556%" y="7365" width="3.5392%" height="15" fill="rgb(205,136,37)" fg:x="658243505" fg:w="620322046"/><text x="4.0056%" y="7375.50">cor..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,656,387 samples, 0.02%)</title><rect x="7.2796%" y="7349" width="0.0152%" height="15" fill="rgb(250,205,27)" fg:x="1275909164" fg:w="2656387"/><text x="7.5296%" y="7359.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,656,387 samples, 0.02%)</title><rect x="7.2796%" y="7333" width="0.0152%" height="15" fill="rgb(210,80,43)" fg:x="1275909164" fg:w="2656387"/><text x="7.5296%" y="7343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,656,387 samples, 0.02%)</title><rect x="7.2796%" y="7317" width="0.0152%" height="15" fill="rgb(247,160,36)" fg:x="1275909164" fg:w="2656387"/><text x="7.5296%" y="7327.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (466,301,016 samples, 2.66%)</title><rect x="7.2948%" y="7493" width="2.6604%" height="15" fill="rgb(234,13,49)" fg:x="1278565551" fg:w="466301016"/><text x="7.5448%" y="7503.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (466,301,016 samples, 2.66%)</title><rect x="7.2948%" y="7477" width="2.6604%" height="15" fill="rgb(234,122,0)" fg:x="1278565551" fg:w="466301016"/><text x="7.5448%" y="7487.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (466,301,016 samples, 2.66%)</title><rect x="7.2948%" y="7461" width="2.6604%" height="15" fill="rgb(207,146,38)" fg:x="1278565551" fg:w="466301016"/><text x="7.5448%" y="7471.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (466,301,016 samples, 2.66%)</title><rect x="7.2948%" y="7445" width="2.6604%" height="15" fill="rgb(207,177,25)" fg:x="1278565551" fg:w="466301016"/><text x="7.5448%" y="7455.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (466,301,016 samples, 2.66%)</title><rect x="7.2948%" y="7429" width="2.6604%" height="15" fill="rgb(211,178,42)" fg:x="1278565551" fg:w="466301016"/><text x="7.5448%" y="7439.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (167,823,853 samples, 0.96%)</title><rect x="8.9977%" y="7413" width="0.9575%" height="15" fill="rgb(230,69,54)" fg:x="1577042714" fg:w="167823853"/><text x="9.2477%" y="7423.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (167,823,853 samples, 0.96%)</title><rect x="8.9977%" y="7397" width="0.9575%" height="15" fill="rgb(214,135,41)" fg:x="1577042714" fg:w="167823853"/><text x="9.2477%" y="7407.50"></text></g><g><title>[unknown] (11,597,734 samples, 0.07%)</title><rect x="9.8890%" y="7381" width="0.0662%" height="15" fill="rgb(237,67,25)" fg:x="1733268833" fg:w="11597734"/><text x="10.1390%" y="7391.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (70,091,545 samples, 0.40%)</title><rect x="10.2246%" y="7445" width="0.3999%" height="15" fill="rgb(222,189,50)" fg:x="1792088704" fg:w="70091545"/><text x="10.4746%" y="7455.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (70,091,545 samples, 0.40%)</title><rect x="10.2246%" y="7429" width="0.3999%" height="15" fill="rgb(245,148,34)" fg:x="1792088704" fg:w="70091545"/><text x="10.4746%" y="7439.50"></text></g><g><title>profile::internal::sad_converged (134,235,481 samples, 0.77%)</title><rect x="9.9552%" y="7493" width="0.7659%" height="15" fill="rgb(222,29,6)" fg:x="1744866567" fg:w="134235481"/><text x="10.2052%" y="7503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (134,235,481 samples, 0.77%)</title><rect x="9.9552%" y="7477" width="0.7659%" height="15" fill="rgb(221,189,43)" fg:x="1744866567" fg:w="134235481"/><text x="10.2052%" y="7487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (134,235,481 samples, 0.77%)</title><rect x="9.9552%" y="7461" width="0.7659%" height="15" fill="rgb(207,36,27)" fg:x="1744866567" fg:w="134235481"/><text x="10.2052%" y="7471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16,921,799 samples, 0.10%)</title><rect x="10.6245%" y="7445" width="0.0965%" height="15" fill="rgb(217,90,24)" fg:x="1862180249" fg:w="16921799"/><text x="10.8745%" y="7455.50"></text></g><g><title>profile::internal::sad_converged::_{{closure}} (16,921,799 samples, 0.10%)</title><rect x="10.6245%" y="7429" width="0.0965%" height="15" fill="rgb(224,66,35)" fg:x="1862180249" fg:w="16921799"/><text x="10.8745%" y="7439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7477" width="0.0179%" height="15" fill="rgb(221,13,50)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7461" width="0.0179%" height="15" fill="rgb(236,68,49)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7445" width="0.0179%" height="15" fill="rgb(229,146,28)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7429" width="0.0179%" height="15" fill="rgb(225,31,38)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7413" width="0.0179%" height="15" fill="rgb(250,208,3)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7397" width="0.0179%" height="15" fill="rgb(246,54,23)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7381" width="0.0179%" height="15" fill="rgb(243,76,11)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7365" width="0.0179%" height="15" fill="rgb(245,21,50)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7375.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7349" width="0.0179%" height="15" fill="rgb(228,9,43)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7359.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (3,132,816 samples, 0.02%)</title><rect x="10.7211%" y="7333" width="0.0179%" height="15" fill="rgb(208,100,47)" fg:x="1879102048" fg:w="3132816"/><text x="10.9711%" y="7343.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (586,888,784 samples, 3.35%)</title><rect x="10.7389%" y="7397" width="3.3484%" height="15" fill="rgb(232,26,8)" fg:x="1882234864" fg:w="586888784"/><text x="10.9889%" y="7407.50">&lt;us..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (586,888,784 samples, 3.35%)</title><rect x="10.7389%" y="7381" width="3.3484%" height="15" fill="rgb(216,166,38)" fg:x="1882234864" fg:w="586888784"/><text x="10.9889%" y="7391.50">cor..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (599,906,681 samples, 3.42%)</title><rect x="10.7389%" y="7429" width="3.4227%" height="15" fill="rgb(251,202,51)" fg:x="1882234864" fg:w="599906681"/><text x="10.9889%" y="7439.50">cor..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (599,906,681 samples, 3.42%)</title><rect x="10.7389%" y="7413" width="3.4227%" height="15" fill="rgb(254,216,34)" fg:x="1882234864" fg:w="599906681"/><text x="10.9889%" y="7423.50">&lt;co..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (13,017,897 samples, 0.07%)</title><rect x="14.0874%" y="7397" width="0.0743%" height="15" fill="rgb(251,32,27)" fg:x="2469123648" fg:w="13017897"/><text x="14.3374%" y="7407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (767,963,119 samples, 4.38%)</title><rect x="26.6026%" y="7397" width="4.3816%" height="15" fill="rgb(208,127,28)" fg:x="4662681437" fg:w="767963119"/><text x="26.8526%" y="7407.50">&lt;allo..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (767,963,119 samples, 4.38%)</title><rect x="26.6026%" y="7381" width="4.3816%" height="15" fill="rgb(224,137,22)" fg:x="4662681437" fg:w="767963119"/><text x="26.8526%" y="7391.50">core:..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (767,963,119 samples, 4.38%)</title><rect x="26.6026%" y="7365" width="4.3816%" height="15" fill="rgb(254,70,32)" fg:x="4662681437" fg:w="767963119"/><text x="26.8526%" y="7375.50">&lt;usiz..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7637" width="27.7132%" height="15" fill="rgb(229,75,37)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7647.50">rayon::iter::plumbing::Producer::fold_with</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7621" width="27.7132%" height="15" fill="rgb(252,64,23)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7631.50">&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7605" width="27.7132%" height="15" fill="rgb(232,162,48)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7615.50">core::iter::traits::iterator::Iterator::for_..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7589" width="27.7132%" height="15" fill="rgb(246,160,12)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7599.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7573" width="27.7132%" height="15" fill="rgb(247,166,0)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7583.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7557" width="27.7132%" height="15" fill="rgb(249,219,21)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7567.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7541" width="27.7132%" height="15" fill="rgb(205,209,3)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7551.50">core::iter::traits::iterator::Iterator::for_..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7525" width="27.7132%" height="15" fill="rgb(243,44,1)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7535.50">core::ops::function::impls::&lt;impl core::ops:..</text></g><g><title>profile::demean_impl::_{{closure}} (4,857,344,116 samples, 27.71%)</title><rect x="3.3114%" y="7509" width="27.7132%" height="15" fill="rgb(206,159,16)" fg:x="580394306" fg:w="4857344116"/><text x="3.5614%" y="7519.50">profile::demean_impl::_{{closure}}</text></g><g><title>profile::internal::subtract_weighted_group_mean (3,558,636,374 samples, 20.30%)</title><rect x="10.7211%" y="7493" width="20.3035%" height="15" fill="rgb(244,77,30)" fg:x="1879102048" fg:w="3558636374"/><text x="10.9711%" y="7503.50">profile::internal::subtract_weig..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,555,503,558 samples, 20.29%)</title><rect x="10.7389%" y="7477" width="20.2857%" height="15" fill="rgb(218,69,12)" fg:x="1882234864" fg:w="3555503558"/><text x="10.9889%" y="7487.50">core::iter::traits::iterator::It..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,555,503,558 samples, 20.29%)</title><rect x="10.7389%" y="7461" width="20.2857%" height="15" fill="rgb(212,87,7)" fg:x="1882234864" fg:w="3555503558"/><text x="10.9889%" y="7471.50">&lt;core::iter::adapters::zip::Zip&lt;..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (3,555,503,558 samples, 20.29%)</title><rect x="10.7389%" y="7445" width="20.2857%" height="15" fill="rgb(245,114,25)" fg:x="1882234864" fg:w="3555503558"/><text x="10.9889%" y="7455.50">&lt;core::iter::adapters::zip::Zip&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,955,596,877 samples, 16.86%)</title><rect x="14.1617%" y="7429" width="16.8629%" height="15" fill="rgb(210,61,42)" fg:x="2482141545" fg:w="2955596877"/><text x="14.4117%" y="7439.50">core::iter::traits::iterat..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (2,955,596,877 samples, 16.86%)</title><rect x="14.1617%" y="7413" width="16.8629%" height="15" fill="rgb(211,52,33)" fg:x="2482141545" fg:w="2955596877"/><text x="14.4117%" y="7423.50">profile::internal::subtrac..</text></g><g><title>[unknown] (7,093,866 samples, 0.04%)</title><rect x="30.9841%" y="7397" width="0.0405%" height="15" fill="rgb(234,58,33)" fg:x="5430644556" fg:w="7093866"/><text x="31.2341%" y="7407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (20,553,074 samples, 0.12%)</title><rect x="31.0246%" y="7221" width="0.1173%" height="15" fill="rgb(220,115,36)" fg:x="5437738422" fg:w="20553074"/><text x="31.2746%" y="7231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (20,553,074 samples, 0.12%)</title><rect x="31.0246%" y="7205" width="0.1173%" height="15" fill="rgb(243,153,54)" fg:x="5437738422" fg:w="20553074"/><text x="31.2746%" y="7215.50"></text></g><g><title>core::ptr::write (20,553,074 samples, 0.12%)</title><rect x="31.0246%" y="7189" width="0.1173%" height="15" fill="rgb(251,47,18)" fg:x="5437738422" fg:w="20553074"/><text x="31.2746%" y="7199.50"></text></g><g><title>[unknown] (14,540,071 samples, 0.08%)</title><rect x="31.0589%" y="7173" width="0.0830%" height="15" fill="rgb(242,102,42)" fg:x="5443751425" fg:w="14540071"/><text x="31.3089%" y="7183.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (54,164,865 samples, 0.31%)</title><rect x="31.0246%" y="7237" width="0.3090%" height="15" fill="rgb(234,31,38)" fg:x="5437738422" fg:w="54164865"/><text x="31.2746%" y="7247.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (33,611,791 samples, 0.19%)</title><rect x="31.1419%" y="7221" width="0.1918%" height="15" fill="rgb(221,117,51)" fg:x="5458291496" fg:w="33611791"/><text x="31.3919%" y="7231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56,150,506 samples, 0.32%)</title><rect x="31.0246%" y="7253" width="0.3204%" height="15" fill="rgb(212,20,18)" fg:x="5437738422" fg:w="56150506"/><text x="31.2746%" y="7263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1,985,641 samples, 0.01%)</title><rect x="31.3336%" y="7237" width="0.0113%" height="15" fill="rgb(245,133,36)" fg:x="5491903287" fg:w="1985641"/><text x="31.5836%" y="7247.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (16,760,150 samples, 0.10%)</title><rect x="31.3450%" y="7189" width="0.0956%" height="15" fill="rgb(212,6,19)" fg:x="5493888928" fg:w="16760150"/><text x="31.5950%" y="7199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (263,436,786 samples, 1.50%)</title><rect x="31.3450%" y="7221" width="1.5030%" height="15" fill="rgb(218,1,36)" fg:x="5493888928" fg:w="263436786"/><text x="31.5950%" y="7231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (263,436,786 samples, 1.50%)</title><rect x="31.3450%" y="7205" width="1.5030%" height="15" fill="rgb(246,84,54)" fg:x="5493888928" fg:w="263436786"/><text x="31.5950%" y="7215.50"></text></g><g><title>core::ptr::write (246,676,636 samples, 1.41%)</title><rect x="31.4406%" y="7189" width="1.4074%" height="15" fill="rgb(242,110,6)" fg:x="5510649078" fg:w="246676636"/><text x="31.6906%" y="7199.50"></text></g><g><title>[unknown] (11,330,781 samples, 0.06%)</title><rect x="32.7833%" y="7173" width="0.0646%" height="15" fill="rgb(214,47,5)" fg:x="5745994933" fg:w="11330781"/><text x="33.0333%" y="7183.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (11,916,796 samples, 0.07%)</title><rect x="33.1082%" y="7189" width="0.0680%" height="15" fill="rgb(218,159,25)" fg:x="5802928003" fg:w="11916796"/><text x="33.3582%" y="7199.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (11,916,796 samples, 0.07%)</title><rect x="33.1082%" y="7173" width="0.0680%" height="15" fill="rgb(215,211,28)" fg:x="5802928003" fg:w="11916796"/><text x="33.3582%" y="7183.50"></text></g><g><title>ndarray::dimension::stride_offset (5,180,467 samples, 0.03%)</title><rect x="33.1466%" y="7157" width="0.0296%" height="15" fill="rgb(238,59,32)" fg:x="5809664332" fg:w="5180467"/><text x="33.3966%" y="7167.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (321,654,912 samples, 1.84%)</title><rect x="31.3450%" y="7237" width="1.8352%" height="15" fill="rgb(226,82,3)" fg:x="5493888928" fg:w="321654912"/><text x="31.5950%" y="7247.50">c..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (58,218,126 samples, 0.33%)</title><rect x="32.8480%" y="7221" width="0.3322%" height="15" fill="rgb(240,164,32)" fg:x="5757325714" fg:w="58218126"/><text x="33.0980%" y="7231.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (12,615,837 samples, 0.07%)</title><rect x="33.1082%" y="7205" width="0.0720%" height="15" fill="rgb(232,46,7)" fg:x="5802928003" fg:w="12615837"/><text x="33.3582%" y="7215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (378,677,300 samples, 2.16%)</title><rect x="31.0246%" y="7381" width="2.1605%" height="15" fill="rgb(229,129,53)" fg:x="5437738422" fg:w="378677300"/><text x="31.2746%" y="7391.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (378,677,300 samples, 2.16%)</title><rect x="31.0246%" y="7365" width="2.1605%" height="15" fill="rgb(234,188,29)" fg:x="5437738422" fg:w="378677300"/><text x="31.2746%" y="7375.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (378,677,300 samples, 2.16%)</title><rect x="31.0246%" y="7349" width="2.1605%" height="15" fill="rgb(246,141,4)" fg:x="5437738422" fg:w="378677300"/><text x="31.2746%" y="7359.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (378,677,300 samples, 2.16%)</title><rect x="31.0246%" y="7333" width="2.1605%" height="15" fill="rgb(229,23,39)" fg:x="5437738422" fg:w="378677300"/><text x="31.2746%" y="7343.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (378,677,300 samples, 2.16%)</title><rect x="31.0246%" y="7317" width="2.1605%" height="15" fill="rgb(206,12,3)" fg:x="5437738422" fg:w="378677300"/><text x="31.2746%" y="7327.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (378,677,300 samples, 2.16%)</title><rect x="31.0246%" y="7301" width="2.1605%" height="15" fill="rgb(252,226,20)" fg:x="5437738422" fg:w="378677300"/><text x="31.2746%" y="7311.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (378,677,300 samples, 2.16%)</title><rect x="31.0246%" y="7285" width="2.1605%" height="15" fill="rgb(216,123,35)" fg:x="5437738422" fg:w="378677300"/><text x="31.2746%" y="7295.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (378,677,300 samples, 2.16%)</title><rect x="31.0246%" y="7269" width="2.1605%" height="15" fill="rgb(212,68,40)" fg:x="5437738422" fg:w="378677300"/><text x="31.2746%" y="7279.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (322,526,794 samples, 1.84%)</title><rect x="31.3450%" y="7253" width="1.8402%" height="15" fill="rgb(254,125,32)" fg:x="5493888928" fg:w="322526794"/><text x="31.5950%" y="7263.50">c..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (415,756,478 samples, 2.37%)</title><rect x="33.1851%" y="7381" width="2.3721%" height="15" fill="rgb(253,97,22)" fg:x="5816415722" fg:w="415756478"/><text x="33.4351%" y="7391.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (415,756,478 samples, 2.37%)</title><rect x="33.1851%" y="7365" width="2.3721%" height="15" fill="rgb(241,101,14)" fg:x="5816415722" fg:w="415756478"/><text x="33.4351%" y="7375.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (415,756,478 samples, 2.37%)</title><rect x="33.1851%" y="7349" width="2.3721%" height="15" fill="rgb(238,103,29)" fg:x="5816415722" fg:w="415756478"/><text x="33.4351%" y="7359.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (415,756,478 samples, 2.37%)</title><rect x="33.1851%" y="7333" width="2.3721%" height="15" fill="rgb(233,195,47)" fg:x="5816415722" fg:w="415756478"/><text x="33.4351%" y="7343.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (415,756,478 samples, 2.37%)</title><rect x="33.1851%" y="7317" width="2.3721%" height="15" fill="rgb(246,218,30)" fg:x="5816415722" fg:w="415756478"/><text x="33.4351%" y="7327.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (136,253,276 samples, 0.78%)</title><rect x="34.7798%" y="7301" width="0.7774%" height="15" fill="rgb(219,145,47)" fg:x="6095918924" fg:w="136253276"/><text x="35.0298%" y="7311.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (136,253,276 samples, 0.78%)</title><rect x="34.7798%" y="7285" width="0.7774%" height="15" fill="rgb(243,12,26)" fg:x="6095918924" fg:w="136253276"/><text x="35.0298%" y="7295.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (27,511,211 samples, 0.16%)</title><rect x="35.6955%" y="7333" width="0.1570%" height="15" fill="rgb(214,87,16)" fg:x="6256413290" fg:w="27511211"/><text x="35.9455%" y="7343.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (27,511,211 samples, 0.16%)</title><rect x="35.6955%" y="7317" width="0.1570%" height="15" fill="rgb(208,99,42)" fg:x="6256413290" fg:w="27511211"/><text x="35.9455%" y="7327.50"></text></g><g><title>profile::internal::sad_converged (69,112,857 samples, 0.39%)</title><rect x="35.5572%" y="7381" width="0.3943%" height="15" fill="rgb(253,99,2)" fg:x="6232172200" fg:w="69112857"/><text x="35.8072%" y="7391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (69,112,857 samples, 0.39%)</title><rect x="35.5572%" y="7365" width="0.3943%" height="15" fill="rgb(220,168,23)" fg:x="6232172200" fg:w="69112857"/><text x="35.8072%" y="7375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (69,112,857 samples, 0.39%)</title><rect x="35.5572%" y="7349" width="0.3943%" height="15" fill="rgb(242,38,24)" fg:x="6232172200" fg:w="69112857"/><text x="35.8072%" y="7359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (17,360,556 samples, 0.10%)</title><rect x="35.8525%" y="7333" width="0.0990%" height="15" fill="rgb(225,182,9)" fg:x="6283924501" fg:w="17360556"/><text x="36.1025%" y="7343.50"></text></g><g><title>profile::internal::sad_converged::_{{closure}} (17,360,556 samples, 0.10%)</title><rect x="35.8525%" y="7317" width="0.0990%" height="15" fill="rgb(243,178,37)" fg:x="6283924501" fg:w="17360556"/><text x="36.1025%" y="7327.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (389,421,398 samples, 2.22%)</title><rect x="35.9515%" y="7285" width="2.2218%" height="15" fill="rgb(232,139,19)" fg:x="6301285057" fg:w="389421398"/><text x="36.2015%" y="7295.50">&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (389,421,398 samples, 2.22%)</title><rect x="35.9515%" y="7269" width="2.2218%" height="15" fill="rgb(225,201,24)" fg:x="6301285057" fg:w="389421398"/><text x="36.2015%" y="7279.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (414,264,143 samples, 2.36%)</title><rect x="35.9515%" y="7317" width="2.3636%" height="15" fill="rgb(221,47,46)" fg:x="6301285057" fg:w="414264143"/><text x="36.2015%" y="7327.50">co..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (414,264,143 samples, 2.36%)</title><rect x="35.9515%" y="7301" width="2.3636%" height="15" fill="rgb(249,23,13)" fg:x="6301285057" fg:w="414264143"/><text x="36.2015%" y="7311.50">&lt;c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (24,842,745 samples, 0.14%)</title><rect x="38.1733%" y="7285" width="0.1417%" height="15" fill="rgb(219,9,5)" fg:x="6690706455" fg:w="24842745"/><text x="38.4233%" y="7295.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7589" width="18.0981%" height="15" fill="rgb(254,171,16)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7599.50">rayon_core::job::StackJob&lt;L,..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7573" width="18.0981%" height="15" fill="rgb(230,171,20)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7583.50">rayon_core::join::join_conte..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7557" width="18.0981%" height="15" fill="rgb(210,71,41)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7567.50">rayon::iter::plumbing::bridg..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7541" width="18.0981%" height="15" fill="rgb(206,173,20)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7551.50">rayon::iter::plumbing::bridg..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7525" width="18.0981%" height="15" fill="rgb(233,88,34)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7535.50">rayon::iter::plumbing::Produ..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7509" width="18.0981%" height="15" fill="rgb(223,209,46)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7519.50">&lt;rayon::iter::for_each::ForE..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7493" width="18.0981%" height="15" fill="rgb(250,43,18)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7503.50">core::iter::traits::iterator..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7477" width="18.0981%" height="15" fill="rgb(208,13,10)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7487.50">&lt;core::iter::adapters::zip::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7461" width="18.0981%" height="15" fill="rgb(212,200,36)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7471.50">&lt;core::iter::adapters::zip::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7445" width="18.0981%" height="15" fill="rgb(225,90,30)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7455.50">&lt;core::iter::adapters::zip::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7429" width="18.0981%" height="15" fill="rgb(236,182,39)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7439.50">core::iter::traits::iterator..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7413" width="18.0981%" height="15" fill="rgb(212,144,35)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7423.50">core::ops::function::impls::..</text></g><g><title>profile::demean_impl::_{{closure}} (3,172,085,912 samples, 18.10%)</title><rect x="31.0246%" y="7397" width="18.0981%" height="15" fill="rgb(228,63,44)" fg:x="5437738422" fg:w="3172085912"/><text x="31.2746%" y="7407.50">profile::demean_impl::_{{clo..</text></g><g><title>profile::internal::subtract_weighted_group_mean (2,308,539,277 samples, 13.17%)</title><rect x="35.9515%" y="7381" width="13.1712%" height="15" fill="rgb(228,109,6)" fg:x="6301285057" fg:w="2308539277"/><text x="36.2015%" y="7391.50">profile::internal::s..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,308,539,277 samples, 13.17%)</title><rect x="35.9515%" y="7365" width="13.1712%" height="15" fill="rgb(238,117,24)" fg:x="6301285057" fg:w="2308539277"/><text x="36.2015%" y="7375.50">core::iter::traits::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,308,539,277 samples, 13.17%)</title><rect x="35.9515%" y="7349" width="13.1712%" height="15" fill="rgb(242,26,26)" fg:x="6301285057" fg:w="2308539277"/><text x="36.2015%" y="7359.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (2,308,539,277 samples, 13.17%)</title><rect x="35.9515%" y="7333" width="13.1712%" height="15" fill="rgb(221,92,48)" fg:x="6301285057" fg:w="2308539277"/><text x="36.2015%" y="7343.50">&lt;core::iter::adapter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,894,275,134 samples, 10.81%)</title><rect x="38.3151%" y="7317" width="10.8076%" height="15" fill="rgb(209,209,32)" fg:x="6715549200" fg:w="1894275134"/><text x="38.5651%" y="7327.50">core::iter::trai..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (1,894,275,134 samples, 10.81%)</title><rect x="38.3151%" y="7301" width="10.8076%" height="15" fill="rgb(221,70,22)" fg:x="6715549200" fg:w="1894275134"/><text x="38.5651%" y="7311.50">profile::interna..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (456,706,188 samples, 2.61%)</title><rect x="46.5170%" y="7285" width="2.6057%" height="15" fill="rgb(248,145,5)" fg:x="8153118146" fg:w="456706188"/><text x="46.7670%" y="7295.50">&lt;a..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (456,706,188 samples, 2.61%)</title><rect x="46.5170%" y="7269" width="2.6057%" height="15" fill="rgb(226,116,26)" fg:x="8153118146" fg:w="456706188"/><text x="46.7670%" y="7279.50">co..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (456,706,188 samples, 2.61%)</title><rect x="46.5170%" y="7253" width="2.6057%" height="15" fill="rgb(244,5,17)" fg:x="8153118146" fg:w="456706188"/><text x="46.7670%" y="7263.50">&lt;u..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7,708,648 samples, 0.04%)</title><rect x="49.1253%" y="7157" width="0.0440%" height="15" fill="rgb(252,159,33)" fg:x="8610284859" fg:w="7708648"/><text x="49.3753%" y="7167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (7,708,648 samples, 0.04%)</title><rect x="49.1253%" y="7141" width="0.0440%" height="15" fill="rgb(206,71,0)" fg:x="8610284859" fg:w="7708648"/><text x="49.3753%" y="7151.50"></text></g><g><title>core::ptr::write (7,708,648 samples, 0.04%)</title><rect x="49.1253%" y="7125" width="0.0440%" height="15" fill="rgb(233,118,54)" fg:x="8610284859" fg:w="7708648"/><text x="49.3753%" y="7135.50"></text></g><g><title>[unknown] (6,235,944 samples, 0.04%)</title><rect x="49.1337%" y="7109" width="0.0356%" height="15" fill="rgb(234,83,48)" fg:x="8611757563" fg:w="6235944"/><text x="49.3837%" y="7119.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (38,441,425 samples, 0.22%)</title><rect x="49.1253%" y="7173" width="0.2193%" height="15" fill="rgb(228,3,54)" fg:x="8610284859" fg:w="38441425"/><text x="49.3753%" y="7183.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (30,732,777 samples, 0.18%)</title><rect x="49.1693%" y="7157" width="0.1753%" height="15" fill="rgb(226,155,13)" fg:x="8617993507" fg:w="30732777"/><text x="49.4193%" y="7167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41,339,499 samples, 0.24%)</title><rect x="49.1227%" y="7189" width="0.2359%" height="15" fill="rgb(241,28,37)" fg:x="8609824334" fg:w="41339499"/><text x="49.3727%" y="7199.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2,437,549 samples, 0.01%)</title><rect x="49.3447%" y="7173" width="0.0139%" height="15" fill="rgb(233,93,10)" fg:x="8648726284" fg:w="2437549"/><text x="49.5947%" y="7183.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (11,657,979 samples, 0.07%)</title><rect x="49.3586%" y="7125" width="0.0665%" height="15" fill="rgb(225,113,19)" fg:x="8651163833" fg:w="11657979"/><text x="49.6086%" y="7135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (541,081,999 samples, 3.09%)</title><rect x="49.3586%" y="7157" width="3.0871%" height="15" fill="rgb(241,2,18)" fg:x="8651163833" fg:w="541081999"/><text x="49.6086%" y="7167.50">cor..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (541,081,999 samples, 3.09%)</title><rect x="49.3586%" y="7141" width="3.0871%" height="15" fill="rgb(228,207,21)" fg:x="8651163833" fg:w="541081999"/><text x="49.6086%" y="7151.50">all..</text></g><g><title>core::ptr::write (529,424,020 samples, 3.02%)</title><rect x="49.4251%" y="7125" width="3.0206%" height="15" fill="rgb(213,211,35)" fg:x="8662821812" fg:w="529424020"/><text x="49.6751%" y="7135.50">cor..</text></g><g><title>[unknown] (6,201,546 samples, 0.04%)</title><rect x="52.4103%" y="7109" width="0.0354%" height="15" fill="rgb(209,83,10)" fg:x="9186044286" fg:w="6201546"/><text x="52.6603%" y="7119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (599,305,033 samples, 3.42%)</title><rect x="49.1227%" y="7317" width="3.4193%" height="15" fill="rgb(209,164,1)" fg:x="8609824334" fg:w="599305033"/><text x="49.3727%" y="7327.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (599,305,033 samples, 3.42%)</title><rect x="49.1227%" y="7301" width="3.4193%" height="15" fill="rgb(213,184,43)" fg:x="8609824334" fg:w="599305033"/><text x="49.3727%" y="7311.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (599,305,033 samples, 3.42%)</title><rect x="49.1227%" y="7285" width="3.4193%" height="15" fill="rgb(231,61,34)" fg:x="8609824334" fg:w="599305033"/><text x="49.3727%" y="7295.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (599,305,033 samples, 3.42%)</title><rect x="49.1227%" y="7269" width="3.4193%" height="15" fill="rgb(235,75,3)" fg:x="8609824334" fg:w="599305033"/><text x="49.3727%" y="7279.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (599,305,033 samples, 3.42%)</title><rect x="49.1227%" y="7253" width="3.4193%" height="15" fill="rgb(220,106,47)" fg:x="8609824334" fg:w="599305033"/><text x="49.3727%" y="7263.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (599,305,033 samples, 3.42%)</title><rect x="49.1227%" y="7237" width="3.4193%" height="15" fill="rgb(210,196,33)" fg:x="8609824334" fg:w="599305033"/><text x="49.3727%" y="7247.50">all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (599,305,033 samples, 3.42%)</title><rect x="49.1227%" y="7221" width="3.4193%" height="15" fill="rgb(229,154,42)" fg:x="8609824334" fg:w="599305033"/><text x="49.3727%" y="7231.50">cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (599,305,033 samples, 3.42%)</title><rect x="49.1227%" y="7205" width="3.4193%" height="15" fill="rgb(228,114,26)" fg:x="8609824334" fg:w="599305033"/><text x="49.3727%" y="7215.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (557,965,534 samples, 3.18%)</title><rect x="49.3586%" y="7189" width="3.1834%" height="15" fill="rgb(208,144,1)" fg:x="8651163833" fg:w="557965534"/><text x="49.6086%" y="7199.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (557,965,534 samples, 3.18%)</title><rect x="49.3586%" y="7173" width="3.1834%" height="15" fill="rgb(239,112,37)" fg:x="8651163833" fg:w="557965534"/><text x="49.6086%" y="7183.50">cor..</text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (16,883,535 samples, 0.10%)</title><rect x="52.4457%" y="7157" width="0.0963%" height="15" fill="rgb(210,96,50)" fg:x="9192245832" fg:w="16883535"/><text x="52.6957%" y="7167.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (15,322,401 samples, 0.09%)</title><rect x="52.4546%" y="7141" width="0.0874%" height="15" fill="rgb(222,178,2)" fg:x="9193806966" fg:w="15322401"/><text x="52.7046%" y="7151.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (15,322,401 samples, 0.09%)</title><rect x="52.4546%" y="7125" width="0.0874%" height="15" fill="rgb(226,74,18)" fg:x="9193806966" fg:w="15322401"/><text x="52.7046%" y="7135.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (15,322,401 samples, 0.09%)</title><rect x="52.4546%" y="7109" width="0.0874%" height="15" fill="rgb(225,67,54)" fg:x="9193806966" fg:w="15322401"/><text x="52.7046%" y="7119.50"></text></g><g><title>ndarray::dimension::stride_offset (8,956,144 samples, 0.05%)</title><rect x="52.4909%" y="7093" width="0.0511%" height="15" fill="rgb(251,92,32)" fg:x="9200173223" fg:w="8956144"/><text x="52.7409%" y="7103.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (489,376,420 samples, 2.79%)</title><rect x="52.5420%" y="7317" width="2.7921%" height="15" fill="rgb(228,149,22)" fg:x="9209129367" fg:w="489376420"/><text x="52.7920%" y="7327.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (489,376,420 samples, 2.79%)</title><rect x="52.5420%" y="7301" width="2.7921%" height="15" fill="rgb(243,54,13)" fg:x="9209129367" fg:w="489376420"/><text x="52.7920%" y="7311.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (489,376,420 samples, 2.79%)</title><rect x="52.5420%" y="7285" width="2.7921%" height="15" fill="rgb(243,180,28)" fg:x="9209129367" fg:w="489376420"/><text x="52.7920%" y="7295.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (489,376,420 samples, 2.79%)</title><rect x="52.5420%" y="7269" width="2.7921%" height="15" fill="rgb(208,167,24)" fg:x="9209129367" fg:w="489376420"/><text x="52.7920%" y="7279.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (489,376,420 samples, 2.79%)</title><rect x="52.5420%" y="7253" width="2.7921%" height="15" fill="rgb(245,73,45)" fg:x="9209129367" fg:w="489376420"/><text x="52.7920%" y="7263.50">nd..</text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (275,800,293 samples, 1.57%)</title><rect x="53.7605%" y="7237" width="1.5736%" height="15" fill="rgb(237,203,48)" fg:x="9422705494" fg:w="275800293"/><text x="54.0105%" y="7247.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (275,800,293 samples, 1.57%)</title><rect x="53.7605%" y="7221" width="1.5736%" height="15" fill="rgb(211,197,16)" fg:x="9422705494" fg:w="275800293"/><text x="54.0105%" y="7231.50"></text></g><g><title>[unknown] (9,440,359 samples, 0.05%)</title><rect x="55.2802%" y="7205" width="0.0539%" height="15" fill="rgb(243,99,51)" fg:x="9689065428" fg:w="9440359"/><text x="55.5302%" y="7215.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (57,145,381 samples, 0.33%)</title><rect x="55.5489%" y="7269" width="0.3260%" height="15" fill="rgb(215,123,29)" fg:x="9736146162" fg:w="57145381"/><text x="55.7989%" y="7279.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (57,145,381 samples, 0.33%)</title><rect x="55.5489%" y="7253" width="0.3260%" height="15" fill="rgb(239,186,37)" fg:x="9736146162" fg:w="57145381"/><text x="55.7989%" y="7263.50"></text></g><g><title>profile::internal::sad_converged (99,932,815 samples, 0.57%)</title><rect x="55.3341%" y="7317" width="0.5702%" height="15" fill="rgb(252,136,39)" fg:x="9698505787" fg:w="99932815"/><text x="55.5841%" y="7327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (99,932,815 samples, 0.57%)</title><rect x="55.3341%" y="7301" width="0.5702%" height="15" fill="rgb(223,213,32)" fg:x="9698505787" fg:w="99932815"/><text x="55.5841%" y="7311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (99,932,815 samples, 0.57%)</title><rect x="55.3341%" y="7285" width="0.5702%" height="15" fill="rgb(233,115,5)" fg:x="9698505787" fg:w="99932815"/><text x="55.5841%" y="7295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (5,147,059 samples, 0.03%)</title><rect x="55.8749%" y="7269" width="0.0294%" height="15" fill="rgb(207,226,44)" fg:x="9793291543" fg:w="5147059"/><text x="56.1249%" y="7279.50"></text></g><g><title>profile::internal::sad_converged::_{{closure}} (5,147,059 samples, 0.03%)</title><rect x="55.8749%" y="7253" width="0.0294%" height="15" fill="rgb(208,126,0)" fg:x="9793291543" fg:w="5147059"/><text x="56.1249%" y="7263.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (319,015,157 samples, 1.82%)</title><rect x="55.9043%" y="7221" width="1.8201%" height="15" fill="rgb(244,66,21)" fg:x="9798438602" fg:w="319015157"/><text x="56.1543%" y="7231.50">&lt;..</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (319,015,157 samples, 1.82%)</title><rect x="55.9043%" y="7205" width="1.8201%" height="15" fill="rgb(222,97,12)" fg:x="9798438602" fg:w="319015157"/><text x="56.1543%" y="7215.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (321,948,982 samples, 1.84%)</title><rect x="55.9043%" y="7253" width="1.8369%" height="15" fill="rgb(219,213,19)" fg:x="9798438602" fg:w="321948982"/><text x="56.1543%" y="7263.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (321,948,982 samples, 1.84%)</title><rect x="55.9043%" y="7237" width="1.8369%" height="15" fill="rgb(252,169,30)" fg:x="9798438602" fg:w="321948982"/><text x="56.1543%" y="7247.50">&lt;..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,933,825 samples, 0.02%)</title><rect x="57.7244%" y="7221" width="0.0167%" height="15" fill="rgb(206,32,51)" fg:x="10117453759" fg:w="2933825"/><text x="57.9744%" y="7231.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7461" width="22.0888%" height="15" fill="rgb(250,172,42)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7471.50">rayon::iter::plumbing::Producer::fo..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7445" width="22.0888%" height="15" fill="rgb(209,34,43)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7455.50">&lt;rayon::iter::for_each::ForEachCons..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7429" width="22.0888%" height="15" fill="rgb(223,11,35)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7439.50">core::iter::traits::iterator::Itera..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7413" width="22.0888%" height="15" fill="rgb(251,219,26)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7423.50">&lt;core::iter::adapters::zip::Zip&lt;A,B..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7397" width="22.0888%" height="15" fill="rgb(231,119,3)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7407.50">&lt;core::iter::adapters::zip::Zip&lt;A,B..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7381" width="22.0888%" height="15" fill="rgb(216,97,11)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7391.50">&lt;core::iter::adapters::zip::Zip&lt;A,B..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7365" width="22.0888%" height="15" fill="rgb(223,59,9)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7375.50">core::iter::traits::iterator::Itera..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7349" width="22.0888%" height="15" fill="rgb(233,93,31)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7359.50">core::ops::function::impls::&lt;impl c..</text></g><g><title>profile::demean_impl::_{{closure}} (3,871,548,155 samples, 22.09%)</title><rect x="49.1227%" y="7333" width="22.0888%" height="15" fill="rgb(239,81,33)" fg:x="8609824334" fg:w="3871548155"/><text x="49.3727%" y="7343.50">profile::demean_impl::_{{closure}}</text></g><g><title>profile::internal::subtract_weighted_group_mean (2,682,933,887 samples, 15.31%)</title><rect x="55.9043%" y="7317" width="15.3073%" height="15" fill="rgb(213,120,34)" fg:x="9798438602" fg:w="2682933887"/><text x="56.1543%" y="7327.50">profile::internal::subt..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,682,933,887 samples, 15.31%)</title><rect x="55.9043%" y="7301" width="15.3073%" height="15" fill="rgb(243,49,53)" fg:x="9798438602" fg:w="2682933887"/><text x="56.1543%" y="7311.50">core::iter::traits::ite..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,682,933,887 samples, 15.31%)</title><rect x="55.9043%" y="7285" width="15.3073%" height="15" fill="rgb(247,216,33)" fg:x="9798438602" fg:w="2682933887"/><text x="56.1543%" y="7295.50">&lt;core::iter::adapters::..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (2,682,933,887 samples, 15.31%)</title><rect x="55.9043%" y="7269" width="15.3073%" height="15" fill="rgb(226,26,14)" fg:x="9798438602" fg:w="2682933887"/><text x="56.1543%" y="7279.50">&lt;core::iter::adapters::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,360,984,905 samples, 13.47%)</title><rect x="57.7411%" y="7253" width="13.4704%" height="15" fill="rgb(215,49,53)" fg:x="10120387584" fg:w="2360984905"/><text x="57.9911%" y="7263.50">core::iter::traits::..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (2,360,984,905 samples, 13.47%)</title><rect x="57.7411%" y="7237" width="13.4704%" height="15" fill="rgb(245,162,40)" fg:x="10120387584" fg:w="2360984905"/><text x="57.9911%" y="7247.50">profile::internal::s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (577,378,322 samples, 3.29%)</title><rect x="67.9173%" y="7221" width="3.2942%" height="15" fill="rgb(229,68,17)" fg:x="11903994167" fg:w="577378322"/><text x="68.1673%" y="7231.50">&lt;al..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (577,378,322 samples, 3.29%)</title><rect x="67.9173%" y="7205" width="3.2942%" height="15" fill="rgb(213,182,10)" fg:x="11903994167" fg:w="577378322"/><text x="68.1673%" y="7215.50">cor..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (577,378,322 samples, 3.29%)</title><rect x="67.9173%" y="7189" width="3.2942%" height="15" fill="rgb(245,125,30)" fg:x="11903994167" fg:w="577378322"/><text x="68.1673%" y="7199.50">&lt;us..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,327,624 samples, 0.01%)</title><rect x="71.2115%" y="6981" width="0.0133%" height="15" fill="rgb(232,202,2)" fg:x="12481372489" fg:w="2327624"/><text x="71.4615%" y="6991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (2,327,624 samples, 0.01%)</title><rect x="71.2115%" y="6965" width="0.0133%" height="15" fill="rgb(237,140,51)" fg:x="12481372489" fg:w="2327624"/><text x="71.4615%" y="6975.50"></text></g><g><title>core::ptr::write (2,327,624 samples, 0.01%)</title><rect x="71.2115%" y="6949" width="0.0133%" height="15" fill="rgb(236,157,25)" fg:x="12481372489" fg:w="2327624"/><text x="71.4615%" y="6959.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (4,275,002 samples, 0.02%)</title><rect x="71.2115%" y="6997" width="0.0244%" height="15" fill="rgb(219,209,0)" fg:x="12481372489" fg:w="4275002"/><text x="71.4615%" y="7007.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (1,947,378 samples, 0.01%)</title><rect x="71.2248%" y="6981" width="0.0111%" height="15" fill="rgb(240,116,54)" fg:x="12483700113" fg:w="1947378"/><text x="71.4748%" y="6991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,715,817 samples, 0.03%)</title><rect x="71.2115%" y="7013" width="0.0269%" height="15" fill="rgb(216,10,36)" fg:x="12481372489" fg:w="4715817"/><text x="71.4615%" y="7023.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (2,129,549 samples, 0.01%)</title><rect x="71.2384%" y="6949" width="0.0121%" height="15" fill="rgb(222,72,44)" fg:x="12486088306" fg:w="2129549"/><text x="71.4884%" y="6959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (126,641,294 samples, 0.72%)</title><rect x="71.2384%" y="6981" width="0.7225%" height="15" fill="rgb(232,159,9)" fg:x="12486088306" fg:w="126641294"/><text x="71.4884%" y="6991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (126,641,294 samples, 0.72%)</title><rect x="71.2384%" y="6965" width="0.7225%" height="15" fill="rgb(210,39,32)" fg:x="12486088306" fg:w="126641294"/><text x="71.4884%" y="6975.50"></text></g><g><title>core::ptr::write (124,511,745 samples, 0.71%)</title><rect x="71.2506%" y="6949" width="0.7104%" height="15" fill="rgb(216,194,45)" fg:x="12488217855" fg:w="124511745"/><text x="71.5006%" y="6959.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (128,971,924 samples, 0.74%)</title><rect x="71.2384%" y="6997" width="0.7358%" height="15" fill="rgb(218,18,35)" fg:x="12486088306" fg:w="128971924"/><text x="71.4884%" y="7007.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (2,330,630 samples, 0.01%)</title><rect x="71.9610%" y="6981" width="0.0133%" height="15" fill="rgb(207,83,51)" fg:x="12612729600" fg:w="2330630"/><text x="72.2110%" y="6991.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (2,330,630 samples, 0.01%)</title><rect x="71.9610%" y="6965" width="0.0133%" height="15" fill="rgb(225,63,43)" fg:x="12612729600" fg:w="2330630"/><text x="72.2110%" y="6975.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (2,330,630 samples, 0.01%)</title><rect x="71.9610%" y="6949" width="0.0133%" height="15" fill="rgb(207,57,36)" fg:x="12612729600" fg:w="2330630"/><text x="72.2110%" y="6959.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (2,330,630 samples, 0.01%)</title><rect x="71.9610%" y="6933" width="0.0133%" height="15" fill="rgb(216,99,33)" fg:x="12612729600" fg:w="2330630"/><text x="72.2110%" y="6943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (136,324,017 samples, 0.78%)</title><rect x="71.2115%" y="7141" width="0.7778%" height="15" fill="rgb(225,42,16)" fg:x="12481372489" fg:w="136324017"/><text x="71.4615%" y="7151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (136,324,017 samples, 0.78%)</title><rect x="71.2115%" y="7125" width="0.7778%" height="15" fill="rgb(220,201,45)" fg:x="12481372489" fg:w="136324017"/><text x="71.4615%" y="7135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (136,324,017 samples, 0.78%)</title><rect x="71.2115%" y="7109" width="0.7778%" height="15" fill="rgb(225,33,4)" fg:x="12481372489" fg:w="136324017"/><text x="71.4615%" y="7119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (136,324,017 samples, 0.78%)</title><rect x="71.2115%" y="7093" width="0.7778%" height="15" fill="rgb(224,33,50)" fg:x="12481372489" fg:w="136324017"/><text x="71.4615%" y="7103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (136,324,017 samples, 0.78%)</title><rect x="71.2115%" y="7077" width="0.7778%" height="15" fill="rgb(246,198,51)" fg:x="12481372489" fg:w="136324017"/><text x="71.4615%" y="7087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (136,324,017 samples, 0.78%)</title><rect x="71.2115%" y="7061" width="0.7778%" height="15" fill="rgb(205,22,4)" fg:x="12481372489" fg:w="136324017"/><text x="71.4615%" y="7071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (136,324,017 samples, 0.78%)</title><rect x="71.2115%" y="7045" width="0.7778%" height="15" fill="rgb(206,3,8)" fg:x="12481372489" fg:w="136324017"/><text x="71.4615%" y="7055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (136,324,017 samples, 0.78%)</title><rect x="71.2115%" y="7029" width="0.7778%" height="15" fill="rgb(251,23,15)" fg:x="12481372489" fg:w="136324017"/><text x="71.4615%" y="7039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (131,608,200 samples, 0.75%)</title><rect x="71.2384%" y="7013" width="0.7509%" height="15" fill="rgb(252,88,28)" fg:x="12486088306" fg:w="131608200"/><text x="71.4884%" y="7023.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,636,276 samples, 0.02%)</title><rect x="71.9743%" y="6997" width="0.0150%" height="15" fill="rgb(212,127,14)" fg:x="12615060230" fg:w="2636276"/><text x="72.2243%" y="7007.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,636,276 samples, 0.02%)</title><rect x="71.9743%" y="6981" width="0.0150%" height="15" fill="rgb(247,145,37)" fg:x="12615060230" fg:w="2636276"/><text x="72.2243%" y="6991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,636,276 samples, 0.02%)</title><rect x="71.9743%" y="6965" width="0.0150%" height="15" fill="rgb(209,117,53)" fg:x="12615060230" fg:w="2636276"/><text x="72.2243%" y="6975.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (174,027,316 samples, 0.99%)</title><rect x="71.9893%" y="7141" width="0.9929%" height="15" fill="rgb(212,90,42)" fg:x="12617696506" fg:w="174027316"/><text x="72.2393%" y="7151.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (174,027,316 samples, 0.99%)</title><rect x="71.9893%" y="7125" width="0.9929%" height="15" fill="rgb(218,164,37)" fg:x="12617696506" fg:w="174027316"/><text x="72.2393%" y="7135.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (174,027,316 samples, 0.99%)</title><rect x="71.9893%" y="7109" width="0.9929%" height="15" fill="rgb(246,65,34)" fg:x="12617696506" fg:w="174027316"/><text x="72.2393%" y="7119.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (174,027,316 samples, 0.99%)</title><rect x="71.9893%" y="7093" width="0.9929%" height="15" fill="rgb(231,100,33)" fg:x="12617696506" fg:w="174027316"/><text x="72.2393%" y="7103.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (174,027,316 samples, 0.99%)</title><rect x="71.9893%" y="7077" width="0.9929%" height="15" fill="rgb(228,126,14)" fg:x="12617696506" fg:w="174027316"/><text x="72.2393%" y="7087.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (103,823,950 samples, 0.59%)</title><rect x="72.3899%" y="7061" width="0.5924%" height="15" fill="rgb(215,173,21)" fg:x="12687899872" fg:w="103823950"/><text x="72.6399%" y="7071.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (103,823,950 samples, 0.59%)</title><rect x="72.3899%" y="7045" width="0.5924%" height="15" fill="rgb(210,6,40)" fg:x="12687899872" fg:w="103823950"/><text x="72.6399%" y="7055.50"></text></g><g><title>profile::internal::sad_converged (24,965,677 samples, 0.14%)</title><rect x="72.9822%" y="7141" width="0.1424%" height="15" fill="rgb(212,48,18)" fg:x="12791723822" fg:w="24965677"/><text x="73.2322%" y="7151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (24,965,677 samples, 0.14%)</title><rect x="72.9822%" y="7125" width="0.1424%" height="15" fill="rgb(230,214,11)" fg:x="12791723822" fg:w="24965677"/><text x="73.2322%" y="7135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24,965,677 samples, 0.14%)</title><rect x="72.9822%" y="7109" width="0.1424%" height="15" fill="rgb(254,105,39)" fg:x="12791723822" fg:w="24965677"/><text x="73.2322%" y="7119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,659,990 samples, 0.09%)</title><rect x="73.0353%" y="7093" width="0.0893%" height="15" fill="rgb(245,158,5)" fg:x="12801029509" fg:w="15659990"/><text x="73.2853%" y="7103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (15,659,990 samples, 0.09%)</title><rect x="73.0353%" y="7077" width="0.0893%" height="15" fill="rgb(249,208,11)" fg:x="12801029509" fg:w="15659990"/><text x="73.2853%" y="7087.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (80,656,048 samples, 0.46%)</title><rect x="73.1247%" y="7077" width="0.4602%" height="15" fill="rgb(210,39,28)" fg:x="12816689499" fg:w="80656048"/><text x="73.3747%" y="7087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (80,656,048 samples, 0.46%)</title><rect x="73.1247%" y="7061" width="0.4602%" height="15" fill="rgb(211,56,53)" fg:x="12816689499" fg:w="80656048"/><text x="73.3747%" y="7071.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (80,656,048 samples, 0.46%)</title><rect x="73.1247%" y="7045" width="0.4602%" height="15" fill="rgb(226,201,30)" fg:x="12816689499" fg:w="80656048"/><text x="73.3747%" y="7055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (80,656,048 samples, 0.46%)</title><rect x="73.1247%" y="7029" width="0.4602%" height="15" fill="rgb(239,101,34)" fg:x="12816689499" fg:w="80656048"/><text x="73.3747%" y="7039.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (13,020,133,680 samples, 74.29%)</title><rect x="3.3114%" y="7685" width="74.2854%" height="15" fill="rgb(226,209,5)" fg:x="580394306" fg:w="13020133680"/><text x="3.5614%" y="7695.50">rayon_core::join::join_context::call_b::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (13,020,133,680 samples, 74.29%)</title><rect x="3.3114%" y="7669" width="74.2854%" height="15" fill="rgb(250,105,47)" fg:x="580394306" fg:w="13020133680"/><text x="3.5614%" y="7679.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}}</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13,020,133,680 samples, 74.29%)</title><rect x="3.3114%" y="7653" width="74.2854%" height="15" fill="rgb(230,72,3)" fg:x="580394306" fg:w="13020133680"/><text x="3.5614%" y="7663.50">rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>rayon_core::join::join_context (8,162,789,564 samples, 46.57%)</title><rect x="31.0246%" y="7637" width="46.5722%" height="15" fill="rgb(232,218,39)" fg:x="5437738422" fg:w="8162789564"/><text x="31.2746%" y="7647.50">rayon_core::join::join_context</text></g><g><title>rayon_core::registry::in_worker (8,162,789,564 samples, 46.57%)</title><rect x="31.0246%" y="7621" width="46.5722%" height="15" fill="rgb(248,166,6)" fg:x="5437738422" fg:w="8162789564"/><text x="31.2746%" y="7631.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::join::join_context::_{{closure}} (8,162,789,564 samples, 46.57%)</title><rect x="31.0246%" y="7605" width="46.5722%" height="15" fill="rgb(247,89,20)" fg:x="5437738422" fg:w="8162789564"/><text x="31.2746%" y="7615.50">rayon_core::join::join_context::_{{closure}}</text></g><g><title>rayon_core::unwind::halt_unwinding (4,990,703,652 samples, 28.47%)</title><rect x="49.1227%" y="7589" width="28.4741%" height="15" fill="rgb(248,130,54)" fg:x="8609824334" fg:w="4990703652"/><text x="49.3727%" y="7599.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (4,990,703,652 samples, 28.47%)</title><rect x="49.1227%" y="7573" width="28.4741%" height="15" fill="rgb(234,196,4)" fg:x="8609824334" fg:w="4990703652"/><text x="49.3727%" y="7583.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,990,703,652 samples, 28.47%)</title><rect x="49.1227%" y="7557" width="28.4741%" height="15" fill="rgb(250,143,31)" fg:x="8609824334" fg:w="4990703652"/><text x="49.3727%" y="7567.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,990,703,652 samples, 28.47%)</title><rect x="49.1227%" y="7541" width="28.4741%" height="15" fill="rgb(211,110,34)" fg:x="8609824334" fg:w="4990703652"/><text x="49.3727%" y="7551.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,990,703,652 samples, 28.47%)</title><rect x="49.1227%" y="7525" width="28.4741%" height="15" fill="rgb(215,124,48)" fg:x="8609824334" fg:w="4990703652"/><text x="49.3727%" y="7535.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt;..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (4,990,703,652 samples, 28.47%)</title><rect x="49.1227%" y="7509" width="28.4741%" height="15" fill="rgb(216,46,13)" fg:x="8609824334" fg:w="4990703652"/><text x="49.3727%" y="7519.50">rayon_core::join::join_context::call_a::_{{clo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4,990,703,652 samples, 28.47%)</title><rect x="49.1227%" y="7493" width="28.4741%" height="15" fill="rgb(205,184,25)" fg:x="8609824334" fg:w="4990703652"/><text x="49.3727%" y="7503.50">rayon::iter::plumbing::bridge_producer_consume..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,990,703,652 samples, 28.47%)</title><rect x="49.1227%" y="7477" width="28.4741%" height="15" fill="rgb(228,1,10)" fg:x="8609824334" fg:w="4990703652"/><text x="49.3727%" y="7487.50">rayon::iter::plumbing::bridge_producer_consume..</text></g><g><title>rayon_core::join::join_context (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7461" width="6.3853%" height="15" fill="rgb(213,116,27)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7471.50">rayon_co..</text></g><g><title>rayon_core::registry::in_worker (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7445" width="6.3853%" height="15" fill="rgb(241,95,50)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7455.50">rayon_co..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7429" width="6.3853%" height="15" fill="rgb(238,48,32)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7439.50">rayon_co..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7413" width="6.3853%" height="15" fill="rgb(235,113,49)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7423.50">rayon_co..</text></g><g><title>std::panic::catch_unwind (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7397" width="6.3853%" height="15" fill="rgb(205,127,43)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7407.50">std::pan..</text></g><g><title>std::panicking::try (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7381" width="6.3853%" height="15" fill="rgb(250,162,2)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7391.50">std::pan..</text></g><g><title>std::panicking::try::do_call (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7365" width="6.3853%" height="15" fill="rgb(220,13,41)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7375.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7349" width="6.3853%" height="15" fill="rgb(249,221,25)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7359.50">&lt;core::p..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7333" width="6.3853%" height="15" fill="rgb(215,208,19)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7343.50">rayon_co..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7317" width="6.3853%" height="15" fill="rgb(236,175,2)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7327.50">rayon::i..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7301" width="6.3853%" height="15" fill="rgb(241,52,2)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7311.50">rayon::i..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7285" width="6.3853%" height="15" fill="rgb(248,140,14)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7295.50">rayon::i..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7269" width="6.3853%" height="15" fill="rgb(253,22,42)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7279.50">&lt;rayon::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7253" width="6.3853%" height="15" fill="rgb(234,61,47)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7263.50">core::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7237" width="6.3853%" height="15" fill="rgb(208,226,15)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7247.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7221" width="6.3853%" height="15" fill="rgb(217,221,4)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7231.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7205" width="6.3853%" height="15" fill="rgb(212,174,34)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7215.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7189" width="6.3853%" height="15" fill="rgb(253,83,4)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7199.50">core::it..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7173" width="6.3853%" height="15" fill="rgb(250,195,49)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7183.50">core::op..</text></g><g><title>profile::demean_impl::_{{closure}} (1,119,155,497 samples, 6.39%)</title><rect x="71.2115%" y="7157" width="6.3853%" height="15" fill="rgb(241,192,25)" fg:x="12481372489" fg:w="1119155497"/><text x="71.4615%" y="7167.50">profile:..</text></g><g><title>profile::internal::subtract_weighted_group_mean (783,838,487 samples, 4.47%)</title><rect x="73.1247%" y="7141" width="4.4721%" height="15" fill="rgb(208,124,10)" fg:x="12816689499" fg:w="783838487"/><text x="73.3747%" y="7151.50">profi..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (783,838,487 samples, 4.47%)</title><rect x="73.1247%" y="7125" width="4.4721%" height="15" fill="rgb(222,33,0)" fg:x="12816689499" fg:w="783838487"/><text x="73.3747%" y="7135.50">core:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (783,838,487 samples, 4.47%)</title><rect x="73.1247%" y="7109" width="4.4721%" height="15" fill="rgb(234,209,28)" fg:x="12816689499" fg:w="783838487"/><text x="73.3747%" y="7119.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (783,838,487 samples, 4.47%)</title><rect x="73.1247%" y="7093" width="4.4721%" height="15" fill="rgb(224,11,23)" fg:x="12816689499" fg:w="783838487"/><text x="73.3747%" y="7103.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (703,182,439 samples, 4.01%)</title><rect x="73.5848%" y="7077" width="4.0120%" height="15" fill="rgb(232,99,1)" fg:x="12897345547" fg:w="703182439"/><text x="73.8348%" y="7087.50">core..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (703,182,439 samples, 4.01%)</title><rect x="73.5848%" y="7061" width="4.0120%" height="15" fill="rgb(237,95,45)" fg:x="12897345547" fg:w="703182439"/><text x="73.8348%" y="7071.50">prof..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (178,698,193 samples, 1.02%)</title><rect x="76.5772%" y="7045" width="1.0195%" height="15" fill="rgb(208,109,11)" fg:x="13421829793" fg:w="178698193"/><text x="76.8272%" y="7055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (178,698,193 samples, 1.02%)</title><rect x="76.5772%" y="7029" width="1.0195%" height="15" fill="rgb(216,190,48)" fg:x="13421829793" fg:w="178698193"/><text x="76.8272%" y="7039.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (178,698,193 samples, 1.02%)</title><rect x="76.5772%" y="7013" width="1.0195%" height="15" fill="rgb(251,171,36)" fg:x="13421829793" fg:w="178698193"/><text x="76.8272%" y="7023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,598,713 samples, 0.02%)</title><rect x="77.5968%" y="6869" width="0.0205%" height="15" fill="rgb(230,62,22)" fg:x="13600527986" fg:w="3598713"/><text x="77.8468%" y="6879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (3,598,713 samples, 0.02%)</title><rect x="77.5968%" y="6853" width="0.0205%" height="15" fill="rgb(225,114,35)" fg:x="13600527986" fg:w="3598713"/><text x="77.8468%" y="6863.50"></text></g><g><title>core::ptr::write (3,598,713 samples, 0.02%)</title><rect x="77.5968%" y="6837" width="0.0205%" height="15" fill="rgb(215,118,42)" fg:x="13600527986" fg:w="3598713"/><text x="77.8468%" y="6847.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (14,619,911 samples, 0.08%)</title><rect x="77.5968%" y="6885" width="0.0834%" height="15" fill="rgb(243,119,21)" fg:x="13600527986" fg:w="14619911"/><text x="77.8468%" y="6895.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (11,021,198 samples, 0.06%)</title><rect x="77.6173%" y="6869" width="0.0629%" height="15" fill="rgb(252,177,53)" fg:x="13604126699" fg:w="11021198"/><text x="77.8673%" y="6879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,111,561 samples, 0.09%)</title><rect x="77.5968%" y="6901" width="0.0862%" height="15" fill="rgb(237,209,29)" fg:x="13600527986" fg:w="15111561"/><text x="77.8468%" y="6911.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (3,060,164 samples, 0.02%)</title><rect x="77.6830%" y="6837" width="0.0175%" height="15" fill="rgb(212,65,23)" fg:x="13615639547" fg:w="3060164"/><text x="77.9330%" y="6847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (133,544,335 samples, 0.76%)</title><rect x="77.6830%" y="6869" width="0.7619%" height="15" fill="rgb(230,222,46)" fg:x="13615639547" fg:w="133544335"/><text x="77.9330%" y="6879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (133,544,335 samples, 0.76%)</title><rect x="77.6830%" y="6853" width="0.7619%" height="15" fill="rgb(215,135,32)" fg:x="13615639547" fg:w="133544335"/><text x="77.9330%" y="6863.50"></text></g><g><title>core::ptr::write (130,484,171 samples, 0.74%)</title><rect x="77.7005%" y="6837" width="0.7445%" height="15" fill="rgb(246,101,22)" fg:x="13618699711" fg:w="130484171"/><text x="77.9505%" y="6847.50"></text></g><g><title>[unknown] (2,950,148 samples, 0.02%)</title><rect x="78.4281%" y="6821" width="0.0168%" height="15" fill="rgb(206,107,13)" fg:x="13746233734" fg:w="2950148"/><text x="78.6781%" y="6831.50"></text></g><g><title>&lt;[usize: 2] as ndarray::dimension::ndindex::NdIndex&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt;&gt;&gt;::index_checked (5,117,925 samples, 0.03%)</title><rect x="78.4594%" y="6837" width="0.0292%" height="15" fill="rgb(250,100,44)" fg:x="13751717129" fg:w="5117925"/><text x="78.7094%" y="6847.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::stride_offset_checked (5,117,925 samples, 0.03%)</title><rect x="78.4594%" y="6821" width="0.0292%" height="15" fill="rgb(231,147,38)" fg:x="13751717129" fg:w="5117925"/><text x="78.7094%" y="6831.50"></text></g><g><title>ndarray::dimension::stride_offset (2,495,731 samples, 0.01%)</title><rect x="78.4744%" y="6805" width="0.0142%" height="15" fill="rgb(229,8,40)" fg:x="13754339323" fg:w="2495731"/><text x="78.7244%" y="6815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (157,494,874 samples, 0.90%)</title><rect x="77.5968%" y="7029" width="0.8986%" height="15" fill="rgb(221,135,30)" fg:x="13600527986" fg:w="157494874"/><text x="77.8468%" y="7039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (157,494,874 samples, 0.90%)</title><rect x="77.5968%" y="7013" width="0.8986%" height="15" fill="rgb(249,193,18)" fg:x="13600527986" fg:w="157494874"/><text x="77.8468%" y="7023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (157,494,874 samples, 0.90%)</title><rect x="77.5968%" y="6997" width="0.8986%" height="15" fill="rgb(209,133,39)" fg:x="13600527986" fg:w="157494874"/><text x="77.8468%" y="7007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (157,494,874 samples, 0.90%)</title><rect x="77.5968%" y="6981" width="0.8986%" height="15" fill="rgb(232,100,14)" fg:x="13600527986" fg:w="157494874"/><text x="77.8468%" y="6991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (157,494,874 samples, 0.90%)</title><rect x="77.5968%" y="6965" width="0.8986%" height="15" fill="rgb(224,185,1)" fg:x="13600527986" fg:w="157494874"/><text x="77.8468%" y="6975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (157,494,874 samples, 0.90%)</title><rect x="77.5968%" y="6949" width="0.8986%" height="15" fill="rgb(223,139,8)" fg:x="13600527986" fg:w="157494874"/><text x="77.8468%" y="6959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (157,494,874 samples, 0.90%)</title><rect x="77.5968%" y="6933" width="0.8986%" height="15" fill="rgb(232,213,38)" fg:x="13600527986" fg:w="157494874"/><text x="77.8468%" y="6943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (157,494,874 samples, 0.90%)</title><rect x="77.5968%" y="6917" width="0.8986%" height="15" fill="rgb(207,94,22)" fg:x="13600527986" fg:w="157494874"/><text x="77.8468%" y="6927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (142,383,313 samples, 0.81%)</title><rect x="77.6830%" y="6901" width="0.8124%" height="15" fill="rgb(219,183,54)" fg:x="13615639547" fg:w="142383313"/><text x="77.9330%" y="6911.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (142,383,313 samples, 0.81%)</title><rect x="77.6830%" y="6885" width="0.8124%" height="15" fill="rgb(216,185,54)" fg:x="13615639547" fg:w="142383313"/><text x="77.9330%" y="6895.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (8,838,978 samples, 0.05%)</title><rect x="78.4449%" y="6869" width="0.0504%" height="15" fill="rgb(254,217,39)" fg:x="13749183882" fg:w="8838978"/><text x="78.6949%" y="6879.50"></text></g><g><title>ndarray::arraytraits::&lt;impl core::ops::index::Index&lt;I&gt; for ndarray::ArrayBase&lt;S,D&gt;&gt;::index (6,305,731 samples, 0.04%)</title><rect x="78.4594%" y="6853" width="0.0360%" height="15" fill="rgb(240,178,23)" fg:x="13751717129" fg:w="6305731"/><text x="78.7094%" y="6863.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each (182,336,403 samples, 1.04%)</title><rect x="78.4954%" y="7029" width="1.0403%" height="15" fill="rgb(218,11,47)" fg:x="13758022860" fg:w="182336403"/><text x="78.7454%" y="7039.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core (182,336,403 samples, 1.04%)</title><rect x="78.4954%" y="7013" width="1.0403%" height="15" fill="rgb(218,51,51)" fg:x="13758022860" fg:w="182336403"/><text x="78.7454%" y="7023.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided (182,336,403 samples, 1.04%)</title><rect x="78.4954%" y="6997" width="1.0403%" height="15" fill="rgb(238,126,27)" fg:x="13758022860" fg:w="182336403"/><text x="78.7454%" y="7007.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::for_each_core_strided_c (182,336,403 samples, 1.04%)</title><rect x="78.4954%" y="6981" width="1.0403%" height="15" fill="rgb(249,202,22)" fg:x="13758022860" fg:w="182336403"/><text x="78.7454%" y="6991.50"></text></g><g><title>ndarray::zip::Zip&lt;P,D&gt;::inner (182,336,403 samples, 1.04%)</title><rect x="78.4954%" y="6965" width="1.0403%" height="15" fill="rgb(254,195,49)" fg:x="13758022860" fg:w="182336403"/><text x="78.7454%" y="6975.50"></text></g><g><title>ndarray::zip::Zip&lt;(P1,P2),D&gt;::for_each::_{{closure}} (134,215,694 samples, 0.77%)</title><rect x="78.7699%" y="6949" width="0.7658%" height="15" fill="rgb(208,123,14)" fg:x="13806143569" fg:w="134215694"/><text x="79.0199%" y="6959.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (134,215,694 samples, 0.77%)</title><rect x="78.7699%" y="6933" width="0.7658%" height="15" fill="rgb(224,200,8)" fg:x="13806143569" fg:w="134215694"/><text x="79.0199%" y="6943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (35,145,829 samples, 0.20%)</title><rect x="79.6139%" y="6981" width="0.2005%" height="15" fill="rgb(217,61,36)" fg:x="13954062750" fg:w="35145829"/><text x="79.8639%" y="6991.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (35,145,829 samples, 0.20%)</title><rect x="79.6139%" y="6965" width="0.2005%" height="15" fill="rgb(206,35,45)" fg:x="13954062750" fg:w="35145829"/><text x="79.8639%" y="6975.50"></text></g><g><title>profile::internal::sad_converged (51,802,012 samples, 0.30%)</title><rect x="79.5357%" y="7029" width="0.2956%" height="15" fill="rgb(217,65,33)" fg:x="13940359263" fg:w="51802012"/><text x="79.7857%" y="7039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (51,802,012 samples, 0.30%)</title><rect x="79.5357%" y="7013" width="0.2956%" height="15" fill="rgb(222,158,48)" fg:x="13940359263" fg:w="51802012"/><text x="79.7857%" y="7023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (51,802,012 samples, 0.30%)</title><rect x="79.5357%" y="6997" width="0.2956%" height="15" fill="rgb(254,2,54)" fg:x="13940359263" fg:w="51802012"/><text x="79.7857%" y="7007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2,952,696 samples, 0.02%)</title><rect x="79.8144%" y="6981" width="0.0168%" height="15" fill="rgb(250,143,38)" fg:x="13989208579" fg:w="2952696"/><text x="80.0644%" y="6991.50"></text></g><g><title>profile::internal::sad_converged::_{{closure}} (2,952,696 samples, 0.02%)</title><rect x="79.8144%" y="6965" width="0.0168%" height="15" fill="rgb(248,25,0)" fg:x="13989208579" fg:w="2952696"/><text x="80.0644%" y="6975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="7013" width="0.0145%" height="15" fill="rgb(206,152,27)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="7023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6997" width="0.0145%" height="15" fill="rgb(240,77,30)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="7007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6981" width="0.0145%" height="15" fill="rgb(231,5,3)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6965" width="0.0145%" height="15" fill="rgb(207,226,32)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6949" width="0.0145%" height="15" fill="rgb(222,207,47)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6933" width="0.0145%" height="15" fill="rgb(229,115,45)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6917" width="0.0145%" height="15" fill="rgb(224,191,6)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6901" width="0.0145%" height="15" fill="rgb(230,227,24)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6911.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6885" width="0.0145%" height="15" fill="rgb(228,80,19)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6895.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6869" width="0.0145%" height="15" fill="rgb(247,229,0)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6879.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6853" width="0.0145%" height="15" fill="rgb(237,194,15)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6863.50"></text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (2,539,724 samples, 0.01%)</title><rect x="79.8312%" y="6837" width="0.0145%" height="15" fill="rgb(219,203,20)" fg:x="13992161275" fg:w="2539724"/><text x="80.0812%" y="6847.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (99,419,693 samples, 0.57%)</title><rect x="79.8457%" y="6933" width="0.5672%" height="15" fill="rgb(234,128,8)" fg:x="13994700999" fg:w="99419693"/><text x="80.0957%" y="6943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (99,419,693 samples, 0.57%)</title><rect x="79.8457%" y="6917" width="0.5672%" height="15" fill="rgb(248,202,8)" fg:x="13994700999" fg:w="99419693"/><text x="80.0957%" y="6927.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (105,345,513 samples, 0.60%)</title><rect x="79.8457%" y="6965" width="0.6010%" height="15" fill="rgb(206,104,37)" fg:x="13994700999" fg:w="105345513"/><text x="80.0957%" y="6975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (105,345,513 samples, 0.60%)</title><rect x="79.8457%" y="6949" width="0.6010%" height="15" fill="rgb(223,8,27)" fg:x="13994700999" fg:w="105345513"/><text x="80.0957%" y="6959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5,925,820 samples, 0.03%)</title><rect x="80.4129%" y="6933" width="0.0338%" height="15" fill="rgb(216,217,28)" fg:x="14094120692" fg:w="5925820"/><text x="80.6629%" y="6943.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7845" width="80.9192%" height="15" fill="rgb(249,199,1)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7855.50">rayon_core::registry::WorkerThread::execute</text></g><g><title>rayon_core::job::JobRef::execute (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7829" width="80.9192%" height="15" fill="rgb(240,85,17)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7839.50">rayon_core::job::JobRef::execute</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7813" width="80.9192%" height="15" fill="rgb(206,108,45)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7823.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7797" width="80.9192%" height="15" fill="rgb(245,210,41)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7807.50">rayon_core::job::JobResult&lt;T&gt;::call</text></g><g><title>rayon_core::unwind::halt_unwinding (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7781" width="80.9192%" height="15" fill="rgb(206,13,37)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7791.50">rayon_core::unwind::halt_unwinding</text></g><g><title>std::panic::catch_unwind (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7765" width="80.9192%" height="15" fill="rgb(250,61,18)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7775.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7749" width="80.9192%" height="15" fill="rgb(235,172,48)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7759.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7733" width="80.9192%" height="15" fill="rgb(249,201,17)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7743.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7717" width="80.9192%" height="15" fill="rgb(219,208,6)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7727.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (14,182,849,132 samples, 80.92%)</title><rect x="3.3114%" y="7701" width="80.9192%" height="15" fill="rgb(248,31,23)" fg:x="580394306" fg:w="14182849132"/><text x="3.5614%" y="7711.50">rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}}</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7685" width="6.6338%" height="15" fill="rgb(245,15,42)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7695.50">rayon_cor..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7669" width="6.6338%" height="15" fill="rgb(222,217,39)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7679.50">rayon_cor..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7653" width="6.6338%" height="15" fill="rgb(210,219,27)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7663.50">rayon_cor..</text></g><g><title>std::panic::catch_unwind (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7637" width="6.6338%" height="15" fill="rgb(252,166,36)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7647.50">std::pani..</text></g><g><title>std::panicking::try (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7621" width="6.6338%" height="15" fill="rgb(245,132,34)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7631.50">std::pani..</text></g><g><title>std::panicking::try::do_call (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7605" width="6.6338%" height="15" fill="rgb(236,54,3)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7615.50">std::pani..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7589" width="6.6338%" height="15" fill="rgb(241,173,43)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7599.50">&lt;core::pa..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7573" width="6.6338%" height="15" fill="rgb(215,190,9)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7583.50">rayon_cor..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7557" width="6.6338%" height="15" fill="rgb(242,101,16)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7567.50">rayon::it..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7541" width="6.6338%" height="15" fill="rgb(223,190,21)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7551.50">rayon::it..</text></g><g><title>rayon_core::join::join_context (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7525" width="6.6338%" height="15" fill="rgb(215,228,25)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7535.50">rayon_cor..</text></g><g><title>rayon_core::registry::in_worker (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7509" width="6.6338%" height="15" fill="rgb(225,36,22)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7519.50">rayon_cor..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7493" width="6.6338%" height="15" fill="rgb(251,106,46)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7503.50">rayon_cor..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7477" width="6.6338%" height="15" fill="rgb(208,90,1)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7487.50">rayon_cor..</text></g><g><title>std::panic::catch_unwind (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7461" width="6.6338%" height="15" fill="rgb(243,10,4)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7471.50">std::pani..</text></g><g><title>std::panicking::try (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7445" width="6.6338%" height="15" fill="rgb(212,137,27)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7455.50">std::pani..</text></g><g><title>std::panicking::try::do_call (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7429" width="6.6338%" height="15" fill="rgb(231,220,49)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7439.50">std::pani..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7413" width="6.6338%" height="15" fill="rgb(237,96,20)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7423.50">&lt;core::pa..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7397" width="6.6338%" height="15" fill="rgb(239,229,30)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7407.50">rayon_cor..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7381" width="6.6338%" height="15" fill="rgb(219,65,33)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7391.50">rayon::it..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7365" width="6.6338%" height="15" fill="rgb(243,134,7)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7375.50">rayon::it..</text></g><g><title>rayon_core::join::join_context (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7349" width="6.6338%" height="15" fill="rgb(216,177,54)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7359.50">rayon_cor..</text></g><g><title>rayon_core::registry::in_worker (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7333" width="6.6338%" height="15" fill="rgb(211,160,20)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7343.50">rayon_cor..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7317" width="6.6338%" height="15" fill="rgb(239,85,39)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7327.50">rayon_cor..</text></g><g><title>rayon_core::unwind::halt_unwinding (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7301" width="6.6338%" height="15" fill="rgb(232,125,22)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7311.50">rayon_cor..</text></g><g><title>std::panic::catch_unwind (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7285" width="6.6338%" height="15" fill="rgb(244,57,34)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7295.50">std::pani..</text></g><g><title>std::panicking::try (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7269" width="6.6338%" height="15" fill="rgb(214,203,32)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7279.50">std::pani..</text></g><g><title>std::panicking::try::do_call (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7253" width="6.6338%" height="15" fill="rgb(207,58,43)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7263.50">std::pani..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7237" width="6.6338%" height="15" fill="rgb(215,193,15)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7247.50">&lt;core::pa..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7221" width="6.6338%" height="15" fill="rgb(232,15,44)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7231.50">rayon_cor..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7205" width="6.6338%" height="15" fill="rgb(212,3,48)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7215.50">rayon::it..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7189" width="6.6338%" height="15" fill="rgb(218,128,7)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7199.50">rayon::it..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7173" width="6.6338%" height="15" fill="rgb(226,216,39)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7183.50">rayon::it..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7157" width="6.6338%" height="15" fill="rgb(243,47,51)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7167.50">&lt;rayon::i..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7141" width="6.6338%" height="15" fill="rgb(241,183,40)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7151.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7125" width="6.6338%" height="15" fill="rgb(231,217,32)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7135.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7109" width="6.6338%" height="15" fill="rgb(229,61,38)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7119.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::SpecFold&gt;::spec_fold (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7093" width="6.6338%" height="15" fill="rgb(225,210,5)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7103.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7077" width="6.6338%" height="15" fill="rgb(231,79,45)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7087.50">core::ite..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7061" width="6.6338%" height="15" fill="rgb(224,100,7)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7071.50">core::ops..</text></g><g><title>profile::demean_impl::_{{closure}} (1,162,715,452 samples, 6.63%)</title><rect x="77.5968%" y="7045" width="6.6338%" height="15" fill="rgb(241,198,18)" fg:x="13600527986" fg:w="1162715452"/><text x="77.8468%" y="7055.50">profile::..</text></g><g><title>profile::internal::subtract_weighted_group_mean (771,082,163 samples, 4.40%)</title><rect x="79.8312%" y="7029" width="4.3994%" height="15" fill="rgb(252,97,53)" fg:x="13992161275" fg:w="771082163"/><text x="80.0812%" y="7039.50">profi..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (768,542,439 samples, 4.38%)</title><rect x="79.8457%" y="7013" width="4.3849%" height="15" fill="rgb(220,88,7)" fg:x="13994700999" fg:w="768542439"/><text x="80.0957%" y="7023.50">core:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (768,542,439 samples, 4.38%)</title><rect x="79.8457%" y="6997" width="4.3849%" height="15" fill="rgb(213,176,14)" fg:x="13994700999" fg:w="768542439"/><text x="80.0957%" y="7007.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (768,542,439 samples, 4.38%)</title><rect x="79.8457%" y="6981" width="4.3849%" height="15" fill="rgb(246,73,7)" fg:x="13994700999" fg:w="768542439"/><text x="80.0957%" y="6991.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (663,196,926 samples, 3.78%)</title><rect x="80.4468%" y="6965" width="3.7838%" height="15" fill="rgb(245,64,36)" fg:x="14100046512" fg:w="663196926"/><text x="80.6968%" y="6975.50">core..</text></g><g><title>profile::internal::subtract_weighted_group_mean::_{{closure}} (663,196,926 samples, 3.78%)</title><rect x="80.4468%" y="6949" width="3.7838%" height="15" fill="rgb(245,80,10)" fg:x="14100046512" fg:w="663196926"/><text x="80.6968%" y="6959.50">prof..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (150,870,877 samples, 0.86%)</title><rect x="83.3698%" y="6933" width="0.8608%" height="15" fill="rgb(232,107,50)" fg:x="14612372561" fg:w="150870877"/><text x="83.6198%" y="6943.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (150,870,877 samples, 0.86%)</title><rect x="83.3698%" y="6917" width="0.8608%" height="15" fill="rgb(253,3,0)" fg:x="14612372561" fg:w="150870877"/><text x="83.6198%" y="6927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (150,870,877 samples, 0.86%)</title><rect x="83.3698%" y="6901" width="0.8608%" height="15" fill="rgb(212,99,53)" fg:x="14612372561" fg:w="150870877"/><text x="83.6198%" y="6911.50"></text></g><g><title>[libc.so.6] (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8133" width="80.9359%" height="15" fill="rgb(249,111,54)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8143.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8117" width="80.9359%" height="15" fill="rgb(249,55,30)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8127.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8101" width="80.9359%" height="15" fill="rgb(237,47,42)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8111.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8085" width="80.9359%" height="15" fill="rgb(211,20,18)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8095.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8069" width="80.9359%" height="15" fill="rgb(231,203,46)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8079.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8053" width="80.9359%" height="15" fill="rgb(237,142,3)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8063.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8037" width="80.9359%" height="15" fill="rgb(241,107,1)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8047.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8021" width="80.9359%" height="15" fill="rgb(229,83,13)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8031.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="8005" width="80.9359%" height="15" fill="rgb(241,91,40)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="8015.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7989" width="80.9359%" height="15" fill="rgb(225,3,45)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7999.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7973" width="80.9359%" height="15" fill="rgb(244,223,14)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7983.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7957" width="80.9359%" height="15" fill="rgb(224,124,37)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7967.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7941" width="80.9359%" height="15" fill="rgb(251,171,30)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7951.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}}</text></g><g><title>rayon_core::registry::ThreadBuilder::run (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7925" width="80.9359%" height="15" fill="rgb(236,46,54)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7935.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7909" width="80.9359%" height="15" fill="rgb(245,213,5)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7919.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7893" width="80.9359%" height="15" fill="rgb(230,144,27)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7903.50">rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7877" width="80.9359%" height="15" fill="rgb(220,86,6)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7887.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (14,185,778,587 samples, 80.94%)</title><rect x="3.3114%" y="7861" width="80.9359%" height="15" fill="rgb(240,20,13)" fg:x="580394306" fg:w="14185778587"/><text x="3.5614%" y="7871.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::registry::WorkerThread::find_work (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7845" width="0.0167%" height="15" fill="rgb(217,89,34)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7855.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7829" width="0.0167%" height="15" fill="rgb(229,13,5)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7839.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7813" width="0.0167%" height="15" fill="rgb(244,67,35)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7823.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7797" width="0.0167%" height="15" fill="rgb(221,40,2)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7781" width="0.0167%" height="15" fill="rgb(237,157,21)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7791.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7765" width="0.0167%" height="15" fill="rgb(222,94,11)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7775.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7749" width="0.0167%" height="15" fill="rgb(249,113,6)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7733" width="0.0167%" height="15" fill="rgb(238,137,36)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7743.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7717" width="0.0167%" height="15" fill="rgb(210,102,26)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7727.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7701" width="0.0167%" height="15" fill="rgb(218,30,30)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7711.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7685" width="0.0167%" height="15" fill="rgb(214,67,26)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7695.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7669" width="0.0167%" height="15" fill="rgb(251,9,53)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7679.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7653" width="0.0167%" height="15" fill="rgb(228,204,25)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7663.50"></text></g><g><title>crossbeam_epoch::default::pin (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7637" width="0.0167%" height="15" fill="rgb(207,153,8)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7647.50"></text></g><g><title>crossbeam_epoch::default::with_handle (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7621" width="0.0167%" height="15" fill="rgb(242,9,16)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7631.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7605" width="0.0167%" height="15" fill="rgb(217,211,10)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7615.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7589" width="0.0167%" height="15" fill="rgb(219,228,52)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7599.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7573" width="0.0167%" height="15" fill="rgb(231,92,29)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7583.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7557" width="0.0167%" height="15" fill="rgb(232,8,23)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7567.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7541" width="0.0167%" height="15" fill="rgb(216,211,34)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7551.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7525" width="0.0167%" height="15" fill="rgb(236,151,0)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7535.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7509" width="0.0167%" height="15" fill="rgb(209,168,3)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7519.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7493" width="0.0167%" height="15" fill="rgb(208,129,28)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7503.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7477" width="0.0167%" height="15" fill="rgb(229,78,22)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7487.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (2,929,455 samples, 0.02%)</title><rect x="84.2306%" y="7461" width="0.0167%" height="15" fill="rgb(228,187,13)" fg:x="14763243438" fg:w="2929455"/><text x="84.4806%" y="7471.50"></text></g><g><title>[unknown] (3,419,850 samples, 0.02%)</title><rect x="84.2473%" y="8133" width="0.0195%" height="15" fill="rgb(240,119,24)" fg:x="14766172893" fg:w="3419850"/><text x="84.4973%" y="8143.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,906,113 samples, 0.02%)</title><rect x="84.3945%" y="8005" width="0.0223%" height="15" fill="rgb(209,194,42)" fg:x="14791967512" fg:w="3906113"/><text x="84.6445%" y="8015.50"></text></g><g><title>_Unwind_Find_FDE (8,496,274 samples, 0.05%)</title><rect x="84.3692%" y="8021" width="0.0485%" height="15" fill="rgb(247,200,46)" fg:x="14787536498" fg:w="8496274"/><text x="84.6192%" y="8031.50"></text></g><g><title>[libgcc_s.so.1] (16,569,993 samples, 0.09%)</title><rect x="84.3254%" y="8037" width="0.0945%" height="15" fill="rgb(218,76,16)" fg:x="14779866348" fg:w="16569993"/><text x="84.5754%" y="8047.50"></text></g><g><title>[libgcc_s.so.1] (41,569,514 samples, 0.24%)</title><rect x="84.2930%" y="8053" width="0.2372%" height="15" fill="rgb(225,21,48)" fg:x="14774181733" fg:w="41569514"/><text x="84.5430%" y="8063.50"></text></g><g><title>_Unwind_Find_FDE (19,314,906 samples, 0.11%)</title><rect x="84.4200%" y="8037" width="0.1102%" height="15" fill="rgb(239,223,50)" fg:x="14796436341" fg:w="19314906"/><text x="84.6700%" y="8047.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,266,989 samples, 0.01%)</title><rect x="84.5466%" y="7925" width="0.0129%" height="15" fill="rgb(244,45,21)" fg:x="14818631331" fg:w="2266989"/><text x="84.7966%" y="7935.50"></text></g><g><title>backtrace::backtrace::libunwind::trace::trace_fn (5,388,010 samples, 0.03%)</title><rect x="84.5302%" y="8053" width="0.0307%" height="15" fill="rgb(232,33,43)" fg:x="14815751247" fg:w="5388010"/><text x="84.7802%" y="8063.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,528,612 samples, 0.03%)</title><rect x="84.5351%" y="8037" width="0.0258%" height="15" fill="rgb(209,8,3)" fg:x="14816610645" fg:w="4528612"/><text x="84.7851%" y="8047.50"></text></g><g><title>pprof::profiler::perf_signal_handler::_{{closure}} (4,528,612 samples, 0.03%)</title><rect x="84.5351%" y="8021" width="0.0258%" height="15" fill="rgb(214,25,53)" fg:x="14816610645" fg:w="4528612"/><text x="84.7851%" y="8031.50"></text></g><g><title>&lt;backtrace::backtrace::Frame as core::clone::Clone&gt;::clone (4,377,828 samples, 0.02%)</title><rect x="84.5359%" y="8005" width="0.0250%" height="15" fill="rgb(254,186,54)" fg:x="14816761429" fg:w="4377828"/><text x="84.7859%" y="8015.50"></text></g><g><title>&lt;backtrace::backtrace::libunwind::Frame as core::clone::Clone&gt;::clone (4,377,828 samples, 0.02%)</title><rect x="84.5359%" y="7989" width="0.0250%" height="15" fill="rgb(208,174,49)" fg:x="14816761429" fg:w="4377828"/><text x="84.7859%" y="7999.50"></text></g><g><title>backtrace::backtrace::libunwind::Frame::symbol_address (2,875,337 samples, 0.02%)</title><rect x="84.5445%" y="7973" width="0.0164%" height="15" fill="rgb(233,191,51)" fg:x="14818263920" fg:w="2875337"/><text x="84.7945%" y="7983.50"></text></g><g><title>_Unwind_FindEnclosingFunction (2,875,337 samples, 0.02%)</title><rect x="84.5445%" y="7957" width="0.0164%" height="15" fill="rgb(222,134,10)" fg:x="14818263920" fg:w="2875337"/><text x="84.7945%" y="7967.50"></text></g><g><title>_Unwind_Find_FDE (2,875,337 samples, 0.02%)</title><rect x="84.5445%" y="7941" width="0.0164%" height="15" fill="rgb(230,226,20)" fg:x="14818263920" fg:w="2875337"/><text x="84.7945%" y="7951.50"></text></g><g><title>&lt;pprof::backtrace::backtrace_rs::Trace as pprof::backtrace::Trace&gt;::trace (51,642,717 samples, 0.29%)</title><rect x="84.2697%" y="8117" width="0.2946%" height="15" fill="rgb(251,111,25)" fg:x="14770103381" fg:w="51642717"/><text x="84.5197%" y="8127.50"></text></g><g><title>backtrace::backtrace::trace_unsynchronized (51,642,717 samples, 0.29%)</title><rect x="84.2697%" y="8101" width="0.2946%" height="15" fill="rgb(224,40,46)" fg:x="14770103381" fg:w="51642717"/><text x="84.5197%" y="8111.50"></text></g><g><title>backtrace::backtrace::libunwind::trace (51,642,717 samples, 0.29%)</title><rect x="84.2697%" y="8085" width="0.2946%" height="15" fill="rgb(236,108,47)" fg:x="14770103381" fg:w="51642717"/><text x="84.5197%" y="8095.50"></text></g><g><title>_Unwind_Backtrace (51,642,717 samples, 0.29%)</title><rect x="84.2697%" y="8069" width="0.2946%" height="15" fill="rgb(234,93,0)" fg:x="14770103381" fg:w="51642717"/><text x="84.5197%" y="8079.50"></text></g><g><title>pprof::collector::Bucket&lt;T&gt;::add (1,933,960 samples, 0.01%)</title><rect x="84.5644%" y="8069" width="0.0110%" height="15" fill="rgb(224,213,32)" fg:x="14821746098" fg:w="1933960"/><text x="84.8144%" y="8079.50"></text></g><g><title>pprof::profiler::Profiler::sample (5,155,476 samples, 0.03%)</title><rect x="84.5644%" y="8117" width="0.0294%" height="15" fill="rgb(251,11,48)" fg:x="14821746098" fg:w="5155476"/><text x="84.8144%" y="8127.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::add (5,155,476 samples, 0.03%)</title><rect x="84.5644%" y="8101" width="0.0294%" height="15" fill="rgb(236,173,5)" fg:x="14821746098" fg:w="5155476"/><text x="84.8144%" y="8111.50"></text></g><g><title>pprof::collector::HashCounter&lt;T&gt;::add (5,155,476 samples, 0.03%)</title><rect x="84.5644%" y="8085" width="0.0294%" height="15" fill="rgb(230,95,12)" fg:x="14821746098" fg:w="5155476"/><text x="84.8144%" y="8095.50"></text></g><g><title>pprof::collector::HashCounter&lt;T&gt;::hash (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="8069" width="0.0184%" height="15" fill="rgb(232,209,1)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="8079.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::hash::Hash&gt;::hash (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="8053" width="0.0184%" height="15" fill="rgb(232,6,1)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="8063.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="8037" width="0.0184%" height="15" fill="rgb(210,224,50)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="8047.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::hash::Hash&gt;::hash::_{{closure}} (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="8021" width="0.0184%" height="15" fill="rgb(228,127,35)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="8031.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *mut T&gt;::hash (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="8005" width="0.0184%" height="15" fill="rgb(245,102,45)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="8015.50"></text></g><g><title>core::hash::Hasher::write_usize (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="7989" width="0.0184%" height="15" fill="rgb(214,1,49)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="7999.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="7973" width="0.0184%" height="15" fill="rgb(226,163,40)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="7983.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="7957" width="0.0184%" height="15" fill="rgb(239,212,28)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="7967.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,221,516 samples, 0.02%)</title><rect x="84.5754%" y="7941" width="0.0184%" height="15" fill="rgb(220,20,13)" fg:x="14823680058" fg:w="3221516"/><text x="84.8254%" y="7951.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,925,384 samples, 0.02%)</title><rect x="84.5771%" y="7925" width="0.0167%" height="15" fill="rgb(210,164,35)" fg:x="14823976190" fg:w="2925384"/><text x="84.8271%" y="7935.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,925,384 samples, 0.02%)</title><rect x="84.5771%" y="7909" width="0.0167%" height="15" fill="rgb(248,109,41)" fg:x="14823976190" fg:w="2925384"/><text x="84.8271%" y="7919.50"></text></g><g><title>[libc.so.6] (14,822,920,623 samples, 84.57%)</title><rect x="0.0468%" y="8149" width="84.5711%" height="15" fill="rgb(238,23,50)" fg:x="8199107" fg:w="14822920623"/><text x="0.2968%" y="8159.50">[libc.so.6]</text></g><g><title>perf_signal_handler (61,526,987 samples, 0.35%)</title><rect x="84.2668%" y="8133" width="0.3510%" height="15" fill="rgb(211,48,49)" fg:x="14769592743" fg:w="61526987"/><text x="84.5168%" y="8143.50"></text></g><g><title>std::time::SystemTime::now (4,218,156 samples, 0.02%)</title><rect x="84.5938%" y="8117" width="0.0241%" height="15" fill="rgb(223,36,21)" fg:x="14826901574" fg:w="4218156"/><text x="84.8438%" y="8127.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (4,218,156 samples, 0.02%)</title><rect x="84.5938%" y="8101" width="0.0241%" height="15" fill="rgb(207,123,46)" fg:x="14826901574" fg:w="4218156"/><text x="84.8438%" y="8111.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4,218,156 samples, 0.02%)</title><rect x="84.5938%" y="8085" width="0.0241%" height="15" fill="rgb(240,218,32)" fg:x="14826901574" fg:w="4218156"/><text x="84.8438%" y="8095.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8133" width="0.0174%" height="15" fill="rgb(252,5,43)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8143.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8117" width="0.0174%" height="15" fill="rgb(252,84,19)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8101" width="0.0174%" height="15" fill="rgb(243,152,39)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8085" width="0.0174%" height="15" fill="rgb(234,160,15)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8095.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8069" width="0.0174%" height="15" fill="rgb(237,34,20)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8079.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8053" width="0.0174%" height="15" fill="rgb(229,97,13)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8063.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8037" width="0.0174%" height="15" fill="rgb(234,71,50)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8047.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8021" width="0.0174%" height="15" fill="rgb(253,155,4)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8031.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="8005" width="0.0174%" height="15" fill="rgb(222,185,37)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="8015.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7989" width="0.0174%" height="15" fill="rgb(251,177,13)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7999.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7973" width="0.0174%" height="15" fill="rgb(250,179,40)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7983.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7957" width="0.0174%" height="15" fill="rgb(242,44,2)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7967.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7941" width="0.0174%" height="15" fill="rgb(216,177,13)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7925" width="0.0174%" height="15" fill="rgb(216,106,43)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7909" width="0.0174%" height="15" fill="rgb(216,183,2)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7919.50"></text></g><g><title>alloc::alloc::alloc (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7893" width="0.0174%" height="15" fill="rgb(249,75,3)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7903.50"></text></g><g><title>__rustc::__rdl_alloc (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7877" width="0.0174%" height="15" fill="rgb(219,67,39)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7887.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7861" width="0.0174%" height="15" fill="rgb(253,228,2)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7871.50"></text></g><g><title>malloc (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7845" width="0.0174%" height="15" fill="rgb(235,138,27)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7855.50"></text></g><g><title>[libc.so.6] (3,045,054 samples, 0.02%)</title><rect x="84.6462%" y="7829" width="0.0174%" height="15" fill="rgb(236,97,51)" fg:x="14836086104" fg:w="3045054"/><text x="84.8962%" y="7839.50"></text></g><g><title>[unknown] (10,342,510 samples, 0.06%)</title><rect x="84.6178%" y="8149" width="0.0590%" height="15" fill="rgb(240,80,30)" fg:x="14831119730" fg:w="10342510"/><text x="84.8678%" y="8159.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Collector&lt;pprof::frames::UnresolvedFrames&gt;&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7973" width="0.0792%" height="15" fill="rgb(230,178,19)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::HashCounter&lt;pprof::frames::UnresolvedFrames&gt;&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7957" width="0.0792%" height="15" fill="rgb(210,190,27)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt;&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7941" width="0.0792%" height="15" fill="rgb(222,107,31)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7951.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7925" width="0.0792%" height="15" fill="rgb(216,127,34)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7935.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7909" width="0.0792%" height="15" fill="rgb(234,116,52)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt;&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7893" width="0.0792%" height="15" fill="rgb(222,124,15)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7877" width="0.0792%" height="15" fill="rgb(231,179,28)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7887.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7861" width="0.0792%" height="15" fill="rgb(226,93,45)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7871.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::frames::UnresolvedFrames&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7845" width="0.0792%" height="15" fill="rgb(215,8,51)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7855.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[backtrace::backtrace::Frame: 128]&gt;&gt; (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7829" width="0.0792%" height="15" fill="rgb(223,106,5)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7839.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (13,880,606 samples, 0.08%)</title><rect x="84.7148%" y="7813" width="0.0792%" height="15" fill="rgb(250,191,5)" fg:x="14848117719" fg:w="13880606"/><text x="84.9648%" y="7823.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (2,961,726 samples, 0.02%)</title><rect x="84.7771%" y="7797" width="0.0169%" height="15" fill="rgb(242,132,44)" fg:x="14859036599" fg:w="2961726"/><text x="85.0271%" y="7807.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::profiler::ProfilerGuard&gt; (23,307,048 samples, 0.13%)</title><rect x="84.7148%" y="8037" width="0.1330%" height="15" fill="rgb(251,152,29)" fg:x="14848117719" fg:w="23307048"/><text x="84.9648%" y="8047.50"></text></g><g><title>&lt;pprof::profiler::ProfilerGuard as core::ops::drop::Drop&gt;::drop (23,307,048 samples, 0.13%)</title><rect x="84.7148%" y="8021" width="0.1330%" height="15" fill="rgb(218,179,5)" fg:x="14848117719" fg:w="23307048"/><text x="84.9648%" y="8031.50"></text></g><g><title>pprof::profiler::Profiler::stop (23,307,048 samples, 0.13%)</title><rect x="84.7148%" y="8005" width="0.1330%" height="15" fill="rgb(227,67,19)" fg:x="14848117719" fg:w="23307048"/><text x="84.9648%" y="8015.50"></text></g><g><title>pprof::profiler::Profiler::init (23,307,048 samples, 0.13%)</title><rect x="84.7148%" y="7989" width="0.1330%" height="15" fill="rgb(233,119,31)" fg:x="14848117719" fg:w="23307048"/><text x="84.9648%" y="7999.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7973" width="0.0538%" height="15" fill="rgb(241,120,22)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7983.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7957" width="0.0538%" height="15" fill="rgb(224,102,30)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7941" width="0.0538%" height="15" fill="rgb(210,164,37)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7925" width="0.0538%" height="15" fill="rgb(226,191,16)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7935.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7909" width="0.0538%" height="15" fill="rgb(214,40,45)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7919.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7893" width="0.0538%" height="15" fill="rgb(244,29,26)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7903.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7877" width="0.0538%" height="15" fill="rgb(216,16,5)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7887.50"></text></g><g><title>core::ops::function::FnMut::call_mut (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7861" width="0.0538%" height="15" fill="rgb(249,76,35)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7871.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7845" width="0.0538%" height="15" fill="rgb(207,11,44)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7855.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (9,426,442 samples, 0.05%)</title><rect x="84.7940%" y="7829" width="0.0538%" height="15" fill="rgb(228,190,49)" fg:x="14861998325" fg:w="9426442"/><text x="85.0440%" y="7839.50"></text></g><g><title>core::ptr::write (8,407,013 samples, 0.05%)</title><rect x="84.7998%" y="7813" width="0.0480%" height="15" fill="rgb(214,173,12)" fg:x="14863017754" fg:w="8407013"/><text x="85.0498%" y="7823.50"></text></g><g><title>[unknown] (3,593,053 samples, 0.02%)</title><rect x="84.8273%" y="7797" width="0.0205%" height="15" fill="rgb(218,26,35)" fg:x="14867831714" fg:w="3593053"/><text x="85.0773%" y="7807.50"></text></g><g><title>&lt;ndarray::dimension::dim::Dim&lt;[usize: 2]&gt; as ndarray::dimension::dimension_trait::Dimension&gt;::next_for (8,767,085 samples, 0.05%)</title><rect x="84.9229%" y="7989" width="0.0500%" height="15" fill="rgb(220,200,19)" fg:x="14884579346" fg:w="8767085"/><text x="85.1729%" y="7999.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18,241,269 samples, 0.10%)</title><rect x="84.9729%" y="7989" width="0.1041%" height="15" fill="rgb(239,95,49)" fg:x="14893346431" fg:w="18241269"/><text x="85.2229%" y="7999.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18,241,269 samples, 0.10%)</title><rect x="84.9729%" y="7973" width="0.1041%" height="15" fill="rgb(235,85,53)" fg:x="14893346431" fg:w="18241269"/><text x="85.2229%" y="7983.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (18,241,269 samples, 0.10%)</title><rect x="84.9729%" y="7957" width="0.1041%" height="15" fill="rgb(233,133,31)" fg:x="14893346431" fg:w="18241269"/><text x="85.2229%" y="7967.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (109,668,944 samples, 0.63%)</title><rect x="85.0769%" y="7973" width="0.6257%" height="15" fill="rgb(218,25,20)" fg:x="14911587700" fg:w="109668944"/><text x="85.3269%" y="7983.50"></text></g><g><title>core::ptr::write (287,350,271 samples, 1.64%)</title><rect x="85.7027%" y="7973" width="1.6395%" height="15" fill="rgb(252,210,38)" fg:x="15021256644" fg:w="287350271"/><text x="85.9527%" y="7983.50"></text></g><g><title>[unknown] (130,164,701 samples, 0.74%)</title><rect x="86.5995%" y="7957" width="0.7426%" height="15" fill="rgb(242,134,21)" fg:x="15178442214" fg:w="130164701"/><text x="86.8495%" y="7967.50"></text></g><g><title>&lt;f64 as rand::distr::utils::FloatSIMDUtils&gt;::cast_from_int (38,892,080 samples, 0.22%)</title><rect x="88.2559%" y="7925" width="0.2219%" height="15" fill="rgb(213,28,48)" fg:x="15468772562" fg:w="38892080"/><text x="88.5059%" y="7935.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::_{{closure}} (14,864,422 samples, 0.08%)</title><rect x="89.0852%" y="7845" width="0.0848%" height="15" fill="rgb(250,196,2)" fg:x="15614118010" fg:w="14864422"/><text x="89.3352%" y="7855.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::Add&gt;::add (11,639,558 samples, 0.07%)</title><rect x="89.2104%" y="7733" width="0.0664%" height="15" fill="rgb(227,5,17)" fg:x="15636073856" fg:w="11639558"/><text x="89.4604%" y="7743.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (11,639,558 samples, 0.07%)</title><rect x="89.2104%" y="7717" width="0.0664%" height="15" fill="rgb(221,226,24)" fg:x="15636073856" fg:w="11639558"/><text x="89.4604%" y="7727.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (11,639,558 samples, 0.07%)</title><rect x="89.2104%" y="7701" width="0.0664%" height="15" fill="rgb(211,5,48)" fg:x="15636073856" fg:w="11639558"/><text x="89.4604%" y="7711.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8,240,517 samples, 0.05%)</title><rect x="89.2769%" y="7733" width="0.0470%" height="15" fill="rgb(219,150,6)" fg:x="15647713414" fg:w="8240517"/><text x="89.5269%" y="7743.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8,240,517 samples, 0.05%)</title><rect x="89.2769%" y="7717" width="0.0470%" height="15" fill="rgb(251,46,16)" fg:x="15647713414" fg:w="8240517"/><text x="89.5269%" y="7727.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (8,240,517 samples, 0.05%)</title><rect x="89.2769%" y="7701" width="0.0470%" height="15" fill="rgb(220,204,40)" fg:x="15647713414" fg:w="8240517"/><text x="89.5269%" y="7711.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (10,571,162 samples, 0.06%)</title><rect x="89.3239%" y="7733" width="0.0603%" height="15" fill="rgb(211,85,2)" fg:x="15655953931" fg:w="10571162"/><text x="89.5739%" y="7743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10,571,162 samples, 0.06%)</title><rect x="89.3239%" y="7717" width="0.0603%" height="15" fill="rgb(229,17,7)" fg:x="15655953931" fg:w="10571162"/><text x="89.5739%" y="7727.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::&lt;impl ppv_lite86::types::Vec4Ext&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::transpose4 (14,628,451 samples, 0.08%)</title><rect x="89.3842%" y="7733" width="0.0835%" height="15" fill="rgb(239,72,28)" fg:x="15666525093" fg:w="14628451"/><text x="89.6342%" y="7743.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute2x128_si256 (14,628,451 samples, 0.08%)</title><rect x="89.3842%" y="7717" width="0.0835%" height="15" fill="rgb(230,47,54)" fg:x="15666525093" fg:w="14628451"/><text x="89.6342%" y="7727.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (19,791,406 samples, 0.11%)</title><rect x="89.4767%" y="7717" width="0.1129%" height="15" fill="rgb(214,50,8)" fg:x="15682734721" fg:w="19791406"/><text x="89.7267%" y="7727.50"></text></g><g><title>ppv_lite86::soft::&lt;impl core::convert::From&lt;ppv_lite86::soft::x4&lt;W&gt;&gt; for ppv_lite86::x86_64::vec512_storage&gt;::from (19,791,406 samples, 0.11%)</title><rect x="89.4767%" y="7701" width="0.1129%" height="15" fill="rgb(216,198,43)" fg:x="15682734721" fg:w="19791406"/><text x="89.7267%" y="7711.50"></text></g><g><title>ppv_lite86::x86_64::vec512_storage::new128 (19,791,406 samples, 0.11%)</title><rect x="89.4767%" y="7685" width="0.1129%" height="15" fill="rgb(234,20,35)" fg:x="15682734721" fg:w="19791406"/><text x="89.7267%" y="7695.50"></text></g><g><title>rand_chacha::guts::d0123 (21,460,537 samples, 0.12%)</title><rect x="89.4767%" y="7733" width="0.1224%" height="15" fill="rgb(254,45,19)" fg:x="15682734721" fg:w="21460537"/><text x="89.7267%" y="7743.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (13,060,555 samples, 0.07%)</title><rect x="89.5991%" y="7717" width="0.0745%" height="15" fill="rgb(219,14,44)" fg:x="15704195258" fg:w="13060555"/><text x="89.8491%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (13,060,555 samples, 0.07%)</title><rect x="89.5991%" y="7701" width="0.0745%" height="15" fill="rgb(217,220,26)" fg:x="15704195258" fg:w="13060555"/><text x="89.8491%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (13,060,555 samples, 0.07%)</title><rect x="89.5991%" y="7685" width="0.0745%" height="15" fill="rgb(213,158,28)" fg:x="15704195258" fg:w="13060555"/><text x="89.8491%" y="7695.50"></text></g><g><title>rand_chacha::guts::diagonalize (28,171,579 samples, 0.16%)</title><rect x="89.5991%" y="7733" width="0.1607%" height="15" fill="rgb(252,51,52)" fg:x="15704195258" fg:w="28171579"/><text x="89.8491%" y="7743.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (15,111,024 samples, 0.09%)</title><rect x="89.6736%" y="7717" width="0.0862%" height="15" fill="rgb(246,89,16)" fg:x="15717255813" fg:w="15111024"/><text x="89.9236%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (15,111,024 samples, 0.09%)</title><rect x="89.6736%" y="7701" width="0.0862%" height="15" fill="rgb(216,158,49)" fg:x="15717255813" fg:w="15111024"/><text x="89.9236%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (15,111,024 samples, 0.09%)</title><rect x="89.6736%" y="7685" width="0.0862%" height="15" fill="rgb(236,107,19)" fg:x="15717255813" fg:w="15111024"/><text x="89.9236%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (183,395,876 samples, 1.05%)</title><rect x="89.7598%" y="7717" width="1.0464%" height="15" fill="rgb(228,185,30)" fg:x="15732366837" fg:w="183395876"/><text x="90.0098%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (183,395,876 samples, 1.05%)</title><rect x="89.7598%" y="7701" width="1.0464%" height="15" fill="rgb(246,134,8)" fg:x="15732366837" fg:w="183395876"/><text x="90.0098%" y="7711.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (183,395,876 samples, 1.05%)</title><rect x="89.7598%" y="7685" width="1.0464%" height="15" fill="rgb(214,143,50)" fg:x="15732366837" fg:w="183395876"/><text x="90.0098%" y="7695.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (183,395,876 samples, 1.05%)</title><rect x="89.7598%" y="7669" width="1.0464%" height="15" fill="rgb(228,75,8)" fg:x="15732366837" fg:w="183395876"/><text x="90.0098%" y="7679.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (76,065,924 samples, 0.43%)</title><rect x="90.8062%" y="7717" width="0.4340%" height="15" fill="rgb(207,175,4)" fg:x="15915762713" fg:w="76065924"/><text x="91.0562%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (76,065,924 samples, 0.43%)</title><rect x="90.8062%" y="7701" width="0.4340%" height="15" fill="rgb(205,108,24)" fg:x="15915762713" fg:w="76065924"/><text x="91.0562%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (76,065,924 samples, 0.43%)</title><rect x="90.8062%" y="7685" width="0.4340%" height="15" fill="rgb(244,120,49)" fg:x="15915762713" fg:w="76065924"/><text x="91.0562%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (71,301,000 samples, 0.41%)</title><rect x="91.2402%" y="7717" width="0.4068%" height="15" fill="rgb(223,47,38)" fg:x="15991828637" fg:w="71301000"/><text x="91.4902%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (71,301,000 samples, 0.41%)</title><rect x="91.2402%" y="7701" width="0.4068%" height="15" fill="rgb(229,179,11)" fg:x="15991828637" fg:w="71301000"/><text x="91.4902%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (71,301,000 samples, 0.41%)</title><rect x="91.2402%" y="7685" width="0.4068%" height="15" fill="rgb(231,122,1)" fg:x="15991828637" fg:w="71301000"/><text x="91.4902%" y="7695.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (102,579,818 samples, 0.59%)</title><rect x="91.6470%" y="7685" width="0.5853%" height="15" fill="rgb(245,119,9)" fg:x="16063129637" fg:w="102579818"/><text x="91.8970%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (143,718,889 samples, 0.82%)</title><rect x="91.6470%" y="7717" width="0.8200%" height="15" fill="rgb(241,163,25)" fg:x="16063129637" fg:w="143718889"/><text x="91.8970%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (143,718,889 samples, 0.82%)</title><rect x="91.6470%" y="7701" width="0.8200%" height="15" fill="rgb(217,214,3)" fg:x="16063129637" fg:w="143718889"/><text x="91.8970%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (41,139,071 samples, 0.23%)</title><rect x="92.2322%" y="7685" width="0.2347%" height="15" fill="rgb(240,86,28)" fg:x="16165709455" fg:w="41139071"/><text x="92.4822%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (82,586,045 samples, 0.47%)</title><rect x="92.4670%" y="7717" width="0.4712%" height="15" fill="rgb(215,47,9)" fg:x="16206848526" fg:w="82586045"/><text x="92.7170%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (82,586,045 samples, 0.47%)</title><rect x="92.4670%" y="7701" width="0.4712%" height="15" fill="rgb(252,25,45)" fg:x="16206848526" fg:w="82586045"/><text x="92.7170%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (82,586,045 samples, 0.47%)</title><rect x="92.4670%" y="7685" width="0.4712%" height="15" fill="rgb(251,164,9)" fg:x="16206848526" fg:w="82586045"/><text x="92.7170%" y="7695.50"></text></g><g><title>rand_chacha::guts::round (654,825,256 samples, 3.74%)</title><rect x="89.7598%" y="7733" width="3.7361%" height="15" fill="rgb(233,194,0)" fg:x="15732366837" fg:w="654825256"/><text x="90.0098%" y="7743.50">rand..</text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (97,757,522 samples, 0.56%)</title><rect x="92.9381%" y="7717" width="0.5577%" height="15" fill="rgb(249,111,24)" fg:x="16289434571" fg:w="97757522"/><text x="93.1881%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (97,757,522 samples, 0.56%)</title><rect x="92.9381%" y="7701" width="0.5577%" height="15" fill="rgb(250,223,3)" fg:x="16289434571" fg:w="97757522"/><text x="93.1881%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (97,757,522 samples, 0.56%)</title><rect x="92.9381%" y="7685" width="0.5577%" height="15" fill="rgb(236,178,37)" fg:x="16289434571" fg:w="97757522"/><text x="93.1881%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (11,623,155 samples, 0.07%)</title><rect x="93.4959%" y="7717" width="0.0663%" height="15" fill="rgb(241,158,50)" fg:x="16387192093" fg:w="11623155"/><text x="93.7459%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (11,623,155 samples, 0.07%)</title><rect x="93.4959%" y="7701" width="0.0663%" height="15" fill="rgb(213,121,41)" fg:x="16387192093" fg:w="11623155"/><text x="93.7459%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (11,623,155 samples, 0.07%)</title><rect x="93.4959%" y="7685" width="0.0663%" height="15" fill="rgb(240,92,3)" fg:x="16387192093" fg:w="11623155"/><text x="93.7459%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (10,973,240 samples, 0.06%)</title><rect x="93.5622%" y="7717" width="0.0626%" height="15" fill="rgb(205,123,3)" fg:x="16398815248" fg:w="10973240"/><text x="93.8122%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words2301 (10,973,240 samples, 0.06%)</title><rect x="93.5622%" y="7701" width="0.0626%" height="15" fill="rgb(205,97,47)" fg:x="16398815248" fg:w="10973240"/><text x="93.8122%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (10,973,240 samples, 0.06%)</title><rect x="93.5622%" y="7685" width="0.0626%" height="15" fill="rgb(247,152,14)" fg:x="16398815248" fg:w="10973240"/><text x="93.8122%" y="7695.50"></text></g><g><title>rand::rng::Rng::random (1,110,939,798 samples, 6.34%)</title><rect x="87.3421%" y="7957" width="6.3384%" height="15" fill="rgb(248,195,53)" fg:x="15308606915" fg:w="1110939798"/><text x="87.5921%" y="7967.50">rand::rn..</text></g><g><title>rand::distr::float::&lt;impl rand::distr::distribution::Distribution&lt;f64&gt; for rand::distr::StandardUniform&gt;::sample (1,110,939,798 samples, 6.34%)</title><rect x="87.3421%" y="7941" width="6.3384%" height="15" fill="rgb(226,201,16)" fg:x="15308606915" fg:w="1110939798"/><text x="87.5921%" y="7951.50">rand::di..</text></g><g><title>rand::rng::Rng::random (911,882,071 samples, 5.20%)</title><rect x="88.4778%" y="7925" width="5.2027%" height="15" fill="rgb(205,98,0)" fg:x="15507664642" fg:w="911882071"/><text x="88.7278%" y="7935.50">rand::..</text></g><g><title>rand::distr::integer::&lt;impl rand::distr::distribution::Distribution&lt;u64&gt; for rand::distr::StandardUniform&gt;::sample (911,882,071 samples, 5.20%)</title><rect x="88.4778%" y="7909" width="5.2027%" height="15" fill="rgb(214,191,48)" fg:x="15507664642" fg:w="911882071"/><text x="88.7278%" y="7919.50">rand::..</text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u64 (911,882,071 samples, 5.20%)</title><rect x="88.4778%" y="7893" width="5.2027%" height="15" fill="rgb(237,112,39)" fg:x="15507664642" fg:w="911882071"/><text x="88.7278%" y="7903.50">&lt;rand:..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u64 (911,882,071 samples, 5.20%)</title><rect x="88.4778%" y="7877" width="5.2027%" height="15" fill="rgb(247,203,27)" fg:x="15507664642" fg:w="911882071"/><text x="88.7278%" y="7887.50">&lt;rand_..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (911,882,071 samples, 5.20%)</title><rect x="88.4778%" y="7861" width="5.2027%" height="15" fill="rgb(235,124,28)" fg:x="15507664642" fg:w="911882071"/><text x="88.7278%" y="7871.50">&lt;rand_..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (790,564,281 samples, 4.51%)</title><rect x="89.1700%" y="7845" width="4.5105%" height="15" fill="rgb(208,207,46)" fg:x="15628982432" fg:w="790564281"/><text x="89.4200%" y="7855.50">rand_..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (786,778,573 samples, 4.49%)</title><rect x="89.1916%" y="7829" width="4.4889%" height="15" fill="rgb(234,176,4)" fg:x="15632768140" fg:w="786778573"/><text x="89.4416%" y="7839.50">&lt;rand..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (786,778,573 samples, 4.49%)</title><rect x="89.1916%" y="7813" width="4.4889%" height="15" fill="rgb(230,133,28)" fg:x="15632768140" fg:w="786778573"/><text x="89.4416%" y="7823.50">rand_..</text></g><g><title>rand_chacha::guts::refill_wide (786,778,573 samples, 4.49%)</title><rect x="89.1916%" y="7797" width="4.4889%" height="15" fill="rgb(211,137,40)" fg:x="15632768140" fg:w="786778573"/><text x="89.4416%" y="7807.50">rand_..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (785,113,868 samples, 4.48%)</title><rect x="89.2011%" y="7781" width="4.4794%" height="15" fill="rgb(254,35,13)" fg:x="15634432845" fg:w="785113868"/><text x="89.4511%" y="7791.50">rand_..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (783,472,857 samples, 4.47%)</title><rect x="89.2104%" y="7765" width="4.4700%" height="15" fill="rgb(225,49,51)" fg:x="15636073856" fg:w="783472857"/><text x="89.4604%" y="7775.50">rand_..</text></g><g><title>rand_chacha::guts::refill_wide_impl (783,472,857 samples, 4.47%)</title><rect x="89.2104%" y="7749" width="4.4700%" height="15" fill="rgb(251,10,15)" fg:x="15636073856" fg:w="783472857"/><text x="89.4604%" y="7759.50">rand_..</text></g><g><title>rand_chacha::guts::undiagonalize (32,354,620 samples, 0.18%)</title><rect x="93.4959%" y="7733" width="0.1846%" height="15" fill="rgb(228,207,15)" fg:x="16387192093" fg:w="32354620"/><text x="93.7459%" y="7743.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (9,758,225 samples, 0.06%)</title><rect x="93.6248%" y="7717" width="0.0557%" height="15" fill="rgb(241,99,19)" fg:x="16409788488" fg:w="9758225"/><text x="93.8748%" y="7727.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (9,758,225 samples, 0.06%)</title><rect x="93.6248%" y="7701" width="0.0557%" height="15" fill="rgb(207,104,49)" fg:x="16409788488" fg:w="9758225"/><text x="93.8748%" y="7711.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (9,758,225 samples, 0.06%)</title><rect x="93.6248%" y="7685" width="0.0557%" height="15" fill="rgb(234,99,18)" fg:x="16409788488" fg:w="9758225"/><text x="93.8748%" y="7695.50"></text></g><g><title>&lt;u32 as rand::distr::utils::WideningMultiply&gt;::wmul (36,901,450 samples, 0.21%)</title><rect x="93.7064%" y="7877" width="0.2105%" height="15" fill="rgb(213,191,49)" fg:x="16424083121" fg:w="36901450"/><text x="93.9564%" y="7887.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::Add&gt;::add (3,339,278 samples, 0.02%)</title><rect x="94.2355%" y="7701" width="0.0191%" height="15" fill="rgb(210,226,19)" fg:x="16516827512" fg:w="3339278"/><text x="94.4855%" y="7711.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (3,339,278 samples, 0.02%)</title><rect x="94.2355%" y="7685" width="0.0191%" height="15" fill="rgb(229,97,18)" fg:x="16516827512" fg:w="3339278"/><text x="94.4855%" y="7695.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3,339,278 samples, 0.02%)</title><rect x="94.2355%" y="7669" width="0.0191%" height="15" fill="rgb(211,167,15)" fg:x="16516827512" fg:w="3339278"/><text x="94.4855%" y="7679.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,496,428 samples, 0.01%)</title><rect x="94.2546%" y="7701" width="0.0142%" height="15" fill="rgb(210,169,34)" fg:x="16520166790" fg:w="2496428"/><text x="94.5046%" y="7711.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,496,428 samples, 0.01%)</title><rect x="94.2546%" y="7685" width="0.0142%" height="15" fill="rgb(241,121,31)" fg:x="16520166790" fg:w="2496428"/><text x="94.5046%" y="7695.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (2,496,428 samples, 0.01%)</title><rect x="94.2546%" y="7669" width="0.0142%" height="15" fill="rgb(232,40,11)" fg:x="16520166790" fg:w="2496428"/><text x="94.5046%" y="7679.50"></text></g><g><title>rand_chacha::guts::d0123 (2,343,461 samples, 0.01%)</title><rect x="94.2757%" y="7701" width="0.0134%" height="15" fill="rgb(205,86,26)" fg:x="16523877148" fg:w="2343461"/><text x="94.5257%" y="7711.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,343,461 samples, 0.01%)</title><rect x="94.2757%" y="7685" width="0.0134%" height="15" fill="rgb(231,126,28)" fg:x="16523877148" fg:w="2343461"/><text x="94.5257%" y="7695.50"></text></g><g><title>ppv_lite86::soft::&lt;impl core::convert::From&lt;ppv_lite86::soft::x4&lt;W&gt;&gt; for ppv_lite86::x86_64::vec512_storage&gt;::from (2,343,461 samples, 0.01%)</title><rect x="94.2757%" y="7669" width="0.0134%" height="15" fill="rgb(219,221,18)" fg:x="16523877148" fg:w="2343461"/><text x="94.5257%" y="7679.50"></text></g><g><title>ppv_lite86::x86_64::vec512_storage::new128 (2,343,461 samples, 0.01%)</title><rect x="94.2757%" y="7653" width="0.0134%" height="15" fill="rgb(211,40,0)" fg:x="16523877148" fg:w="2343461"/><text x="94.5257%" y="7663.50"></text></g><g><title>rand_chacha::guts::diagonalize (2,405,627 samples, 0.01%)</title><rect x="94.2891%" y="7701" width="0.0137%" height="15" fill="rgb(239,85,43)" fg:x="16526220609" fg:w="2405627"/><text x="94.5391%" y="7711.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (2,405,627 samples, 0.01%)</title><rect x="94.2891%" y="7685" width="0.0137%" height="15" fill="rgb(231,55,21)" fg:x="16526220609" fg:w="2405627"/><text x="94.5391%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (2,405,627 samples, 0.01%)</title><rect x="94.2891%" y="7669" width="0.0137%" height="15" fill="rgb(225,184,43)" fg:x="16526220609" fg:w="2405627"/><text x="94.5391%" y="7679.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2,405,627 samples, 0.01%)</title><rect x="94.2891%" y="7653" width="0.0137%" height="15" fill="rgb(251,158,41)" fg:x="16526220609" fg:w="2405627"/><text x="94.5391%" y="7663.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (26,667,804 samples, 0.15%)</title><rect x="94.3028%" y="7685" width="0.1522%" height="15" fill="rgb(234,159,37)" fg:x="16528626236" fg:w="26667804"/><text x="94.5528%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (26,667,804 samples, 0.15%)</title><rect x="94.3028%" y="7669" width="0.1522%" height="15" fill="rgb(216,204,22)" fg:x="16528626236" fg:w="26667804"/><text x="94.5528%" y="7679.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (26,667,804 samples, 0.15%)</title><rect x="94.3028%" y="7653" width="0.1522%" height="15" fill="rgb(214,17,3)" fg:x="16528626236" fg:w="26667804"/><text x="94.5528%" y="7663.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (26,667,804 samples, 0.15%)</title><rect x="94.3028%" y="7637" width="0.1522%" height="15" fill="rgb(212,111,17)" fg:x="16528626236" fg:w="26667804"/><text x="94.5528%" y="7647.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::bit::BitXor&gt;::bitxor (15,182,434 samples, 0.09%)</title><rect x="94.4550%" y="7685" width="0.0866%" height="15" fill="rgb(221,157,24)" fg:x="16555294040" fg:w="15182434"/><text x="94.7050%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (15,182,434 samples, 0.09%)</title><rect x="94.4550%" y="7669" width="0.0866%" height="15" fill="rgb(252,16,13)" fg:x="16555294040" fg:w="15182434"/><text x="94.7050%" y="7679.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (15,182,434 samples, 0.09%)</title><rect x="94.4550%" y="7653" width="0.0866%" height="15" fill="rgb(221,62,2)" fg:x="16555294040" fg:w="15182434"/><text x="94.7050%" y="7663.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (9,881,605 samples, 0.06%)</title><rect x="94.5416%" y="7685" width="0.0564%" height="15" fill="rgb(247,87,22)" fg:x="16570476474" fg:w="9881605"/><text x="94.7916%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (9,881,605 samples, 0.06%)</title><rect x="94.5416%" y="7669" width="0.0564%" height="15" fill="rgb(215,73,9)" fg:x="16570476474" fg:w="9881605"/><text x="94.7916%" y="7679.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (9,881,605 samples, 0.06%)</title><rect x="94.5416%" y="7653" width="0.0564%" height="15" fill="rgb(207,175,33)" fg:x="16570476474" fg:w="9881605"/><text x="94.7916%" y="7663.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (21,761,391 samples, 0.12%)</title><rect x="94.5980%" y="7653" width="0.1242%" height="15" fill="rgb(243,129,54)" fg:x="16580358079" fg:w="21761391"/><text x="94.8480%" y="7663.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (26,558,964 samples, 0.15%)</title><rect x="94.5980%" y="7685" width="0.1515%" height="15" fill="rgb(227,119,45)" fg:x="16580358079" fg:w="26558964"/><text x="94.8480%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (26,558,964 samples, 0.15%)</title><rect x="94.5980%" y="7669" width="0.1515%" height="15" fill="rgb(205,109,36)" fg:x="16580358079" fg:w="26558964"/><text x="94.8480%" y="7679.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4,797,573 samples, 0.03%)</title><rect x="94.7221%" y="7653" width="0.0274%" height="15" fill="rgb(205,6,39)" fg:x="16602119470" fg:w="4797573"/><text x="94.9721%" y="7663.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (15,397,195 samples, 0.09%)</title><rect x="94.7495%" y="7685" width="0.0878%" height="15" fill="rgb(221,32,16)" fg:x="16606917043" fg:w="15397195"/><text x="94.9995%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (15,397,195 samples, 0.09%)</title><rect x="94.7495%" y="7669" width="0.0878%" height="15" fill="rgb(228,144,50)" fg:x="16606917043" fg:w="15397195"/><text x="94.9995%" y="7679.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (15,397,195 samples, 0.09%)</title><rect x="94.7495%" y="7653" width="0.0878%" height="15" fill="rgb(229,201,53)" fg:x="16606917043" fg:w="15397195"/><text x="94.9995%" y="7663.50"></text></g><g><title>rand_chacha::guts::round (108,571,840 samples, 0.62%)</title><rect x="94.3028%" y="7701" width="0.6194%" height="15" fill="rgb(249,153,27)" fg:x="16528626236" fg:w="108571840"/><text x="94.5528%" y="7711.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (14,883,838 samples, 0.08%)</title><rect x="94.8374%" y="7685" width="0.0849%" height="15" fill="rgb(227,106,25)" fg:x="16622314238" fg:w="14883838"/><text x="95.0874%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (14,883,838 samples, 0.08%)</title><rect x="94.8374%" y="7669" width="0.0849%" height="15" fill="rgb(230,65,29)" fg:x="16622314238" fg:w="14883838"/><text x="95.0874%" y="7679.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (14,883,838 samples, 0.08%)</title><rect x="94.8374%" y="7653" width="0.0849%" height="15" fill="rgb(221,57,46)" fg:x="16622314238" fg:w="14883838"/><text x="95.0874%" y="7663.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (2,311,864 samples, 0.01%)</title><rect x="94.9223%" y="7685" width="0.0132%" height="15" fill="rgb(229,161,17)" fg:x="16637198076" fg:w="2311864"/><text x="95.1723%" y="7695.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (2,311,864 samples, 0.01%)</title><rect x="94.9223%" y="7669" width="0.0132%" height="15" fill="rgb(222,213,11)" fg:x="16637198076" fg:w="2311864"/><text x="95.1723%" y="7679.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2,311,864 samples, 0.01%)</title><rect x="94.9223%" y="7653" width="0.0132%" height="15" fill="rgb(235,35,13)" fg:x="16637198076" fg:w="2311864"/><text x="95.1723%" y="7663.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (126,322,161 samples, 0.72%)</title><rect x="94.2286%" y="7749" width="0.7207%" height="15" fill="rgb(233,158,34)" fg:x="16515622163" fg:w="126322161"/><text x="94.4786%" y="7759.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (125,116,812 samples, 0.71%)</title><rect x="94.2355%" y="7733" width="0.7138%" height="15" fill="rgb(215,151,48)" fg:x="16516827512" fg:w="125116812"/><text x="94.4855%" y="7743.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (125,116,812 samples, 0.71%)</title><rect x="94.2355%" y="7717" width="0.7138%" height="15" fill="rgb(229,84,14)" fg:x="16516827512" fg:w="125116812"/><text x="94.4855%" y="7727.50"></text></g><g><title>rand_chacha::guts::undiagonalize (4,746,248 samples, 0.03%)</title><rect x="94.9223%" y="7701" width="0.0271%" height="15" fill="rgb(229,68,14)" fg:x="16637198076" fg:w="4746248"/><text x="95.1723%" y="7711.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_shape_fn (1,774,158,559 samples, 10.12%)</title><rect x="84.8478%" y="8037" width="10.1223%" height="15" fill="rgb(243,106,26)" fg:x="14871424767" fg:w="1774158559"/><text x="85.0978%" y="8047.50">ndarray::impl_c..</text></g><g><title>ndarray::iterators::to_vec_mapped (1,774,158,559 samples, 10.12%)</title><rect x="84.8478%" y="8021" width="10.1223%" height="15" fill="rgb(206,45,38)" fg:x="14871424767" fg:w="1774158559"/><text x="85.0978%" y="8031.50">ndarray::iterat..</text></g><g><title>&lt;ndarray::indexes::IndicesIter&lt;D&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,774,158,559 samples, 10.12%)</title><rect x="84.8478%" y="8005" width="10.1223%" height="15" fill="rgb(226,6,15)" fg:x="14871424767" fg:w="1774158559"/><text x="85.0978%" y="8015.50">&lt;ndarray::index..</text></g><g><title>ndarray::iterators::to_vec_mapped::_{{closure}} (1,733,995,626 samples, 9.89%)</title><rect x="85.0769%" y="7989" width="9.8932%" height="15" fill="rgb(232,22,54)" fg:x="14911587700" fg:w="1733995626"/><text x="85.3269%" y="7999.50">ndarray::itera..</text></g><g><title>profile::main::_{{closure}} (1,336,976,411 samples, 7.63%)</title><rect x="87.3421%" y="7973" width="7.6280%" height="15" fill="rgb(229,222,32)" fg:x="15308606915" fg:w="1336976411"/><text x="87.5921%" y="7983.50">profile::m..</text></g><g><title>rand::rng::Rng::random_range (226,036,613 samples, 1.29%)</title><rect x="93.6805%" y="7957" width="1.2896%" height="15" fill="rgb(228,62,29)" fg:x="16419546713" fg:w="226036613"/><text x="93.9305%" y="7967.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as rand::distr::uniform::SampleRange&lt;T&gt;&gt;::sample_single (226,036,613 samples, 1.29%)</title><rect x="93.6805%" y="7941" width="1.2896%" height="15" fill="rgb(251,103,34)" fg:x="16419546713" fg:w="226036613"/><text x="93.9305%" y="7951.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler&gt;::sample_single (226,036,613 samples, 1.29%)</title><rect x="93.6805%" y="7925" width="1.2896%" height="15" fill="rgb(233,12,30)" fg:x="16419546713" fg:w="226036613"/><text x="93.9305%" y="7935.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformInt&lt;u32&gt; as rand::distr::uniform::UniformSampler&gt;::sample_single (226,036,613 samples, 1.29%)</title><rect x="93.6805%" y="7909" width="1.2896%" height="15" fill="rgb(238,52,0)" fg:x="16419546713" fg:w="226036613"/><text x="93.9305%" y="7919.50"></text></g><g><title>&lt;rand::distr::uniform::int::UniformInt&lt;u32&gt; as rand::distr::uniform::UniformSampler&gt;::sample_single_inclusive (226,036,613 samples, 1.29%)</title><rect x="93.6805%" y="7893" width="1.2896%" height="15" fill="rgb(223,98,5)" fg:x="16419546713" fg:w="226036613"/><text x="93.9305%" y="7903.50"></text></g><g><title>rand::rng::Rng::random (184,598,755 samples, 1.05%)</title><rect x="93.9169%" y="7877" width="1.0532%" height="15" fill="rgb(228,75,37)" fg:x="16460984571" fg:w="184598755"/><text x="94.1669%" y="7887.50"></text></g><g><title>rand::distr::integer::&lt;impl rand::distr::distribution::Distribution&lt;u32&gt; for rand::distr::StandardUniform&gt;::sample (184,598,755 samples, 1.05%)</title><rect x="93.9169%" y="7861" width="1.0532%" height="15" fill="rgb(205,115,49)" fg:x="16460984571" fg:w="184598755"/><text x="94.1669%" y="7871.50"></text></g><g><title>&lt;rand::rngs::std::StdRng as rand_core::RngCore&gt;::next_u32 (184,598,755 samples, 1.05%)</title><rect x="93.9169%" y="7845" width="1.0532%" height="15" fill="rgb(250,154,43)" fg:x="16460984571" fg:w="184598755"/><text x="94.1669%" y="7855.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Rng as rand_core::RngCore&gt;::next_u32 (184,598,755 samples, 1.05%)</title><rect x="93.9169%" y="7829" width="1.0532%" height="15" fill="rgb(226,43,29)" fg:x="16460984571" fg:w="184598755"/><text x="94.1669%" y="7839.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (184,598,755 samples, 1.05%)</title><rect x="93.9169%" y="7813" width="1.0532%" height="15" fill="rgb(249,228,39)" fg:x="16460984571" fg:w="184598755"/><text x="94.1669%" y="7823.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (136,061,973 samples, 0.78%)</title><rect x="94.1938%" y="7797" width="0.7763%" height="15" fill="rgb(216,79,43)" fg:x="16509521353" fg:w="136061973"/><text x="94.4438%" y="7807.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (136,061,973 samples, 0.78%)</title><rect x="94.1938%" y="7781" width="0.7763%" height="15" fill="rgb(228,95,12)" fg:x="16509521353" fg:w="136061973"/><text x="94.4438%" y="7791.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (136,061,973 samples, 0.78%)</title><rect x="94.1938%" y="7765" width="0.7763%" height="15" fill="rgb(249,221,15)" fg:x="16509521353" fg:w="136061973"/><text x="94.4438%" y="7775.50"></text></g><g><title>rand_chacha::guts::refill_wide (3,639,002 samples, 0.02%)</title><rect x="94.9494%" y="7749" width="0.0208%" height="15" fill="rgb(233,34,13)" fg:x="16641944324" fg:w="3639002"/><text x="95.1994%" y="7759.50"></text></g><g><title>std_detect::detect::arch::x86::__is_feature_detected::avx2 (3,639,002 samples, 0.02%)</title><rect x="94.9494%" y="7733" width="0.0208%" height="15" fill="rgb(214,103,39)" fg:x="16641944324" fg:w="3639002"/><text x="95.1994%" y="7743.50"></text></g><g><title>std_detect::detect::check_for (3,639,002 samples, 0.02%)</title><rect x="94.9494%" y="7717" width="0.0208%" height="15" fill="rgb(251,126,39)" fg:x="16641944324" fg:w="3639002"/><text x="95.1994%" y="7727.50"></text></g><g><title>std_detect::detect::cache::test (3,639,002 samples, 0.02%)</title><rect x="94.9494%" y="7701" width="0.0208%" height="15" fill="rgb(214,216,36)" fg:x="16641944324" fg:w="3639002"/><text x="95.1994%" y="7711.50"></text></g><g><title>std_detect::detect::cache::Cache::test (3,639,002 samples, 0.02%)</title><rect x="94.9494%" y="7685" width="0.0208%" height="15" fill="rgb(220,221,8)" fg:x="16641944324" fg:w="3639002"/><text x="95.1994%" y="7695.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,639,002 samples, 0.02%)</title><rect x="94.9494%" y="7669" width="0.0208%" height="15" fill="rgb(240,216,3)" fg:x="16641944324" fg:w="3639002"/><text x="95.1994%" y="7679.50"></text></g><g><title>core::sync::atomic::atomic_load (3,639,002 samples, 0.02%)</title><rect x="94.9494%" y="7653" width="0.0208%" height="15" fill="rgb(232,218,17)" fg:x="16641944324" fg:w="3639002"/><text x="95.1994%" y="7663.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::ones (22,814,419 samples, 0.13%)</title><rect x="94.9701%" y="8037" width="0.1302%" height="15" fill="rgb(229,163,45)" fg:x="16645583326" fg:w="22814419"/><text x="95.2201%" y="8047.50"></text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::from_elem (22,814,419 samples, 0.13%)</title><rect x="94.9701%" y="8021" width="0.1302%" height="15" fill="rgb(231,110,42)" fg:x="16645583326" fg:w="22814419"/><text x="95.2201%" y="8031.50"></text></g><g><title>alloc::vec::from_elem (22,814,419 samples, 0.13%)</title><rect x="94.9701%" y="8005" width="0.1302%" height="15" fill="rgb(208,170,48)" fg:x="16645583326" fg:w="22814419"/><text x="95.2201%" y="8015.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (22,814,419 samples, 0.13%)</title><rect x="94.9701%" y="7989" width="0.1302%" height="15" fill="rgb(239,116,25)" fg:x="16645583326" fg:w="22814419"/><text x="95.2201%" y="7999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (22,814,419 samples, 0.13%)</title><rect x="94.9701%" y="7973" width="0.1302%" height="15" fill="rgb(219,200,50)" fg:x="16645583326" fg:w="22814419"/><text x="95.2201%" y="7983.50"></text></g><g><title>core::ptr::write (22,814,419 samples, 0.13%)</title><rect x="94.9701%" y="7957" width="0.1302%" height="15" fill="rgb(245,200,0)" fg:x="16645583326" fg:w="22814419"/><text x="95.2201%" y="7967.50"></text></g><g><title>[unknown] (9,361,788 samples, 0.05%)</title><rect x="95.0469%" y="7941" width="0.0534%" height="15" fill="rgb(245,119,33)" fg:x="16659035957" fg:w="9361788"/><text x="95.2969%" y="7951.50"></text></g><g><title>core::array::_&lt;impl core::default::Default for [T: 4]&gt;::default (2,239,681 samples, 0.01%)</title><rect x="95.1003%" y="7605" width="0.0128%" height="15" fill="rgb(231,125,12)" fg:x="16668397745" fg:w="2239681"/><text x="95.3503%" y="7615.50"></text></g><g><title>&lt;pprof::collector::Entry&lt;T&gt; as core::default::Default&gt;::default (2,239,681 samples, 0.01%)</title><rect x="95.1003%" y="7589" width="0.0128%" height="15" fill="rgb(216,96,41)" fg:x="16668397745" fg:w="2239681"/><text x="95.3503%" y="7599.50"></text></g><g><title>&lt;pprof::frames::UnresolvedFrames as core::default::Default&gt;::default (2,239,681 samples, 0.01%)</title><rect x="95.1003%" y="7573" width="0.0128%" height="15" fill="rgb(248,43,45)" fg:x="16668397745" fg:w="2239681"/><text x="95.3503%" y="7583.50"></text></g><g><title>std::time::SystemTime::now (2,239,681 samples, 0.01%)</title><rect x="95.1003%" y="7557" width="0.0128%" height="15" fill="rgb(217,222,7)" fg:x="16668397745" fg:w="2239681"/><text x="95.3503%" y="7567.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (2,239,681 samples, 0.01%)</title><rect x="95.1003%" y="7541" width="0.0128%" height="15" fill="rgb(233,28,6)" fg:x="16668397745" fg:w="2239681"/><text x="95.3503%" y="7551.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2,239,681 samples, 0.01%)</title><rect x="95.1003%" y="7525" width="0.0128%" height="15" fill="rgb(231,218,15)" fg:x="16668397745" fg:w="2239681"/><text x="95.3503%" y="7535.50"></text></g><g><title>clock_gettime (2,239,681 samples, 0.01%)</title><rect x="95.1003%" y="7509" width="0.0128%" height="15" fill="rgb(226,171,48)" fg:x="16668397745" fg:w="2239681"/><text x="95.3503%" y="7519.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7989" width="0.0892%" height="15" fill="rgb(235,201,9)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7999.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7973" width="0.0892%" height="15" fill="rgb(217,80,15)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7983.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7957" width="0.0892%" height="15" fill="rgb(219,152,8)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7967.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7941" width="0.0892%" height="15" fill="rgb(243,107,38)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7951.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7925" width="0.0892%" height="15" fill="rgb(231,17,5)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7935.50"></text></g><g><title>once_cell::imp::initialize_or_wait (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7909" width="0.0892%" height="15" fill="rgb(209,25,54)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7893" width="0.0892%" height="15" fill="rgb(219,0,2)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7903.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7877" width="0.0892%" height="15" fill="rgb(246,9,5)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7887.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7861" width="0.0892%" height="15" fill="rgb(226,159,4)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7871.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7845" width="0.0892%" height="15" fill="rgb(219,175,34)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7855.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7829" width="0.0892%" height="15" fill="rgb(236,10,46)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7839.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7813" width="0.0892%" height="15" fill="rgb(240,211,16)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7823.50"></text></g><g><title>pprof::profiler::PROFILER::_{{closure}} (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7797" width="0.0892%" height="15" fill="rgb(205,3,43)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7807.50"></text></g><g><title>pprof::profiler::Profiler::new (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7781" width="0.0892%" height="15" fill="rgb(245,7,22)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7791.50"></text></g><g><title>pprof::collector::Collector&lt;T&gt;::new (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7765" width="0.0892%" height="15" fill="rgb(239,132,32)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7775.50"></text></g><g><title>&lt;pprof::collector::HashCounter&lt;T&gt; as core::default::Default&gt;::default (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7749" width="0.0892%" height="15" fill="rgb(228,202,34)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7733" width="0.0892%" height="15" fill="rgb(254,200,22)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7717" width="0.0892%" height="15" fill="rgb(219,10,39)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7727.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7701" width="0.0892%" height="15" fill="rgb(226,210,39)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7711.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::adapters::take::SpecTake&gt;::spec_for_each (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7685" width="0.0892%" height="15" fill="rgb(208,219,16)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7695.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7669" width="0.0892%" height="15" fill="rgb(216,158,51)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7679.50"></text></g><g><title>core::ops::function::FnMut::call_mut (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7653" width="0.0892%" height="15" fill="rgb(233,14,44)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7663.50"></text></g><g><title>&lt;pprof::collector::Bucket&lt;T&gt; as core::default::Default&gt;::default (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7637" width="0.0892%" height="15" fill="rgb(237,97,39)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (15,626,943 samples, 0.09%)</title><rect x="95.1003%" y="7621" width="0.0892%" height="15" fill="rgb(218,198,43)" fg:x="16668397745" fg:w="15626943"/><text x="95.3503%" y="7631.50"></text></g><g><title>core::ptr::write (13,387,262 samples, 0.08%)</title><rect x="95.1131%" y="7605" width="0.0764%" height="15" fill="rgb(231,104,20)" fg:x="16670637426" fg:w="13387262"/><text x="95.3631%" y="7615.50"></text></g><g><title>[unknown] (7,907,341 samples, 0.05%)</title><rect x="95.1443%" y="7589" width="0.0451%" height="15" fill="rgb(254,36,13)" fg:x="16676117347" fg:w="7907341"/><text x="95.3943%" y="7599.50"></text></g><g><title>gimli::read::abbrev::AttributeSpecification::parse (2,146,324 samples, 0.01%)</title><rect x="95.1933%" y="7541" width="0.0122%" height="15" fill="rgb(248,14,50)" fg:x="16684691567" fg:w="2146324"/><text x="95.4433%" y="7551.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128_u16 (1,842,795 samples, 0.01%)</title><rect x="95.1950%" y="7525" width="0.0105%" height="15" fill="rgb(217,107,29)" fg:x="16684995096" fg:w="1842795"/><text x="95.4450%" y="7535.50"></text></g><g><title>gimli::leb128::read::u16 (1,842,795 samples, 0.01%)</title><rect x="95.1950%" y="7509" width="0.0105%" height="15" fill="rgb(251,169,33)" fg:x="16684995096" fg:w="1842795"/><text x="95.4450%" y="7519.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7461" width="0.0112%" height="15" fill="rgb(217,108,32)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7445" width="0.0112%" height="15" fill="rgb(219,66,42)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7455.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7429" width="0.0112%" height="15" fill="rgb(206,180,7)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7439.50"></text></g><g><title>alloc::alloc::realloc (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7413" width="0.0112%" height="15" fill="rgb(208,226,31)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7423.50"></text></g><g><title>__rustc::__rdl_realloc (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7397" width="0.0112%" height="15" fill="rgb(218,26,49)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7407.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7381" width="0.0112%" height="15" fill="rgb(233,197,48)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7391.50"></text></g><g><title>realloc (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7365" width="0.0112%" height="15" fill="rgb(252,181,51)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7375.50"></text></g><g><title>[libc.so.6] (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7349" width="0.0112%" height="15" fill="rgb(253,90,19)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7359.50"></text></g><g><title>[libc.so.6] (1,956,975 samples, 0.01%)</title><rect x="95.2146%" y="7333" width="0.0112%" height="15" fill="rgb(215,171,30)" fg:x="16688425067" fg:w="1956975"/><text x="95.4646%" y="7343.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse (5,974,965 samples, 0.03%)</title><rect x="95.1933%" y="7573" width="0.0341%" height="15" fill="rgb(214,222,9)" fg:x="16684691567" fg:w="5974965"/><text x="95.4433%" y="7583.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_attributes (5,974,965 samples, 0.03%)</title><rect x="95.1933%" y="7557" width="0.0341%" height="15" fill="rgb(223,3,22)" fg:x="16684691567" fg:w="5974965"/><text x="95.4433%" y="7567.50"></text></g><g><title>gimli::read::abbrev::Attributes::push (3,828,641 samples, 0.02%)</title><rect x="95.2055%" y="7541" width="0.0218%" height="15" fill="rgb(225,196,46)" fg:x="16686837891" fg:w="3828641"/><text x="95.4555%" y="7551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,241,465 samples, 0.01%)</title><rect x="95.2146%" y="7525" width="0.0128%" height="15" fill="rgb(209,110,37)" fg:x="16688425067" fg:w="2241465"/><text x="95.4646%" y="7535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,241,465 samples, 0.01%)</title><rect x="95.2146%" y="7509" width="0.0128%" height="15" fill="rgb(249,89,12)" fg:x="16688425067" fg:w="2241465"/><text x="95.4646%" y="7519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,241,465 samples, 0.01%)</title><rect x="95.2146%" y="7493" width="0.0128%" height="15" fill="rgb(226,27,33)" fg:x="16688425067" fg:w="2241465"/><text x="95.4646%" y="7503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,241,465 samples, 0.01%)</title><rect x="95.2146%" y="7477" width="0.0128%" height="15" fill="rgb(213,82,22)" fg:x="16688425067" fg:w="2241465"/><text x="95.4646%" y="7487.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::abbreviations (7,938,920 samples, 0.05%)</title><rect x="95.1933%" y="7637" width="0.0453%" height="15" fill="rgb(248,140,0)" fg:x="16684691567" fg:w="7938920"/><text x="95.4433%" y="7647.50"></text></g><g><title>gimli::read::abbrev::AbbreviationsCache::get (7,938,920 samples, 0.05%)</title><rect x="95.1933%" y="7621" width="0.0453%" height="15" fill="rgb(228,106,3)" fg:x="16684691567" fg:w="7938920"/><text x="95.4433%" y="7631.50"></text></g><g><title>gimli::read::abbrev::DebugAbbrev&lt;R&gt;::abbreviations (7,938,920 samples, 0.05%)</title><rect x="95.1933%" y="7605" width="0.0453%" height="15" fill="rgb(209,23,37)" fg:x="16684691567" fg:w="7938920"/><text x="95.4433%" y="7615.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::parse (7,938,920 samples, 0.05%)</title><rect x="95.1933%" y="7589" width="0.0453%" height="15" fill="rgb(241,93,50)" fg:x="16684691567" fg:w="7938920"/><text x="95.4433%" y="7599.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::insert (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7573" width="0.0112%" height="15" fill="rgb(253,46,43)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7557" width="0.0112%" height="15" fill="rgb(226,206,43)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7541" width="0.0112%" height="15" fill="rgb(217,54,7)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7525" width="0.0112%" height="15" fill="rgb(223,5,52)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7509" width="0.0112%" height="15" fill="rgb(206,52,46)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7519.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7493" width="0.0112%" height="15" fill="rgb(253,136,11)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7477" width="0.0112%" height="15" fill="rgb(208,106,33)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7487.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7461" width="0.0112%" height="15" fill="rgb(206,54,4)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7471.50"></text></g><g><title>alloc::alloc::realloc (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7445" width="0.0112%" height="15" fill="rgb(213,3,15)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7455.50"></text></g><g><title>__rustc::__rdl_realloc (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7429" width="0.0112%" height="15" fill="rgb(252,211,39)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7439.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7413" width="0.0112%" height="15" fill="rgb(223,6,36)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7423.50"></text></g><g><title>realloc (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7397" width="0.0112%" height="15" fill="rgb(252,169,45)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7407.50"></text></g><g><title>[libc.so.6] (1,963,955 samples, 0.01%)</title><rect x="95.2273%" y="7381" width="0.0112%" height="15" fill="rgb(212,48,26)" fg:x="16690666532" fg:w="1963955"/><text x="95.4773%" y="7391.50"></text></g><g><title>backtrace::symbolize::gimli::Context::new (9,594,639 samples, 0.05%)</title><rect x="95.1895%" y="7733" width="0.0547%" height="15" fill="rgb(251,102,48)" fg:x="16684024688" fg:w="9594639"/><text x="95.4395%" y="7743.50"></text></g><g><title>addr2line::Context&lt;R&gt;::from_dwarf (9,594,639 samples, 0.05%)</title><rect x="95.1895%" y="7717" width="0.0547%" height="15" fill="rgb(243,208,16)" fg:x="16684024688" fg:w="9594639"/><text x="95.4395%" y="7727.50"></text></g><g><title>addr2line::Context&lt;R&gt;::from_arc_dwarf (9,594,639 samples, 0.05%)</title><rect x="95.1895%" y="7701" width="0.0547%" height="15" fill="rgb(219,96,24)" fg:x="16684024688" fg:w="9594639"/><text x="95.4395%" y="7711.50"></text></g><g><title>addr2line::unit::ResUnits&lt;R&gt;::parse (9,594,639 samples, 0.05%)</title><rect x="95.1895%" y="7685" width="0.0547%" height="15" fill="rgb(219,33,29)" fg:x="16684024688" fg:w="9594639"/><text x="95.4395%" y="7695.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::unit (8,927,760 samples, 0.05%)</title><rect x="95.1933%" y="7669" width="0.0509%" height="15" fill="rgb(223,176,5)" fg:x="16684691567" fg:w="8927760"/><text x="95.4433%" y="7679.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new (8,927,760 samples, 0.05%)</title><rect x="95.1933%" y="7653" width="0.0509%" height="15" fill="rgb(228,140,14)" fg:x="16684691567" fg:w="8927760"/><text x="95.4433%" y="7663.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::mapping_for_lib (9,966,265 samples, 0.06%)</title><rect x="95.1895%" y="7813" width="0.0569%" height="15" fill="rgb(217,179,31)" fg:x="16684024688" fg:w="9966265"/><text x="95.4395%" y="7823.50"></text></g><g><title>backtrace::symbolize::gimli::create_mapping (9,966,265 samples, 0.06%)</title><rect x="95.1895%" y="7797" width="0.0569%" height="15" fill="rgb(230,9,30)" fg:x="16684024688" fg:w="9966265"/><text x="95.4395%" y="7807.50"></text></g><g><title>backtrace::symbolize::gimli::elf::&lt;impl backtrace::symbolize::gimli::Mapping&gt;::new (9,966,265 samples, 0.06%)</title><rect x="95.1895%" y="7781" width="0.0569%" height="15" fill="rgb(230,136,20)" fg:x="16684024688" fg:w="9966265"/><text x="95.4395%" y="7791.50"></text></g><g><title>backtrace::symbolize::gimli::Mapping::mk_or_other (9,966,265 samples, 0.06%)</title><rect x="95.1895%" y="7765" width="0.0569%" height="15" fill="rgb(215,210,22)" fg:x="16684024688" fg:w="9966265"/><text x="95.4395%" y="7775.50"></text></g><g><title>backtrace::symbolize::gimli::elf::_&lt;impl backtrace::symbolize::gimli::Mapping&gt;::new::_{{closure}} (9,966,265 samples, 0.06%)</title><rect x="95.1895%" y="7749" width="0.0569%" height="15" fill="rgb(218,43,5)" fg:x="16684024688" fg:w="9966265"/><text x="95.4395%" y="7759.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7733" width="0.0217%" height="15" fill="rgb(216,11,5)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7743.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7717" width="0.0217%" height="15" fill="rgb(209,82,29)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7727.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow::_{{closure}} (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7701" width="0.0217%" height="15" fill="rgb(244,115,12)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7711.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7685" width="0.0217%" height="15" fill="rgb(222,82,18)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7695.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7669" width="0.0217%" height="15" fill="rgb(249,227,8)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7679.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7653" width="0.0217%" height="15" fill="rgb(253,141,45)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7663.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7637" width="0.0217%" height="15" fill="rgb(234,184,4)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7647.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7621" width="0.0217%" height="15" fill="rgb(218,194,23)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7631.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7605" width="0.0217%" height="15" fill="rgb(235,66,41)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7615.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7589" width="0.0217%" height="15" fill="rgb(245,217,1)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7599.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7573" width="0.0217%" height="15" fill="rgb(229,91,1)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7583.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7557" width="0.0217%" height="15" fill="rgb(207,101,30)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7567.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7541" width="0.0217%" height="15" fill="rgb(223,82,49)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7551.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7525" width="0.0217%" height="15" fill="rgb(218,167,17)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7535.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7509" width="0.0217%" height="15" fill="rgb(208,103,14)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7519.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7493" width="0.0217%" height="15" fill="rgb(238,20,8)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7503.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7477" width="0.0217%" height="15" fill="rgb(218,80,54)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7487.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,808,400 samples, 0.02%)</title><rect x="95.2463%" y="7461" width="0.0217%" height="15" fill="rgb(240,144,17)" fg:x="16693990953" fg:w="3808400"/><text x="95.4963%" y="7471.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,792,412 samples, 0.02%)</title><rect x="95.2521%" y="7445" width="0.0159%" height="15" fill="rgb(245,27,50)" fg:x="16695006941" fg:w="2792412"/><text x="95.5021%" y="7455.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,792,412 samples, 0.02%)</title><rect x="95.2521%" y="7429" width="0.0159%" height="15" fill="rgb(251,51,7)" fg:x="16695006941" fg:w="2792412"/><text x="95.5021%" y="7439.50"></text></g><g><title>gimli::read::abbrev::get_attribute_size (2,308,934 samples, 0.01%)</title><rect x="95.2766%" y="7637" width="0.0132%" height="15" fill="rgb(245,217,29)" fg:x="16699291537" fg:w="2308934"/><text x="95.5266%" y="7647.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow (4,703,227 samples, 0.03%)</title><rect x="95.2680%" y="7733" width="0.0268%" height="15" fill="rgb(221,176,29)" fg:x="16697799353" fg:w="4703227"/><text x="95.5180%" y="7743.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4,703,227 samples, 0.03%)</title><rect x="95.2680%" y="7717" width="0.0268%" height="15" fill="rgb(212,180,24)" fg:x="16697799353" fg:w="4703227"/><text x="95.5180%" y="7727.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow::_{{closure}} (4,703,227 samples, 0.03%)</title><rect x="95.2680%" y="7701" width="0.0268%" height="15" fill="rgb(254,24,2)" fg:x="16697799353" fg:w="4703227"/><text x="95.5180%" y="7711.50"></text></g><g><title>addr2line::function::Functions&lt;R&gt;::parse (4,703,227 samples, 0.03%)</title><rect x="95.2680%" y="7685" width="0.0268%" height="15" fill="rgb(230,100,2)" fg:x="16697799353" fg:w="4703227"/><text x="95.5180%" y="7695.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::skip_attributes (4,108,033 samples, 0.02%)</title><rect x="95.2714%" y="7669" width="0.0234%" height="15" fill="rgb(219,142,25)" fg:x="16698394547" fg:w="4108033"/><text x="95.5214%" y="7679.50"></text></g><g><title>gimli::read::unit::skip_attributes (4,108,033 samples, 0.02%)</title><rect x="95.2714%" y="7653" width="0.0234%" height="15" fill="rgb(240,73,43)" fg:x="16698394547" fg:w="4108033"/><text x="95.5214%" y="7663.50"></text></g><g><title>pprof::profiler::ProfilerGuard::new (36,673,043 samples, 0.21%)</title><rect x="95.1003%" y="8037" width="0.2092%" height="15" fill="rgb(214,114,15)" fg:x="16668397745" fg:w="36673043"/><text x="95.3503%" y="8047.50"></text></g><g><title>pprof::profiler::ProfilerGuardBuilder::build (36,673,043 samples, 0.21%)</title><rect x="95.1003%" y="8021" width="0.2092%" height="15" fill="rgb(207,130,4)" fg:x="16668397745" fg:w="36673043"/><text x="95.3503%" y="8031.50"></text></g><g><title>pprof::profiler::trigger_lazy (36,673,043 samples, 0.21%)</title><rect x="95.1003%" y="8005" width="0.2092%" height="15" fill="rgb(221,25,40)" fg:x="16668397745" fg:w="36673043"/><text x="95.3503%" y="8015.50"></text></g><g><title>backtrace::capture::Backtrace::new (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7989" width="0.1201%" height="15" fill="rgb(241,184,7)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7999.50"></text></g><g><title>backtrace::capture::Backtrace::resolve (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7973" width="0.1201%" height="15" fill="rgb(235,159,4)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7983.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7957" width="0.1201%" height="15" fill="rgb(214,87,48)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7967.50"></text></g><g><title>core::ops::function::FnMut::call_mut (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7941" width="0.1201%" height="15" fill="rgb(246,198,24)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7951.50"></text></g><g><title>backtrace::capture::BacktraceFrame::resolve (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7925" width="0.1201%" height="15" fill="rgb(209,66,40)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7935.50"></text></g><g><title>backtrace::capture::Frame::resolve_symbols (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7909" width="0.1201%" height="15" fill="rgb(233,147,39)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7919.50"></text></g><g><title>backtrace::symbolize::resolve_frame (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7893" width="0.1201%" height="15" fill="rgb(231,145,52)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7903.50"></text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7877" width="0.1201%" height="15" fill="rgb(206,20,26)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7887.50"></text></g><g><title>backtrace::symbolize::gimli::resolve (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7861" width="0.1201%" height="15" fill="rgb(238,220,4)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7871.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7845" width="0.1201%" height="15" fill="rgb(252,195,42)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7855.50"></text></g><g><title>backtrace::symbolize::gimli::resolve::_{{closure}} (21,046,100 samples, 0.12%)</title><rect x="95.1895%" y="7829" width="0.1201%" height="15" fill="rgb(209,10,6)" fg:x="16684024688" fg:w="21046100"/><text x="95.4395%" y="7839.50"></text></g><g><title>backtrace::symbolize::gimli::Context::find_frames (11,079,835 samples, 0.06%)</title><rect x="95.2463%" y="7813" width="0.0632%" height="15" fill="rgb(229,3,52)" fg:x="16693990953" fg:w="11079835"/><text x="95.4963%" y="7823.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (11,079,835 samples, 0.06%)</title><rect x="95.2463%" y="7797" width="0.0632%" height="15" fill="rgb(253,49,37)" fg:x="16693990953" fg:w="11079835"/><text x="95.4963%" y="7807.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location (11,079,835 samples, 0.06%)</title><rect x="95.2463%" y="7781" width="0.0632%" height="15" fill="rgb(240,103,49)" fg:x="16693990953" fg:w="11079835"/><text x="95.4963%" y="7791.50"></text></g><g><title>addr2line::lookup::LookupResult&lt;L&gt;::map (11,079,835 samples, 0.06%)</title><rect x="95.2463%" y="7765" width="0.0632%" height="15" fill="rgb(250,182,30)" fg:x="16693990953" fg:w="11079835"/><text x="95.4963%" y="7775.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location::_{{closure}} (11,079,835 samples, 0.06%)</title><rect x="95.2463%" y="7749" width="0.0632%" height="15" fill="rgb(248,8,30)" fg:x="16693990953" fg:w="11079835"/><text x="95.4963%" y="7759.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_location (2,568,208 samples, 0.01%)</title><rect x="95.2949%" y="7733" width="0.0147%" height="15" fill="rgb(237,120,30)" fg:x="16702502580" fg:w="2568208"/><text x="95.5449%" y="7743.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::parse_lines (2,568,208 samples, 0.01%)</title><rect x="95.2949%" y="7717" width="0.0147%" height="15" fill="rgb(221,146,34)" fg:x="16702502580" fg:w="2568208"/><text x="95.5449%" y="7727.50"></text></g><g><title>addr2line::line::LazyLines::borrow (2,568,208 samples, 0.01%)</title><rect x="95.2949%" y="7701" width="0.0147%" height="15" fill="rgb(242,55,13)" fg:x="16702502580" fg:w="2568208"/><text x="95.5449%" y="7711.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (2,568,208 samples, 0.01%)</title><rect x="95.2949%" y="7685" width="0.0147%" height="15" fill="rgb(242,112,31)" fg:x="16702502580" fg:w="2568208"/><text x="95.5449%" y="7695.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (2,568,208 samples, 0.01%)</title><rect x="95.2949%" y="7669" width="0.0147%" height="15" fill="rgb(249,192,27)" fg:x="16702502580" fg:w="2568208"/><text x="95.5449%" y="7679.50"></text></g><g><title>addr2line::line::Lines::parse (2,568,208 samples, 0.01%)</title><rect x="95.2949%" y="7653" width="0.0147%" height="15" fill="rgb(208,204,44)" fg:x="16702502580" fg:w="2568208"/><text x="95.5449%" y="7663.50"></text></g><g><title>core::fmt::Formatter::write_str (2,722,505 samples, 0.02%)</title><rect x="95.3095%" y="7525" width="0.0155%" height="15" fill="rgb(208,93,54)" fg:x="16705070788" fg:w="2722505"/><text x="95.5595%" y="7535.50"></text></g><g><title>&lt;rustc_demangle::SizeLimitedFmtAdapter&lt;F&gt; as core::fmt::Write&gt;::write_str (1,898,586 samples, 0.01%)</title><rect x="95.3142%" y="7509" width="0.0108%" height="15" fill="rgb(242,1,31)" fg:x="16705894707" fg:w="1898586"/><text x="95.5642%" y="7519.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,898,586 samples, 0.01%)</title><rect x="95.3142%" y="7493" width="0.0108%" height="15" fill="rgb(241,83,25)" fg:x="16705894707" fg:w="1898586"/><text x="95.5642%" y="7503.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7909" width="0.0243%" height="15" fill="rgb(205,169,50)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7919.50"></text></g><g><title>&lt;pprof::frames::Frames as core::convert::From&lt;pprof::frames::UnresolvedFrames&gt;&gt;::from::_{{closure}} (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7893" width="0.0243%" height="15" fill="rgb(239,186,37)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7903.50"></text></g><g><title>pprof::frames::Symbol::name (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7877" width="0.0243%" height="15" fill="rgb(205,221,10)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7887.50"></text></g><g><title>symbolic_demangle::demangle (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7861" width="0.0243%" height="15" fill="rgb(218,196,15)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7871.50"></text></g><g><title>&lt;symbolic_common::types::Name as symbolic_demangle::Demangle&gt;::demangle (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7845" width="0.0243%" height="15" fill="rgb(218,196,35)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7855.50"></text></g><g><title>symbolic_demangle::try_demangle_rust (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7829" width="0.0243%" height="15" fill="rgb(233,63,24)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7839.50"></text></g><g><title>alloc::fmt::format (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7813" width="0.0243%" height="15" fill="rgb(225,8,4)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7823.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7797" width="0.0243%" height="15" fill="rgb(234,105,35)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7807.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7781" width="0.0243%" height="15" fill="rgb(236,21,32)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7791.50"></text></g><g><title>alloc::fmt::format::format_inner (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7765" width="0.0243%" height="15" fill="rgb(228,109,6)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7775.50"></text></g><g><title>core::fmt::Write::write_fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7749" width="0.0243%" height="15" fill="rgb(229,215,31)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7759.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7733" width="0.0243%" height="15" fill="rgb(221,52,54)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7743.50"></text></g><g><title>core::fmt::write (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7717" width="0.0243%" height="15" fill="rgb(252,129,43)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7727.50"></text></g><g><title>core::fmt::run (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7701" width="0.0243%" height="15" fill="rgb(248,183,27)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7711.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7685" width="0.0243%" height="15" fill="rgb(250,0,22)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7695.50"></text></g><g><title>&lt;rustc_demangle::Demangle as core::fmt::Display&gt;::fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7669" width="0.0243%" height="15" fill="rgb(213,166,10)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7679.50"></text></g><g><title>core::fmt::Write::write_fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7653" width="0.0243%" height="15" fill="rgb(207,163,36)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7663.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7637" width="0.0243%" height="15" fill="rgb(208,122,22)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7647.50"></text></g><g><title>core::fmt::write (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7621" width="0.0243%" height="15" fill="rgb(207,104,49)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7631.50"></text></g><g><title>core::fmt::run (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7605" width="0.0243%" height="15" fill="rgb(248,211,50)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7615.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7589" width="0.0243%" height="15" fill="rgb(217,13,45)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7599.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7573" width="0.0243%" height="15" fill="rgb(211,216,49)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7583.50"></text></g><g><title>&lt;rustc_demangle::DemangleStyle as core::fmt::Display&gt;::fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7557" width="0.0243%" height="15" fill="rgb(221,58,53)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7567.50"></text></g><g><title>&lt;rustc_demangle::legacy::Demangle as core::fmt::Display&gt;::fmt (4,267,399 samples, 0.02%)</title><rect x="95.3095%" y="7541" width="0.0243%" height="15" fill="rgb(220,112,41)" fg:x="16705070788" fg:w="4267399"/><text x="95.5595%" y="7551.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7669" width="0.0124%" height="15" fill="rgb(236,38,28)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7679.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7653" width="0.0124%" height="15" fill="rgb(227,195,22)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7663.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7637" width="0.0124%" height="15" fill="rgb(214,55,33)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7647.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7621" width="0.0124%" height="15" fill="rgb(248,80,13)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7631.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7605" width="0.0124%" height="15" fill="rgb(238,52,6)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7615.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7589" width="0.0124%" height="15" fill="rgb(224,198,47)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7599.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7573" width="0.0124%" height="15" fill="rgb(233,171,20)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7583.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7557" width="0.0124%" height="15" fill="rgb(241,30,25)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7567.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7541" width="0.0124%" height="15" fill="rgb(207,171,38)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7551.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7525" width="0.0124%" height="15" fill="rgb(234,70,1)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7535.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7509" width="0.0124%" height="15" fill="rgb(232,178,18)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7519.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (2,173,226 samples, 0.01%)</title><rect x="95.3391%" y="7493" width="0.0124%" height="15" fill="rgb(241,78,40)" fg:x="16710251004" fg:w="2173226"/><text x="95.5891%" y="7503.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow (4,265,095 samples, 0.02%)</title><rect x="95.3339%" y="7733" width="0.0243%" height="15" fill="rgb(222,35,25)" fg:x="16709338187" fg:w="4265095"/><text x="95.5839%" y="7743.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4,265,095 samples, 0.02%)</title><rect x="95.3339%" y="7717" width="0.0243%" height="15" fill="rgb(207,92,16)" fg:x="16709338187" fg:w="4265095"/><text x="95.5839%" y="7727.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow::_{{closure}} (4,265,095 samples, 0.02%)</title><rect x="95.3339%" y="7701" width="0.0243%" height="15" fill="rgb(216,59,51)" fg:x="16709338187" fg:w="4265095"/><text x="95.5839%" y="7711.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse (4,265,095 samples, 0.02%)</title><rect x="95.3339%" y="7685" width="0.0243%" height="15" fill="rgb(213,80,28)" fg:x="16709338187" fg:w="4265095"/><text x="95.5839%" y="7695.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow (4,430,283 samples, 0.03%)</title><rect x="95.3582%" y="7733" width="0.0253%" height="15" fill="rgb(220,93,7)" fg:x="16713603282" fg:w="4430283"/><text x="95.6082%" y="7743.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4,430,283 samples, 0.03%)</title><rect x="95.3582%" y="7717" width="0.0253%" height="15" fill="rgb(225,24,44)" fg:x="16713603282" fg:w="4430283"/><text x="95.6082%" y="7727.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow::_{{closure}} (4,430,283 samples, 0.03%)</title><rect x="95.3582%" y="7701" width="0.0253%" height="15" fill="rgb(243,74,40)" fg:x="16713603282" fg:w="4430283"/><text x="95.6082%" y="7711.50"></text></g><g><title>addr2line::function::Functions&lt;R&gt;::parse (4,430,283 samples, 0.03%)</title><rect x="95.3582%" y="7685" width="0.0253%" height="15" fill="rgb(228,39,7)" fg:x="16713603282" fg:w="4430283"/><text x="95.6082%" y="7695.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::skip_attributes (2,497,277 samples, 0.01%)</title><rect x="95.3692%" y="7669" width="0.0142%" height="15" fill="rgb(227,79,8)" fg:x="16715536288" fg:w="2497277"/><text x="95.6192%" y="7679.50"></text></g><g><title>gimli::read::unit::skip_attributes (2,497,277 samples, 0.01%)</title><rect x="95.3692%" y="7653" width="0.0142%" height="15" fill="rgb(236,58,11)" fg:x="16715536288" fg:w="2497277"/><text x="95.6192%" y="7663.50"></text></g><g><title>pprof::report::ReportBuilder::build (17,133,143 samples, 0.10%)</title><rect x="95.3095%" y="8037" width="0.0978%" height="15" fill="rgb(249,63,35)" fg:x="16705070788" fg:w="17133143"/><text x="95.5595%" y="8047.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17,133,143 samples, 0.10%)</title><rect x="95.3095%" y="8021" width="0.0978%" height="15" fill="rgb(252,114,16)" fg:x="16705070788" fg:w="17133143"/><text x="95.5595%" y="8031.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,133,143 samples, 0.10%)</title><rect x="95.3095%" y="8005" width="0.0978%" height="15" fill="rgb(254,151,24)" fg:x="16705070788" fg:w="17133143"/><text x="95.5595%" y="8015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17,133,143 samples, 0.10%)</title><rect x="95.3095%" y="7989" width="0.0978%" height="15" fill="rgb(253,54,39)" fg:x="16705070788" fg:w="17133143"/><text x="95.5595%" y="7999.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17,133,143 samples, 0.10%)</title><rect x="95.3095%" y="7973" width="0.0978%" height="15" fill="rgb(243,25,45)" fg:x="16705070788" fg:w="17133143"/><text x="95.5595%" y="7983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (17,133,143 samples, 0.10%)</title><rect x="95.3095%" y="7957" width="0.0978%" height="15" fill="rgb(234,134,9)" fg:x="16705070788" fg:w="17133143"/><text x="95.5595%" y="7967.50"></text></g><g><title>pprof::report::ReportBuilder::build::_{{closure}} (17,133,143 samples, 0.10%)</title><rect x="95.3095%" y="7941" width="0.0978%" height="15" fill="rgb(227,166,31)" fg:x="16705070788" fg:w="17133143"/><text x="95.5595%" y="7951.50"></text></g><g><title>&lt;pprof::frames::Frames as core::convert::From&lt;pprof::frames::UnresolvedFrames&gt;&gt;::from (17,133,143 samples, 0.10%)</title><rect x="95.3095%" y="7925" width="0.0978%" height="15" fill="rgb(245,143,41)" fg:x="16705070788" fg:w="17133143"/><text x="95.5595%" y="7935.50"></text></g><g><title>pprof::backtrace::backtrace_rs::&lt;impl pprof::backtrace::Frame for backtrace::backtrace::Frame&gt;::resolve_symbol (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7909" width="0.0734%" height="15" fill="rgb(238,181,32)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7919.50"></text></g><g><title>backtrace::symbolize::resolve_frame (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7893" width="0.0734%" height="15" fill="rgb(224,113,18)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7903.50"></text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7877" width="0.0734%" height="15" fill="rgb(240,229,28)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7887.50"></text></g><g><title>backtrace::symbolize::gimli::resolve (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7861" width="0.0734%" height="15" fill="rgb(250,185,3)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7871.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7845" width="0.0734%" height="15" fill="rgb(212,59,25)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7855.50"></text></g><g><title>backtrace::symbolize::gimli::resolve::_{{closure}} (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7829" width="0.0734%" height="15" fill="rgb(221,87,20)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7839.50"></text></g><g><title>backtrace::symbolize::gimli::Context::find_frames (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7813" width="0.0734%" height="15" fill="rgb(213,74,28)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7823.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7797" width="0.0734%" height="15" fill="rgb(224,132,34)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7807.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7781" width="0.0734%" height="15" fill="rgb(222,101,24)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7791.50"></text></g><g><title>addr2line::lookup::LookupResult&lt;L&gt;::map (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7765" width="0.0734%" height="15" fill="rgb(254,142,4)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7775.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location::_{{closure}} (12,865,744 samples, 0.07%)</title><rect x="95.3339%" y="7749" width="0.0734%" height="15" fill="rgb(230,229,49)" fg:x="16709338187" fg:w="12865744"/><text x="95.5839%" y="7759.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_location (4,170,366 samples, 0.02%)</title><rect x="95.3835%" y="7733" width="0.0238%" height="15" fill="rgb(238,70,47)" fg:x="16718033565" fg:w="4170366"/><text x="95.6335%" y="7743.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::parse_lines (4,170,366 samples, 0.02%)</title><rect x="95.3835%" y="7717" width="0.0238%" height="15" fill="rgb(231,160,17)" fg:x="16718033565" fg:w="4170366"/><text x="95.6335%" y="7727.50"></text></g><g><title>addr2line::line::LazyLines::borrow (4,170,366 samples, 0.02%)</title><rect x="95.3835%" y="7701" width="0.0238%" height="15" fill="rgb(218,68,53)" fg:x="16718033565" fg:w="4170366"/><text x="95.6335%" y="7711.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4,170,366 samples, 0.02%)</title><rect x="95.3835%" y="7685" width="0.0238%" height="15" fill="rgb(236,111,10)" fg:x="16718033565" fg:w="4170366"/><text x="95.6335%" y="7695.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (4,170,366 samples, 0.02%)</title><rect x="95.3835%" y="7669" width="0.0238%" height="15" fill="rgb(224,34,41)" fg:x="16718033565" fg:w="4170366"/><text x="95.6335%" y="7679.50"></text></g><g><title>addr2line::line::Lines::parse (4,170,366 samples, 0.02%)</title><rect x="95.3835%" y="7653" width="0.0238%" height="15" fill="rgb(241,118,19)" fg:x="16718033565" fg:w="4170366"/><text x="95.6335%" y="7663.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (4,170,366 samples, 0.02%)</title><rect x="95.3835%" y="7637" width="0.0238%" height="15" fill="rgb(238,129,25)" fg:x="16718033565" fg:w="4170366"/><text x="95.6335%" y="7647.50"></text></g><g><title>gimli::read::line::LineRow::execute (2,985,942 samples, 0.02%)</title><rect x="95.3902%" y="7621" width="0.0170%" height="15" fill="rgb(238,22,31)" fg:x="16719217989" fg:w="2985942"/><text x="95.6402%" y="7631.50"></text></g><g><title>gimli::read::line::LineRow::exec_special_opcode (1,898,492 samples, 0.01%)</title><rect x="95.3964%" y="7605" width="0.0108%" height="15" fill="rgb(222,174,48)" fg:x="16720305439" fg:w="1898492"/><text x="95.6464%" y="7615.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7381" width="0.0108%" height="15" fill="rgb(206,152,40)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7391.50"></text></g><g><title>alloc::string::String::push_str (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7365" width="0.0108%" height="15" fill="rgb(218,99,54)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7349" width="0.0108%" height="15" fill="rgb(220,174,26)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7333" width="0.0108%" height="15" fill="rgb(245,116,9)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7317" width="0.0108%" height="15" fill="rgb(209,72,35)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7301" width="0.0108%" height="15" fill="rgb(226,126,21)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7285" width="0.0108%" height="15" fill="rgb(227,192,1)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7269" width="0.0108%" height="15" fill="rgb(237,180,29)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7253" width="0.0108%" height="15" fill="rgb(230,197,35)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7237" width="0.0108%" height="15" fill="rgb(246,193,31)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7247.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7221" width="0.0108%" height="15" fill="rgb(241,36,4)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7231.50"></text></g><g><title>malloc (1,899,094 samples, 0.01%)</title><rect x="95.4171%" y="7205" width="0.0108%" height="15" fill="rgb(241,130,17)" fg:x="16723920953" fg:w="1899094"/><text x="95.6671%" y="7215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="8005" width="0.0316%" height="15" fill="rgb(206,137,32)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="8015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7989" width="0.0316%" height="15" fill="rgb(237,228,51)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7973" width="0.0316%" height="15" fill="rgb(243,6,42)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7957" width="0.0316%" height="15" fill="rgb(251,74,28)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7941" width="0.0316%" height="15" fill="rgb(218,20,49)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7925" width="0.0316%" height="15" fill="rgb(238,28,14)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7909" width="0.0316%" height="15" fill="rgb(229,40,46)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7919.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7893" width="0.0316%" height="15" fill="rgb(244,195,20)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7903.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7877" width="0.0316%" height="15" fill="rgb(253,56,35)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7887.50"></text></g><g><title>pprof::report::flamegraph::_&lt;impl pprof::report::Report&gt;::flamegraph_with_options::_{{closure}} (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7861" width="0.0316%" height="15" fill="rgb(210,149,44)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7871.50"></text></g><g><title>core::fmt::Write::write_fmt (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7845" width="0.0316%" height="15" fill="rgb(240,135,12)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7855.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7829" width="0.0316%" height="15" fill="rgb(251,24,50)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7839.50"></text></g><g><title>core::fmt::write (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7813" width="0.0316%" height="15" fill="rgb(243,200,47)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7823.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7797" width="0.0316%" height="15" fill="rgb(224,166,26)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7807.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7781" width="0.0316%" height="15" fill="rgb(233,0,47)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7791.50"></text></g><g><title>&lt;pprof::frames::Symbol as core::fmt::Display&gt;::fmt (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7765" width="0.0316%" height="15" fill="rgb(253,80,5)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7775.50"></text></g><g><title>pprof::frames::Symbol::name (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7749" width="0.0316%" height="15" fill="rgb(214,133,25)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7759.50"></text></g><g><title>symbolic_demangle::demangle (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7733" width="0.0316%" height="15" fill="rgb(209,27,14)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7743.50"></text></g><g><title>&lt;symbolic_common::types::Name as symbolic_demangle::Demangle&gt;::demangle (5,543,030 samples, 0.03%)</title><rect x="95.4073%" y="7717" width="0.0316%" height="15" fill="rgb(219,102,51)" fg:x="16722203931" fg:w="5543030"/><text x="95.6573%" y="7727.50"></text></g><g><title>symbolic_demangle::try_demangle_rust (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7701" width="0.0218%" height="15" fill="rgb(237,18,16)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7711.50"></text></g><g><title>alloc::fmt::format (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7685" width="0.0218%" height="15" fill="rgb(241,85,17)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7669" width="0.0218%" height="15" fill="rgb(236,90,42)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7679.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7653" width="0.0218%" height="15" fill="rgb(249,57,21)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7663.50"></text></g><g><title>alloc::fmt::format::format_inner (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7637" width="0.0218%" height="15" fill="rgb(243,12,36)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7647.50"></text></g><g><title>core::fmt::Write::write_fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7621" width="0.0218%" height="15" fill="rgb(253,128,47)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7631.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7605" width="0.0218%" height="15" fill="rgb(207,33,20)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7615.50"></text></g><g><title>core::fmt::write (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7589" width="0.0218%" height="15" fill="rgb(233,215,35)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7599.50"></text></g><g><title>core::fmt::run (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7573" width="0.0218%" height="15" fill="rgb(249,188,52)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7583.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7557" width="0.0218%" height="15" fill="rgb(225,12,32)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7567.50"></text></g><g><title>&lt;rustc_demangle::Demangle as core::fmt::Display&gt;::fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7541" width="0.0218%" height="15" fill="rgb(247,98,14)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7551.50"></text></g><g><title>core::fmt::Write::write_fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7525" width="0.0218%" height="15" fill="rgb(247,219,48)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7535.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7509" width="0.0218%" height="15" fill="rgb(253,60,48)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7519.50"></text></g><g><title>core::fmt::write (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7493" width="0.0218%" height="15" fill="rgb(245,15,52)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7503.50"></text></g><g><title>core::fmt::run (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7477" width="0.0218%" height="15" fill="rgb(220,133,28)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7487.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7461" width="0.0218%" height="15" fill="rgb(217,180,4)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7471.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7445" width="0.0218%" height="15" fill="rgb(251,24,1)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7455.50"></text></g><g><title>&lt;rustc_demangle::DemangleStyle as core::fmt::Display&gt;::fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7429" width="0.0218%" height="15" fill="rgb(212,185,49)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7439.50"></text></g><g><title>&lt;rustc_demangle::legacy::Demangle as core::fmt::Display&gt;::fmt (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7413" width="0.0218%" height="15" fill="rgb(215,175,22)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7423.50"></text></g><g><title>core::fmt::Formatter::write_str (3,826,008 samples, 0.02%)</title><rect x="95.4171%" y="7397" width="0.0218%" height="15" fill="rgb(250,205,14)" fg:x="16723920953" fg:w="3826008"/><text x="95.6671%" y="7407.50"></text></g><g><title>&lt;rustc_demangle::SizeLimitedFmtAdapter&lt;F&gt; as core::fmt::Write&gt;::write_str (1,926,914 samples, 0.01%)</title><rect x="95.4279%" y="7381" width="0.0110%" height="15" fill="rgb(225,211,22)" fg:x="16725820047" fg:w="1926914"/><text x="95.6779%" y="7391.50"></text></g><g><title>core::fmt::Write::write_fmt (2,072,098 samples, 0.01%)</title><rect x="95.4613%" y="7957" width="0.0118%" height="15" fill="rgb(251,179,42)" fg:x="16731676376" fg:w="2072098"/><text x="95.7113%" y="7967.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,072,098 samples, 0.01%)</title><rect x="95.4613%" y="7941" width="0.0118%" height="15" fill="rgb(208,216,51)" fg:x="16731676376" fg:w="2072098"/><text x="95.7113%" y="7951.50"></text></g><g><title>inferno::flamegraph::filled_rectangle (3,654,230 samples, 0.02%)</title><rect x="95.4535%" y="7989" width="0.0208%" height="15" fill="rgb(235,36,11)" fg:x="16730302103" fg:w="3654230"/><text x="95.7035%" y="7999.50"></text></g><g><title>str_stack::StrStack::write_fmt (2,279,957 samples, 0.01%)</title><rect x="95.4613%" y="7973" width="0.0130%" height="15" fill="rgb(213,189,28)" fg:x="16731676376" fg:w="2279957"/><text x="95.7113%" y="7983.50"></text></g><g><title>inferno::flamegraph::svg::write_str (6,942,633 samples, 0.04%)</title><rect x="95.4743%" y="7989" width="0.0396%" height="15" fill="rgb(227,203,42)" fg:x="16733956333" fg:w="6942633"/><text x="95.7243%" y="7999.50"></text></g><g><title>str_stack::StrStack::write_fmt (3,464,517 samples, 0.02%)</title><rect x="95.4942%" y="7973" width="0.0198%" height="15" fill="rgb(244,72,36)" fg:x="16737434449" fg:w="3464517"/><text x="95.7442%" y="7983.50"></text></g><g><title>core::fmt::Write::write_fmt (3,203,496 samples, 0.02%)</title><rect x="95.4957%" y="7957" width="0.0183%" height="15" fill="rgb(213,53,17)" fg:x="16737695470" fg:w="3203496"/><text x="95.7457%" y="7967.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,203,496 samples, 0.02%)</title><rect x="95.4957%" y="7941" width="0.0183%" height="15" fill="rgb(207,167,3)" fg:x="16737695470" fg:w="3203496"/><text x="95.7457%" y="7951.50"></text></g><g><title>core::fmt::write (3,203,496 samples, 0.02%)</title><rect x="95.4957%" y="7925" width="0.0183%" height="15" fill="rgb(216,98,30)" fg:x="16737695470" fg:w="3203496"/><text x="95.7457%" y="7935.50"></text></g><g><title>core::fmt::run (3,203,496 samples, 0.02%)</title><rect x="95.4957%" y="7909" width="0.0183%" height="15" fill="rgb(236,123,15)" fg:x="16737695470" fg:w="3203496"/><text x="95.7457%" y="7919.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,203,496 samples, 0.02%)</title><rect x="95.4957%" y="7893" width="0.0183%" height="15" fill="rgb(248,81,50)" fg:x="16737695470" fg:w="3203496"/><text x="95.7457%" y="7903.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (3,203,496 samples, 0.02%)</title><rect x="95.4957%" y="7877" width="0.0183%" height="15" fill="rgb(214,120,4)" fg:x="16737695470" fg:w="3203496"/><text x="95.7457%" y="7887.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (2,970,768 samples, 0.02%)</title><rect x="95.4970%" y="7861" width="0.0169%" height="15" fill="rgb(208,179,34)" fg:x="16737928198" fg:w="2970768"/><text x="95.7470%" y="7871.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,918,849 samples, 0.02%)</title><rect x="95.4973%" y="7845" width="0.0167%" height="15" fill="rgb(227,140,7)" fg:x="16737980117" fg:w="2918849"/><text x="95.7473%" y="7855.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (2,918,849 samples, 0.02%)</title><rect x="95.4973%" y="7829" width="0.0167%" height="15" fill="rgb(214,22,6)" fg:x="16737980117" fg:w="2918849"/><text x="95.7473%" y="7839.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (2,918,849 samples, 0.02%)</title><rect x="95.4973%" y="7813" width="0.0167%" height="15" fill="rgb(207,137,27)" fg:x="16737980117" fg:w="2918849"/><text x="95.7473%" y="7823.50"></text></g><g><title>num_format::buffer::Buffer::write_formatted (2,312,970 samples, 0.01%)</title><rect x="95.5209%" y="7989" width="0.0132%" height="15" fill="rgb(210,8,46)" fg:x="16742124477" fg:w="2312970"/><text x="95.7709%" y="7999.50"></text></g><g><title>num_format::impls::integers::&lt;impl num_format::to_formatted_str::ToFormattedStr for usize&gt;::read_to_buffer (2,312,970 samples, 0.01%)</title><rect x="95.5209%" y="7973" width="0.0132%" height="15" fill="rgb(240,16,54)" fg:x="16742124477" fg:w="2312970"/><text x="95.7709%" y="7983.50"></text></g><g><title>num_format::impls::integers::run_core_algorithm (2,312,970 samples, 0.01%)</title><rect x="95.5209%" y="7957" width="0.0132%" height="15" fill="rgb(211,209,29)" fg:x="16742124477" fg:w="2312970"/><text x="95.7709%" y="7967.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_event (3,475,351 samples, 0.02%)</title><rect x="95.5348%" y="7989" width="0.0198%" height="15" fill="rgb(226,228,24)" fg:x="16744560456" fg:w="3475351"/><text x="95.7848%" y="7999.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write_wrapped (2,140,943 samples, 0.01%)</title><rect x="95.5424%" y="7973" width="0.0122%" height="15" fill="rgb(222,84,9)" fg:x="16745894864" fg:w="2140943"/><text x="95.7924%" y="7983.50"></text></g><g><title>quick_xml::writer::Writer&lt;W&gt;::write (2,140,943 samples, 0.01%)</title><rect x="95.5424%" y="7957" width="0.0122%" height="15" fill="rgb(234,203,30)" fg:x="16745894864" fg:w="2140943"/><text x="95.7924%" y="7967.50"></text></g><g><title>pprof::report::flamegraph::&lt;impl pprof::report::Report&gt;::flamegraph (26,975,961 samples, 0.15%)</title><rect x="95.4073%" y="8037" width="0.1539%" height="15" fill="rgb(238,109,14)" fg:x="16722203931" fg:w="26975961"/><text x="95.6573%" y="8047.50"></text></g><g><title>pprof::report::flamegraph::&lt;impl pprof::report::Report&gt;::flamegraph_with_options (26,975,961 samples, 0.15%)</title><rect x="95.4073%" y="8021" width="0.1539%" height="15" fill="rgb(233,206,34)" fg:x="16722203931" fg:w="26975961"/><text x="95.6573%" y="8031.50"></text></g><g><title>inferno::flamegraph::from_lines (21,432,931 samples, 0.12%)</title><rect x="95.4389%" y="8005" width="0.1223%" height="15" fill="rgb(220,167,47)" fg:x="16727746961" fg:w="21432931"/><text x="95.6889%" y="8015.50"></text></g><g><title>&lt;ndarray::iterators::Iter&lt;A,D&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,578,976 samples, 0.19%)</title><rect x="96.3948%" y="7909" width="0.1916%" height="15" fill="rgb(238,105,10)" fg:x="16895287346" fg:w="33578976"/><text x="96.6448%" y="7919.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,578,976 samples, 0.19%)</title><rect x="96.3948%" y="7893" width="0.1916%" height="15" fill="rgb(213,227,17)" fg:x="16895287346" fg:w="33578976"/><text x="96.6448%" y="7903.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (33,578,976 samples, 0.19%)</title><rect x="96.3948%" y="7877" width="0.1916%" height="15" fill="rgb(217,132,38)" fg:x="16895287346" fg:w="33578976"/><text x="96.6448%" y="7887.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (36,178,097 samples, 0.21%)</title><rect x="96.3948%" y="7925" width="0.2064%" height="15" fill="rgb(242,146,4)" fg:x="16895287346" fg:w="36178097"/><text x="96.6448%" y="7935.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2,599,121 samples, 0.01%)</title><rect x="96.5864%" y="7909" width="0.0148%" height="15" fill="rgb(212,61,9)" fg:x="16928866322" fg:w="2599121"/><text x="96.8364%" y="7919.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (2,599,121 samples, 0.01%)</title><rect x="96.5864%" y="7893" width="0.0148%" height="15" fill="rgb(247,126,22)" fg:x="16928866322" fg:w="2599121"/><text x="96.8364%" y="7903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (225,768,438 samples, 1.29%)</title><rect x="95.6232%" y="7941" width="1.2881%" height="15" fill="rgb(220,196,2)" fg:x="16760043545" fg:w="225768438"/><text x="95.8732%" y="7951.50"></text></g><g><title>core::ptr::write (53,489,141 samples, 0.31%)</title><rect x="96.6061%" y="7925" width="0.3052%" height="15" fill="rgb(208,46,4)" fg:x="16932322842" fg:w="53489141"/><text x="96.8561%" y="7935.50"></text></g><g><title>[unknown] (41,158,906 samples, 0.23%)</title><rect x="96.6764%" y="7909" width="0.2348%" height="15" fill="rgb(252,104,46)" fg:x="16944653077" fg:w="41158906"/><text x="96.9264%" y="7919.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (55,392,728 samples, 0.32%)</title><rect x="96.9113%" y="7653" width="0.3160%" height="15" fill="rgb(237,152,48)" fg:x="16985811983" fg:w="55392728"/><text x="97.1613%" y="7663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (224,714,800 samples, 1.28%)</title><rect x="96.9113%" y="7685" width="1.2821%" height="15" fill="rgb(221,59,37)" fg:x="16985811983" fg:w="224714800"/><text x="97.1613%" y="7695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (224,714,800 samples, 1.28%)</title><rect x="96.9113%" y="7669" width="1.2821%" height="15" fill="rgb(209,202,51)" fg:x="16985811983" fg:w="224714800"/><text x="97.1613%" y="7679.50"></text></g><g><title>core::ptr::write (169,322,072 samples, 0.97%)</title><rect x="97.2273%" y="7653" width="0.9661%" height="15" fill="rgb(228,81,30)" fg:x="17041204711" fg:w="169322072"/><text x="97.4773%" y="7663.50"></text></g><g><title>[unknown] (31,605,374 samples, 0.18%)</title><rect x="98.0130%" y="7637" width="0.1803%" height="15" fill="rgb(227,42,39)" fg:x="17178921409" fg:w="31605374"/><text x="98.2630%" y="7647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (490,850,254 samples, 2.80%)</title><rect x="95.5612%" y="8021" width="2.8005%" height="15" fill="rgb(221,26,2)" fg:x="16749179892" fg:w="490850254"/><text x="95.8112%" y="8031.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (490,850,254 samples, 2.80%)</title><rect x="95.5612%" y="8005" width="2.8005%" height="15" fill="rgb(254,61,31)" fg:x="16749179892" fg:w="490850254"/><text x="95.8112%" y="8015.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (490,850,254 samples, 2.80%)</title><rect x="95.5612%" y="7989" width="2.8005%" height="15" fill="rgb(222,173,38)" fg:x="16749179892" fg:w="490850254"/><text x="95.8112%" y="7999.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (490,850,254 samples, 2.80%)</title><rect x="95.5612%" y="7973" width="2.8005%" height="15" fill="rgb(218,50,12)" fg:x="16749179892" fg:w="490850254"/><text x="95.8112%" y="7983.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (479,986,601 samples, 2.74%)</title><rect x="95.6232%" y="7957" width="2.7385%" height="15" fill="rgb(223,88,40)" fg:x="16760043545" fg:w="479986601"/><text x="95.8732%" y="7967.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7941" width="1.4504%" height="15" fill="rgb(237,54,19)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7925" width="1.4504%" height="15" fill="rgb(251,129,25)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7909" width="1.4504%" height="15" fill="rgb(238,97,19)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7893" width="1.4504%" height="15" fill="rgb(240,169,18)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7903.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7877" width="1.4504%" height="15" fill="rgb(230,187,49)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7887.50"></text></g><g><title>profile::demean_impl::_{{closure}} (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7861" width="1.4504%" height="15" fill="rgb(209,44,26)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7845" width="1.4504%" height="15" fill="rgb(244,0,6)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7829" width="1.4504%" height="15" fill="rgb(248,18,21)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7813" width="1.4504%" height="15" fill="rgb(245,180,19)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7797" width="1.4504%" height="15" fill="rgb(252,118,36)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7781" width="1.4504%" height="15" fill="rgb(210,224,19)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7765" width="1.4504%" height="15" fill="rgb(218,30,24)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7749" width="1.4504%" height="15" fill="rgb(219,75,50)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7733" width="1.4504%" height="15" fill="rgb(234,72,50)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7717" width="1.4504%" height="15" fill="rgb(219,100,48)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7727.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (254,218,163 samples, 1.45%)</title><rect x="96.9113%" y="7701" width="1.4504%" height="15" fill="rgb(253,5,41)" fg:x="16985811983" fg:w="254218163"/><text x="97.1613%" y="7711.50"></text></g><g><title>profile::demean_impl::_{{closure}}::_{{closure}} (29,503,363 samples, 0.17%)</title><rect x="98.1934%" y="7685" width="0.1683%" height="15" fill="rgb(247,181,11)" fg:x="17210526783" fg:w="29503363"/><text x="98.4434%" y="7695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (137,339,807 samples, 0.78%)</title><rect x="98.3617%" y="8021" width="0.7836%" height="15" fill="rgb(222,223,25)" fg:x="17240030146" fg:w="137339807"/><text x="98.6117%" y="8031.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (137,339,807 samples, 0.78%)</title><rect x="98.3617%" y="8005" width="0.7836%" height="15" fill="rgb(214,198,28)" fg:x="17240030146" fg:w="137339807"/><text x="98.6117%" y="8015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (137,339,807 samples, 0.78%)</title><rect x="98.3617%" y="7989" width="0.7836%" height="15" fill="rgb(230,46,43)" fg:x="17240030146" fg:w="137339807"/><text x="98.6117%" y="7999.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (137,339,807 samples, 0.78%)</title><rect x="98.3617%" y="7973" width="0.7836%" height="15" fill="rgb(233,65,53)" fg:x="17240030146" fg:w="137339807"/><text x="98.6117%" y="7983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (137,339,807 samples, 0.78%)</title><rect x="98.3617%" y="7957" width="0.7836%" height="15" fill="rgb(221,121,27)" fg:x="17240030146" fg:w="137339807"/><text x="98.6117%" y="7967.50"></text></g><g><title>&lt;ndarray::iterators::Iter&lt;A,D&gt; as core::iter::traits::iterator::Iterator&gt;::fold (137,339,807 samples, 0.78%)</title><rect x="98.3617%" y="7941" width="0.7836%" height="15" fill="rgb(247,70,47)" fg:x="17240030146" fg:w="137339807"/><text x="98.6117%" y="7951.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (137,339,807 samples, 0.78%)</title><rect x="98.3617%" y="7925" width="0.7836%" height="15" fill="rgb(228,85,35)" fg:x="17240030146" fg:w="137339807"/><text x="98.6117%" y="7935.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (77,292,913 samples, 0.44%)</title><rect x="98.7043%" y="7909" width="0.4410%" height="15" fill="rgb(209,50,18)" fg:x="17300077040" fg:w="77292913"/><text x="98.9543%" y="7919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::_{{closure}} (77,292,913 samples, 0.44%)</title><rect x="98.7043%" y="7893" width="0.4410%" height="15" fill="rgb(250,19,35)" fg:x="17300077040" fg:w="77292913"/><text x="98.9543%" y="7903.50"></text></g><g><title>core::cmp::max_by (77,292,913 samples, 0.44%)</title><rect x="98.7043%" y="7877" width="0.4410%" height="15" fill="rgb(253,107,29)" fg:x="17300077040" fg:w="77292913"/><text x="98.9543%" y="7887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (37,839,595 samples, 0.22%)</title><rect x="99.5471%" y="8005" width="0.2159%" height="15" fill="rgb(252,179,29)" fg:x="17447805892" fg:w="37839595"/><text x="99.7971%" y="8015.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (37,839,595 samples, 0.22%)</title><rect x="99.5471%" y="7989" width="0.2159%" height="15" fill="rgb(238,194,6)" fg:x="17447805892" fg:w="37839595"/><text x="99.7971%" y="7999.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (37,839,595 samples, 0.22%)</title><rect x="99.5471%" y="7973" width="0.2159%" height="15" fill="rgb(238,164,29)" fg:x="17447805892" fg:w="37839595"/><text x="99.7971%" y="7983.50"></text></g><g><title>_start (2,679,090,595 samples, 15.29%)</title><rect x="84.6841%" y="8149" width="15.2854%" height="15" fill="rgb(224,25,9)" fg:x="14842738778" fg:w="2679090595"/><text x="84.9341%" y="8159.50">_start</text></g><g><title>__libc_start_main (2,679,090,595 samples, 15.29%)</title><rect x="84.6841%" y="8133" width="15.2854%" height="15" fill="rgb(244,153,23)" fg:x="14842738778" fg:w="2679090595"/><text x="84.9341%" y="8143.50">__libc_start_main</text></g><g><title>[libc.so.6] (2,679,090,595 samples, 15.29%)</title><rect x="84.6841%" y="8117" width="15.2854%" height="15" fill="rgb(212,203,14)" fg:x="14842738778" fg:w="2679090595"/><text x="84.9341%" y="8127.50">[libc.so.6]</text></g><g><title>main (2,679,090,595 samples, 15.29%)</title><rect x="84.6841%" y="8101" width="15.2854%" height="15" fill="rgb(220,164,20)" fg:x="14842738778" fg:w="2679090595"/><text x="84.9341%" y="8111.50">main</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,678,589,091 samples, 15.28%)</title><rect x="84.6870%" y="8085" width="15.2825%" height="15" fill="rgb(222,203,48)" fg:x="14843240282" fg:w="2678589091"/><text x="84.9370%" y="8095.50">std::sys::backtrace::__..</text></g><g><title>core::ops::function::FnOnce::call_once (2,678,589,091 samples, 15.28%)</title><rect x="84.6870%" y="8069" width="15.2825%" height="15" fill="rgb(215,159,22)" fg:x="14843240282" fg:w="2678589091"/><text x="84.9370%" y="8079.50">core::ops::function::Fn..</text></g><g><title>profile::main (2,678,589,091 samples, 15.28%)</title><rect x="84.6870%" y="8053" width="15.2825%" height="15" fill="rgb(216,183,47)" fg:x="14843240282" fg:w="2678589091"/><text x="84.9370%" y="8063.50">profile::main</text></g><g><title>profile::demean_impl (772,649,481 samples, 4.41%)</title><rect x="95.5612%" y="8037" width="4.4083%" height="15" fill="rgb(229,195,25)" fg:x="16749179892" fg:w="772649481"/><text x="95.8112%" y="8047.50">profi..</text></g><g><title>profile::internal::calc_group_weights (144,459,420 samples, 0.82%)</title><rect x="99.1453%" y="8021" width="0.8242%" height="15" fill="rgb(224,132,51)" fg:x="17377369953" fg:w="144459420"/><text x="99.3953%" y="8031.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (36,183,886 samples, 0.21%)</title><rect x="99.7630%" y="8005" width="0.2064%" height="15" fill="rgb(240,63,7)" fg:x="17485645487" fg:w="36183886"/><text x="100.0130%" y="8015.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (36,183,886 samples, 0.21%)</title><rect x="99.7630%" y="7989" width="0.2064%" height="15" fill="rgb(249,182,41)" fg:x="17485645487" fg:w="36183886"/><text x="100.0130%" y="7999.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (19,575,997 samples, 0.11%)</title><rect x="99.8578%" y="7973" width="0.1117%" height="15" fill="rgb(243,47,26)" fg:x="17502253376" fg:w="19575997"/><text x="100.1078%" y="7983.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Collector&lt;pprof::frames::UnresolvedFrames&gt;&gt; (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8149" width="0.0270%" height="15" fill="rgb(233,48,2)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8159.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::HashCounter&lt;pprof::frames::UnresolvedFrames&gt;&gt; (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8133" width="0.0270%" height="15" fill="rgb(244,165,34)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt;&gt; (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8117" width="0.0270%" height="15" fill="rgb(207,89,7)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8127.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;: 4096]&gt; (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8101" width="0.0270%" height="15" fill="rgb(244,117,36)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8111.50"></text></g><g><title>core::ptr::drop_in_place&lt;pprof::collector::Bucket&lt;pprof::frames::UnresolvedFrames&gt;&gt; (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8085" width="0.0270%" height="15" fill="rgb(226,144,34)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[pprof::collector::Entry&lt;pprof::frames::UnresolvedFrames&gt;: 4]&gt;&gt; (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8069" width="0.0270%" height="15" fill="rgb(213,23,19)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8079.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8053" width="0.0270%" height="15" fill="rgb(217,75,12)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8037" width="0.0270%" height="15" fill="rgb(224,159,17)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8047.50"></text></g><g><title>alloc::alloc::dealloc (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8021" width="0.0270%" height="15" fill="rgb(217,118,1)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8031.50"></text></g><g><title>__rustc::__rdl_dealloc (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="8005" width="0.0270%" height="15" fill="rgb(232,180,48)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="8015.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="7989" width="0.0270%" height="15" fill="rgb(230,27,33)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="7999.50"></text></g><g><title>cfree (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="7973" width="0.0270%" height="15" fill="rgb(205,31,21)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="7983.50"></text></g><g><title>[libc.so.6] (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="7957" width="0.0270%" height="15" fill="rgb(253,59,4)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="7967.50"></text></g><g><title>[libc.so.6] (4,726,143 samples, 0.03%)</title><rect x="99.9695%" y="7941" width="0.0270%" height="15" fill="rgb(224,201,9)" fg:x="17521829373" fg:w="4726143"/><text x="100.2195%" y="7951.50"></text></g><g><title>all (17,527,178,247 samples, 100%)</title><rect x="0.0000%" y="8181" width="100.0000%" height="15" fill="rgb(229,206,30)" fg:x="0" fg:w="17527178247"/><text x="0.2500%" y="8191.50"></text></g><g><title>profile (17,527,178,247 samples, 100.00%)</title><rect x="0.0000%" y="8165" width="100.0000%" height="15" fill="rgb(212,67,47)" fg:x="0" fg:w="17527178247"/><text x="0.2500%" y="8175.50">profile</text></g></svg></svg>
