# fepois { #pyfixest.fepois }

`fepois`



## Classes

| Name | Description |
| --- | --- |
| [Fepois](#pyfixest.fepois.Fepois) | # Fepois |

### Fepois { #pyfixest.fepois.Fepois }

`fepois.Fepois(self, Y, X, fe, weights, coefnames, drop_singletons, collin_tol, maxiter=25, tol=1e-08)`

# Fepois

Class to estimate Poisson Regressions. Inherits from Feols. The following methods are overwritten: `get_fit()`.

#### Methods

| Name | Description |
| --- | --- |
| [get_fit](#pyfixest.fepois.Fepois.get_fit) | Fit a Poisson Regression Model via Iterated Weighted Least Squares |
| [predict](#pyfixest.fepois.Fepois.predict) | Return a flat np.array with predicted values of the regression model. |

##### get_fit { #pyfixest.fepois.Fepois.get_fit }

`fepois.Fepois.get_fit()`

Fit a Poisson Regression Model via Iterated Weighted Least Squares

Args:
    tol (float): tolerance level for the convergence of the IRLS algorithm
    maxiter (int): maximum number of iterations for the IRLS algorithm. 25 by default.
Returns:
    None
Attributes:
    beta_hat (np.array): estimated coefficients
    Y_hat (np.array): estimated dependent variable
    u_hat (np.array): estimated residuals
    weights (np.array): weights (from the last iteration of the IRLS algorithm)
    X (np.array): demeaned independent variables (from the last iteration of the IRLS algorithm)
    Z (np.array): demeaned independent variables (from the last iteration of the IRLS algorithm)
    Y (np.array): demeaned dependent variable (from the last iteration of the IRLS algorithm)

##### predict { #pyfixest.fepois.Fepois.predict }

`fepois.Fepois.predict(newdata=None, type='link')`

Return a flat np.array with predicted values of the regression model.
If new fixed effect levels are introduced in `newdata`, predicted values for such observations
will be set to NaN.

Args:
    newdata (Union[None, pd.DataFrame], optional): A pd.DataFrame with the new data, to be used for prediction.
        If None (default), uses the data used for fitting the model.
    type (str, optional): The type of prediction to be computed. Either "response" (default) or "link".
        If type="response", then the output is at the level of the response variable, i.e. it is the expected predictor E(Y|X).
        If "link", then the output is at the level of the explanatory variables, i.e. the linear predictor X @ beta.