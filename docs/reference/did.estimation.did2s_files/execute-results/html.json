{
  "hash": "559047ab81049a954d4ab69749f8dbf9",
  "result": {
    "markdown": "# did.estimation.did2s { #pyfixest.did.estimation.did2s }\n\n`did.estimation.did2s(data, yname, first_stage, second_stage, treatment, cluster, i_ref1=None, i_ref2=None)`\n\nEstimate a Difference-in-Differences model using Gardner's two-step DID2S estimator.\n\nThis function estimates the effects of treatments in panel data using a two-stage approach. It requires specification of\nboth the first and second stage formulas and supports interaction references for the second stage.\n\n## Parameters\n\n| Name           | Type                    | Description                                                                                                         | Default    |\n|----------------|-------------------------|---------------------------------------------------------------------------------------------------------------------|------------|\n| `data`         | pandas.pandas.DataFrame | The DataFrame containing all variables.                                                                             | _required_ |\n| `yname`        | str                     | The name of the dependent variable.                                                                                 | _required_ |\n| `first_stage`  | str                     | The formula for the first stage, starting with '~'.                                                                 | _required_ |\n| `second_stage` | str                     | The formula for the second stage, starting with '~'.                                                                | _required_ |\n| `treatment`    | str                     | The name of the treatment variable.                                                                                 | _required_ |\n| `cluster`      | str                     | The name of the cluster variable.                                                                                   | _required_ |\n| `i_ref1`       | (int, str, list)        | The reference value(s) for the first variable used with \"i()\" syntax in the second stage formula. Default is None.  | `None`     |\n| `i_ref2`       | (int, str, list)        | The reference value(s) for the second variable used with \"i()\" syntax in the second stage formula. Default is None. | `None`     |\n\n## Returns\n\n| Type   | Description                                                  |\n|--------|--------------------------------------------------------------|\n| object | A fitted model object of class [Feols(/reference/Feols.qmd). |\n\n## Examples\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nfrom pyfixest.did.estimation import did2s\n\nurl = \"https://raw.githubusercontent.com/s3alfisc/pyfixest/master/pyfixest/did/data/df_het.csv\"\ndf_het = pd.read_csv(url)\ndf_het.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n      You have loaded the 'pyfixest.did' module. While every function is tested in `tests/test_did.py`,\n      the module is not yet as thoroughly tested as I would like. So please use it with caution and\n      provide feedback in case you stumble over any bugs!\n      \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"PPtbiZ\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.2.0/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"PPtbiZ\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"PPtbiZ\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unit</th>\n      <th>state</th>\n      <th>group</th>\n      <th>unit_fe</th>\n      <th>g</th>\n      <th>year</th>\n      <th>year_fe</th>\n      <th>treat</th>\n      <th>rel_year</th>\n      <th>rel_year_binned</th>\n      <th>error</th>\n      <th>te</th>\n      <th>te_dynamic</th>\n      <th>dep_var</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1990</td>\n      <td>0.066159</td>\n      <td>False</td>\n      <td>-20.0</td>\n      <td>-6</td>\n      <td>-0.086466</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.022709</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1991</td>\n      <td>-0.030980</td>\n      <td>False</td>\n      <td>-19.0</td>\n      <td>-6</td>\n      <td>0.766593</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.778628</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1992</td>\n      <td>-0.119607</td>\n      <td>False</td>\n      <td>-18.0</td>\n      <td>-6</td>\n      <td>1.512968</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>8.436377</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1993</td>\n      <td>0.126321</td>\n      <td>False</td>\n      <td>-17.0</td>\n      <td>-6</td>\n      <td>0.021870</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>7.191207</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>33</td>\n      <td>Group 2</td>\n      <td>7.043016</td>\n      <td>2010</td>\n      <td>1994</td>\n      <td>-0.106921</td>\n      <td>False</td>\n      <td>-16.0</td>\n      <td>-6</td>\n      <td>-0.017603</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>6.918492</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nIn a first step, we estimate a classical event study model:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# estimate the model\nfit = did2s(\n    df_het,\n    yname=\"dep_var\",\n    first_stage=\"~ 0 | unit + year\",\n    second_stage=\"~i(rel_year)\",\n    treatment=\"treat\",\n    cluster=\"state\",\n    i_ref1=[-1.0, np.inf],\n)\n\nfit.tidy().head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5 %</th>\n      <th>97.5 %</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(rel_year,contr.treatment(base=-1.0))[T.-20.0]</th>\n      <td>-0.058226</td>\n      <td>0.035809</td>\n      <td>-1.626011</td>\n      <td>0.103954</td>\n      <td>-0.128412</td>\n      <td>0.011960</td>\n    </tr>\n    <tr>\n      <th>C(rel_year,contr.treatment(base=-1.0))[T.-19.0]</th>\n      <td>-0.006032</td>\n      <td>0.030341</td>\n      <td>-0.198816</td>\n      <td>0.842408</td>\n      <td>-0.065500</td>\n      <td>0.053436</td>\n    </tr>\n    <tr>\n      <th>C(rel_year,contr.treatment(base=-1.0))[T.-18.0]</th>\n      <td>-0.006152</td>\n      <td>0.035094</td>\n      <td>-0.175310</td>\n      <td>0.860837</td>\n      <td>-0.074937</td>\n      <td>0.062632</td>\n    </tr>\n    <tr>\n      <th>C(rel_year,contr.treatment(base=-1.0))[T.-17.0]</th>\n      <td>-0.012533</td>\n      <td>0.024834</td>\n      <td>-0.504689</td>\n      <td>0.613780</td>\n      <td>-0.061208</td>\n      <td>0.036141</td>\n    </tr>\n    <tr>\n      <th>C(rel_year,contr.treatment(base=-1.0))[T.-16.0]</th>\n      <td>-0.034698</td>\n      <td>0.029806</td>\n      <td>-1.164128</td>\n      <td>0.244378</td>\n      <td>-0.093117</td>\n      <td>0.023722</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nWe can also inspect the model visually:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nfit.iplot(figsize= [1200, 400], coord_flip=False).show()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n   <div id=\"TTKatl\"></div>\n   <script type=\"text/javascript\" data-lets-plot-script=\"plot\">\n       (function() {\n           var plotSpec={\n\"data\":{\n\"Model\":[\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\",\"dep_var_hat~i(rel_year)\"],\n\"Coefficient\":[\"C(rel_year,contr.treatment(base=-1.0))[T.-20.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-19.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-18.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-17.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-16.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-15.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-14.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-13.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-12.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-11.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-10.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-9.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-8.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-7.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-6.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-5.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-4.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-3.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.-2.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.0.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.1.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.2.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.3.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.4.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.5.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.6.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.7.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.8.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.9.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.10.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.11.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.12.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.13.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.14.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.15.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.16.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.17.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.18.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.19.0]\",\"C(rel_year,contr.treatment(base=-1.0))[T.20.0]\"],\n\"Estimate\":[-0.05822583123898875,-0.006032217320664622,-0.006152342798185015,-0.012533281423174216,-0.034697595758360525,0.03782822911703903,2.1315510802099588E-4,-0.001126732136253315,0.02653016582736427,-0.026841656196111056,0.007378430125945822,0.0023397668281729,0.009000046824511474,0.03275229921072289,2.5898768544314627E-4,-0.039326096639362165,0.005630436048088473,0.024642896748835408,0.0011694580442922957,1.3730783362807681,1.6021020992153696,1.6657197999639823,1.7874633607018466,1.914912758134074,2.059203329407789,2.1474989516932395,2.234015617658863,2.3275664995343055,2.346379127927936,2.501338353651901,2.5534424406919083,2.6044029557262025,2.5785087342838526,2.7234332919385387,2.909739171978041,2.8597896010903017,2.9084076146429685,2.8741426256232203,2.883271696700972,2.911965464450451],\n\"2.5 %\":[-0.12841200873871722,-0.06550049115087478,-0.07493711298021989,-0.061207685176083285,-0.09311711156334102,-0.02549539010190565,-0.07125403467904308,-0.05398936876466874,-0.037414956449746906,-0.10584306963206383,-0.03825645738357823,-0.041167964852497727,-0.036431190048842904,-0.015536976741417435,-0.03908668686029019,-0.08535189821302291,-0.03330702681856721,-0.01710956913171579,-0.04801602014025713,1.2955886226740698,1.503099526418637,1.576957926476668,1.688414734146724,1.8394048260870555,1.9763795867308926,2.053168865643504,2.1467006075103456,2.24498409965218,2.2635821134549694,2.4173363772202223,2.4298809748013555,2.465801310129235,2.4348096215638173,2.598272845073053,2.7733306413896455,2.72922498907896,2.7939655261353074,2.7193726339614464,2.7402493355336057,2.7768018404603096],\n\"97.5 %\":[0.011960346260739704,0.05343605650954554,0.06263242738384987,0.03614112232973485,0.023721920046619965,0.1011518483359837,0.07168034489508508,0.051735904492162116,0.09047528810447544,0.05215975723984171,0.053013317635469875,0.04584749850884352,0.05443128369786586,0.08104157516286321,0.039604662231176486,0.006699704934298591,0.04456789891474416,0.06639536262938661,0.050354936228841726,1.4505680498874665,1.7011046720121021,1.7544816734512967,1.8865119872569693,1.9904206901810924,2.1420270720846855,2.241829037742975,2.3213306278073804,2.410148899416431,2.4291761424009026,2.58534033008358,2.677003906582461,2.74300460132317,2.722207847003888,2.8485937388040243,3.046147702566437,2.9903542131016434,3.0228497031506296,3.0289126172849943,3.0262940578683386,3.047129088440592]\n},\n\"mapping\":{\n\"x\":\"Coefficient\",\n\"y\":\"Estimate\",\n\"color\":\"Model\"\n},\n\"data_meta\":{\n},\n\"ggsize\":{\n\"width\":1200.0,\n\"height\":400.0\n},\n\"theme\":{\n\"axis_text_x\":{\n\"angle\":0.0,\n\"blank\":false\n}\n},\n\"kind\":\"plot\",\n\"scales\":[{\n\"name\":\"Estimate and 95% Confidence Interval\",\n\"aesthetic\":\"y\"\n}],\n\"layers\":[{\n\"geom\":\"point\",\n\"mapping\":{\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"data\":{\n}\n},{\n\"geom\":\"errorbar\",\n\"mapping\":{\n\"ymin\":\"2.5 %\",\n\"ymax\":\"97.5 %\"\n},\n\"position\":{\n\"name\":\"dodge\",\n\"width\":0.5\n},\n\"data_meta\":{\n},\n\"width\":0.05,\n\"data\":{\n}\n}],\n\"metainfo_list\":[]\n};\n           var plotContainer = document.getElementById(\"TTKatl\");\n           window.letsPlotCall(function() {{\n               LetsPlot.buildPlotFromProcessedSpecs(plotSpec, -1, -1, plotContainer);\n           }});\n       })();    \n   </script>\n```\n:::\n:::\n\n\nTo estimate a pooled effect, we need to slightly update the second stage formula:\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nfit = did2s(\n    df_het,\n    yname=\"dep_var\",\n    first_stage=\"~ 0 | unit + year\",\n    second_stage=\"~i(treat)\",\n    treatment=\"treat\",\n    cluster=\"state\"\n)\nfit.tidy().head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5 %</th>\n      <th>97.5 %</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(treat)[T.True]</th>\n      <td>2.230482</td>\n      <td>0.024709</td>\n      <td>90.271437</td>\n      <td>0.0</td>\n      <td>2.182052</td>\n      <td>2.278911</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "did.estimation.did2s_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}