# detect_singletons { #pyfixest.detect_singletons }

`detect_singletons`



## Functions

| Name | Description |
| --- | --- |
| [detect_singletons](#pyfixest.detect_singletons.detect_singletons) | Detect singleton fixed effects in a dataset. |

### detect_singletons { #pyfixest.detect_singletons.detect_singletons }

`detect_singletons.detect_singletons(ids)`

Detect singleton fixed effects in a dataset.

Args:
    ids (np.ndarray): A 2D numpy array representing fixed effects, with a
                      shape of (n_samples, n_features).
                      Elements should be non-negative integers representing
                      fixed effect identifiers.

Returns:
    np.ndarray: A boolean array of shape (n_samples,), indicating which
                observations have a singleton fixed effect.

Note:
    The algorithm iterates over columns to identify fixed effects.
    After completing each column traversal, it updates the record of
    non-singleton rows. This approach is preferred as removing an
    observation in column 'i' may lead to the emergence of new singletons
    in subsequent columns (i.e., columns > i).

    Since we are operating on columns, we enforce column-major order for
    the input array. Working on a row-major array leads to considerable
    performance losses.