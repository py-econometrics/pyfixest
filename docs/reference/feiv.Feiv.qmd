# feiv.Feiv { #pyfixest.feiv.Feiv }

`feiv.Feiv(self, Y, X, Z, weights, coefnames_x, coefnames_z, collin_tol, weights_name)`

Non user-facing class to estimate an IV model using a 2SLS estimator.

Inherits from the Feols class. Users should not directly instantiate this class,
but rather use the [feols()](/reference/estimation.feols.qmd) function. Note that
no demeaning is performed in this class: demeaning is performed in the
[FixestMulti](/reference/estimation.fixest_multi.qmd) class (to allow for caching
of demeaned variables for multiple estimation).

## Parameters

| Name           | Type                   | Description                                        | Default    |
|----------------|------------------------|----------------------------------------------------|------------|
| `Y`            | numpy.numpy.ndarray    | Dependent variable, a two-dimensional np.array.    | _required_ |
| `X`            | numpy.numpy.ndarray    | Independent variables, a two-dimensional np.array. | _required_ |
| `Z`            | numpy.numpy.ndarray    | Instruments, a two-dimensional np.array.           | _required_ |
| `weights`      | numpy.numpy.ndarray    | Weights, a one-dimensional np.array.               | _required_ |
| `coefnames_x`  | list                   | Names of the coefficients of X.                    | _required_ |
| `coefnames_z`  | list                   | Names of the coefficients of Z.                    | _required_ |
| `collin_tol`   | float                  | Tolerance for collinearity check.                  | _required_ |
| `weights_name` | typing.Optional\[str\] | Name of the weights variable.                      | _required_ |

## Attributes

| Name                    | Type                | Description                                                   |
|-------------------------|---------------------|---------------------------------------------------------------|
| _Z                      | numpy.numpy.ndarray | Processed instruments after handling multicollinearity.       |
| _coefnames_z            | list                | Names of coefficients for Z after handling multicollinearity. |
| _collin_vars_z          | list                | Variables identified as collinear in Z.                       |
| _collin_index_z         | list                | Indices of collinear variables in Z.                          |
| _is_iv                  | bool                | Indicator if instrumental variables are used.                 |
| _support_crv3_inference | bool                | Indicator for supporting CRV3 inference.                      |
| _support_iid_inference  | bool                | Indicator for supporting IID inference.                       |
| _tZX                    | numpy.numpy.ndarray | Transpose of Z times X.                                       |
| _tXZ                    | numpy.numpy.ndarray | Transpose of X times Z.                                       |
| _tZy                    | numpy.numpy.ndarray | Transpose of Z times Y.                                       |
| _tZZinv                 | numpy.numpy.ndarray | Inverse of transpose of Z times Z.                            |
| _beta_hat               | numpy.numpy.ndarray | Estimated regression coefficients.                            |
| _Y_hat_link             | numpy.numpy.ndarray | Predicted values of the regression model.                     |
| _u_hat                  | numpy.numpy.ndarray | Residuals of the regression model.                            |
| _scores                 | numpy.numpy.ndarray | Scores used in the regression.                                |
| _hessian                | numpy.numpy.ndarray | Hessian matrix used in the regression.                        |
| _bread                  | numpy.numpy.ndarray | Bread matrix used in the regression.                          |

## Raises

| Type       | Description                          |
|------------|--------------------------------------|
| ValueError | If Z is not a two-dimensional array. |