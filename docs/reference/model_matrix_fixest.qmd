# model_matrix_fixest { #pyfixest.model_matrix_fixest }

`model_matrix_fixest`



## Functions

| Name | Description |
| --- | --- |
| [model_matrix_fixest](#pyfixest.model_matrix_fixest.model_matrix_fixest) | Create model matrices for fixed effects estimation. |

### model_matrix_fixest { #pyfixest.model_matrix_fixest.model_matrix_fixest }

`model_matrix_fixest.model_matrix_fixest(fml, data, drop_singletons=False, weights=None, drop_intercept=False, i_ref1=None, i_ref2=None)`

Create model matrices for fixed effects estimation.

This function preprocesses the data and then calls `formulaic.model_matrix()`
to create the model matrices.

#### Parameters

| Name              | Type                    | Description                                                                                                                                                  | Default    |
|-------------------|-------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| `fml`             | str                     | A two-sided formula string using fixest formula syntax.                                                                                                      | _required_ |
| `data`            | pandas.pandas.DataFrame | The input DataFrame containing the data.                                                                                                                     | _required_ |
| `drop_singletons` | bool                    | Whether to drop singleton fixed effects. Default is False.                                                                                                   | `False`    |
| `weights`         | str or None             | Weights as a string if provided, or None if no weights, e.g., "weights".                                                                                     | `None`     |
| `data`            | pandas.pandas.DataFrame | The input DataFrame containing the data.                                                                                                                     | _required_ |
| `drop_intercept`  | bool                    | Whether to drop the intercept from the model matrix. Default is False. If True, the intercept is dropped ex post from the model matrix created by formulaic. | `False`    |
| `i_ref1`          | str or list             | The reference level for the first variable in the i() syntax.                                                                                                | `None`     |
| `i_ref2`          | str or list             | The reference level for the second variable in the i() syntax.                                                                                               | `None`     |

#### Returns

| Type   | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |
|--------||
| tuple  | A tuple of the following elements: - Y : pd.DataFrame     A DataFrame of the dependent variable. - X : pd.DataFrame     A DataFrame of the covariates. If `combine = True`, contains covariates and fixed effects as dummies. - I : Optional[pd.DataFrame]     A DataFrame of the Instruments, None if no IV. - fe : Optional[pd.DataFrame]     A DataFrame of the fixed effects, None if no fixed effects specified. Only applicable if `combine = False`. - na_index : np.array     An array with indices of dropped columns. - fe_na : np.array     An array with indices of dropped columns due to fixed effect singletons or NaNs in the fixed effects. - na_index_str : str     na_index, but as a comma-separated string. Used for caching of demeaned variables. - z_names : Optional[List[str]]     Names of all covariates, minus the endogenous variables, plus the instruments. None if no IV. - weights : Optional[str]     Weights as a string if provided, or None if no weights, e.g., "weights". - has_weights : bool     A boolean indicating whether weights are used. - icovars : Optional[List[str]]     A list of interaction variables provided via `i()`. None if no interaction variables via `i()` provided. |

#### Attributes

| Name         | Type   | Description                                                                                     |
|--------------|--------|-------------------------------------------------------------------------------------------------|
| list or None |        | icovars - A list of interaction variables. None if no interaction variables via `i()` provided. |