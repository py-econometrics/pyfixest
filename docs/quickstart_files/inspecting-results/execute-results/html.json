{
  "hash": "9be63ffe3bd1c26c6eb8e23ea67db83d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Inspecting Regression Results\n---\n\n\n\n\n::: {#f08a2211 .cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nfrom lets_plot import LetsPlot\n\nimport pyfixest as pf\nfrom pyfixest.did.estimation import did2s\nfrom pyfixest.did.event_study import event_study\n\nLetsPlot.setup_html()\n\nplt.style.use(\"seaborn-v0_8\")\n\ndata = pf.get_data()\ndata.head()\n\nfit = pf.feols(fml=\"Y ~ X1 | group_id\", data=data, vcov=\"HC1\")\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"FiiU6H\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.4.1/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"FiiU6H\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"FiiU6H\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"V1Pb8h\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.4.1/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"V1Pb8h\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"V1Pb8h\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n            <div id=\"mvpEdo\"></div>\n            <script type=\"text/javascript\" data-lets-plot-script=\"library\">\n                if(!window.letsPlotCallQueue) {\n                    window.letsPlotCallQueue = [];\n                }; \n                window.letsPlotCall = function(f) {\n                    window.letsPlotCallQueue.push(f);\n                };\n                (function() {\n                    var script = document.createElement(\"script\");\n                    script.type = \"text/javascript\";\n                    script.src = \"https://cdn.jsdelivr.net/gh/JetBrains/lets-plot@v4.4.1/js-package/distr/lets-plot.min.js\";\n                    script.onload = function() {\n                        window.letsPlotCall = function(f) {f();};\n                        window.letsPlotCallQueue.forEach(function(f) {f();});\n                        window.letsPlotCallQueue = [];\n                        \n                    };\n                    script.onerror = function(event) {\n                        window.letsPlotCall = function(f) {};    // noop\n                        window.letsPlotCallQueue = [];\n                        var div = document.createElement(\"div\");\n                        div.style.color = 'darkred';\n                        div.textContent = 'Error loading Lets-Plot JS';\n                        document.getElementById(\"mvpEdo\").appendChild(div);\n                    };\n                    var e = document.getElementById(\"mvpEdo\");\n                    e.appendChild(script);\n                })()\n            </script>\n            \n```\n:::\n:::\n\n\nTo inspect the results of our regression model, we can use a summary function or method:\n\n::: {#a27adc7c .cell execution_count=2}\n``` {.python .cell-code}\nfit.summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: group_id\nInference:  HC1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -1.019 |        0.082 |   -12.352 |      0.000 | -1.181 |  -0.857 |\n---\nRMSE: 2.141 R2: 0.137 R2 Within: 0.126 \n```\n:::\n:::\n\n\nOr display a formatted regression table:\n\n::: {#2f2c8582 .cell execution_count=3}\n``` {.python .cell-code}\npf.etable(fit)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div id=\"ksrvykchnc\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#ksrvykchnc table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#ksrvykchnc thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#ksrvykchnc p { margin: 0; padding: 0; }\n #ksrvykchnc .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: hidden; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #ksrvykchnc .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #ksrvykchnc .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #ksrvykchnc .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #ksrvykchnc .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #ksrvykchnc .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #ksrvykchnc .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #ksrvykchnc .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: bottom; padding-top: 4px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #ksrvykchnc .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #ksrvykchnc .gt_column_spanner_outer:first-child { padding-left: 0; }\n #ksrvykchnc .gt_column_spanner_outer:last-child { padding-right: 0; }\n #ksrvykchnc .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: bottom; padding-top: 4px; padding-bottom: 4px; overflow-x: hidden; display: inline-block; width: 100%; }\n #ksrvykchnc .gt_spanner_row { border-bottom-style: hidden; }\n #ksrvykchnc .gt_group_heading { padding-top: 0px; padding-bottom: 0px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; border-left-style: none; border-left-width: 1px; border-left-color: white; border-right-style: none; border-right-width: 1px; border-right-color: white; vertical-align: middle; text-align: left; }\n #ksrvykchnc .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 0px; font-weight: initial; border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 0.5px; border-bottom-color: black; vertical-align: middle; }\n #ksrvykchnc .gt_from_md> :first-child { margin-top: 0; }\n #ksrvykchnc .gt_from_md> :last-child { margin-bottom: 0; }\n #ksrvykchnc .gt_row { padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: none; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 0px; border-left-color: white; border-right-style: none; border-right-width: 0px; border-right-color: white; vertical-align: middle; overflow-x: hidden; }\n #ksrvykchnc .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: hidden; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #ksrvykchnc .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #ksrvykchnc .gt_row_group_first td { border-top-width: 0.5px; }\n #ksrvykchnc .gt_row_group_first th { border-top-width: 0.5px; }\n #ksrvykchnc .gt_table_body { border-top-style: solid; border-top-width: 0.5px; border-top-color: black; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: black; }\n #ksrvykchnc .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #ksrvykchnc .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #ksrvykchnc .gt_left { text-align: left; }\n #ksrvykchnc .gt_center { text-align: center; }\n #ksrvykchnc .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #ksrvykchnc .gt_font_normal { font-weight: normal; }\n #ksrvykchnc .gt_font_bold { font-weight: bold; }\n #ksrvykchnc .gt_font_italic { font-style: italic; }\n #ksrvykchnc .gt_super { font-size: 65%; }\n #ksrvykchnc .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #ksrvykchnc .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"\"></th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Y\">\n    <span class=\"gt_column_spanner\">Y</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"(1)\">(1)</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">coef</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">X1</th>\n    <td class=\"gt_row gt_center\">-1.019*** <br> (0.082)</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">fe</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">group_id</th>\n    <td class=\"gt_row gt_center\">x</td>\n  </tr>\n  <tr class=\"gt_group_heading_row\">\n    <th class=\"gt_group_heading\" colspan=\"2\">stats</th>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">Observations</th>\n    <td class=\"gt_row gt_center\">998</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">S.E. type</th>\n    <td class=\"gt_row gt_center\">hetero</td>\n  </tr>\n  <tr>\n    <th class=\"gt_row gt_left gt_stub\">R<sup>2</sup></th>\n    <td class=\"gt_row gt_center\">0.137</td>\n  </tr>\n</tbody>\n  <tfoot class=\"gt_sourcenotes\">\n  \n  <tr>\n    <td class=\"gt_sourcenote\" colspan=\"2\"></td>\n  </tr>\n\n</tfoot>\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nAlternatively, the `.summarize` module contains a `summary` function, which can be applied on instances of regression model objects\n\n::: {#28d3d2ec .cell execution_count=4}\n``` {.python .cell-code}\npf.summary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n###\n\nEstimation:  OLS\nDep. var.: Y, Fixed effects: group_id\nInference:  HC1\nObservations:  998\n\n| Coefficient   |   Estimate |   Std. Error |   t value |   Pr(>|t|) |   2.5% |   97.5% |\n|:--------------|-----------:|-------------:|----------:|-----------:|-------:|--------:|\n| X1            |     -1.019 |        0.082 |   -12.352 |      0.000 | -1.181 |  -0.857 |\n---\nRMSE: 2.141 R2: 0.137 R2 Within: 0.126 \n```\n:::\n:::\n\n\nYou can access individual elements of the summary via dedicated methods: `.tidy()` returns a \"tidy\" `pd.DataFrame`,\n`.coef()` returns estimated parameters, and `se()` estimated standard errors. Other methods include `pvalue()`, `confint()`\nand `tstat()`.\n\n::: {#d2f29b8e .cell execution_count=5}\n``` {.python .cell-code}\nfit.coef()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nCoefficient\nX1   -1.019009\nName: Estimate, dtype: float64\n```\n:::\n:::\n\n\n::: {#12066aba .cell execution_count=6}\n``` {.python .cell-code}\nfit.se()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\nCoefficient\nX1    0.082498\nName: Std. Error, dtype: float64\n```\n:::\n:::\n\n\n::: {#084a8942 .cell execution_count=7}\n``` {.python .cell-code}\nfit.tstat()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nCoefficient\nX1   -12.351897\nName: t value, dtype: float64\n```\n:::\n:::\n\n\n::: {#51b2b44e .cell execution_count=8}\n``` {.python .cell-code}\nfit.confint()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-1.180898</td>\n      <td>-0.857119</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#a57d27ec .cell execution_count=9}\n``` {.python .cell-code}\nfit.pvalue()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nCoefficient\nX1    0.0\nName: Pr(>|t|), dtype: float64\n```\n:::\n:::\n\n\nYou can also get all of the above in a tidy data frame:\n\n::: {#bace4932 .cell execution_count=10}\n``` {.python .cell-code}\nfit.tidy()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Estimate</th>\n      <th>Std. Error</th>\n      <th>t value</th>\n      <th>Pr(&gt;|t|)</th>\n      <th>2.5%</th>\n      <th>97.5%</th>\n    </tr>\n    <tr>\n      <th>Coefficient</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>X1</th>\n      <td>-1.019009</td>\n      <td>0.082498</td>\n      <td>-12.351897</td>\n      <td>0.0</td>\n      <td>-1.180898</td>\n      <td>-0.857119</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "inspecting-results_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}
