[project]
name = "pyfixest"
version = "0.30.2"
description = "Fast high dimensional fixed effect estimation following syntax of the fixest R package."
authors = [
    { name = "Alexander Fischer", email = "alexander-fischer1801@t-online.de" },
    { name = "Styfen SchÃ¤r" },
]
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }

[build-system]
requires = ["maturin>=1.8,<2.0"]
build-backend = "maturin"

[tool.maturin]
module-name = "pyfixest.core._core_impl"
features = ["pyo3/extension-module"]
python-source = "."

[tool.pytest.ini_options]
addopts = [
  "-v",
  "--strict-markers",
  "--strict-config",
  "--cov=pyfixest",
  "--cov-report=term-missing",
  "--color=yes",
]

markers = [
  "against_r_core: mark test to be part of the test suite that depends on conda available R modules",
  "against_r_extended: mark test to be part of the test suite that depends on other R modules",
  "extended: mark test to be part of the extended test suite",
  "plots: marks all tests for plotting functionality, tests only triggered when using tag in github issue",
]

filterwarnings = [
  "ignore::FutureWarning:rpy2",
  "ignore::DeprecationWarning:rpy2",
]

[tool.ruff]
line-length = 88
fix = true

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# docs: https://docs.astral.sh/ruff/rules/
select = [
  "B",   # bugbear
  "F",   # Pyflakes
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "I",   # isort
  "D",   # flake8-docstrings
  "UP",  # pyupgrade
  "SIM", # flake8-simplify
  "RUF", # ruff,
  "TRY", # tryceratops
]

ignore = [
  # do not enable if formatting
  # docs: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "B028",   # No explicit `stacklevel` keyword argument found
  "B904",   # Better exception handling
  "W191",   # tab indentation
  "E111",   # indentation
  "E114",   # indentation
  "E117",   # over indented
  "D206",   # indent with spaces
  "D300",   # triple single quotes
  "E501",   # line length regulated by formatter
  "D105",   # missing docstring in magic method
  "D100",   # missing docstring in public module
  "D104",   # missing docstring in public package
  "SIM110", # Use all instead of `for` loop
  "TRY003", # Avoid specifying long messages outside the exception class
  "D205",   # 1 blank line required between summary line and description
  "W505",   # Doc line too long
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D100", "D103"]
 @@ -224,21 +72,5 @@ docstring-code-line-length = 88
[tool.mypy]

[[tool.mypy.overrides]]
module = [
  "pandas.*",
  "numpy.*",
  "scipy.*",
  "numba.*",
  "lets_plot.*",
  "formulaic.*",
  "wildboottest.*",
  "tabulate.*",
  "joblib.*",
  "narwhals.*",
  "tqdm.*",
]

ignore_missing_imports = true
