name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: "Tests Core"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.12"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.29.0
          cache: true

      - name: Set numba parallel flags
        run: echo "NUMBA_NUM_THREADS=1" >> $GITHUB_ENV

      - name: Setup r2u
        uses: eddelbuettel/github-actions/r2u-setup@master


      # Set R library path to pixi's environment
      - name: Set R library path for pixi environment
        run: |
          # Assuming pixi's R library path is this; adapt if needed
          R_LIB_PATH="${{ github.workspace }}/.pixi/envs/dev/lib/R/library"
          echo "R_LIBS_USER=$R_LIB_PATH" >> $GITHUB_ENV

      # Install R packages into pixi's R library path
      - name: Install R packages
        run: |
          R_LIB_PATH="${{ github.workspace }}/.pixi/envs/dev/lib/R/library"
          mkdir -p $R_LIB_PATH
          Rscript -e ".libPaths('$R_LIB_PATH'); install.packages(c('fixest', 'broom','clubSandwich', 'did2s', 'wildrwolf', 'reticulate', 'ivDiag'),  lib='/home/runner/work/pyfixest/pyfixest/.pixi/envs/dev/lib/R/library', repos='https://cran.rstudio.com')"
          Rscript -e ".libPaths('$R_LIB_PATH'); install.packages('ritest', lib='/home/runner/work/pyfixest/pyfixest/.pixi/envs/dev/lib/R/library', repos = c('https://grantmcdermott.r-universe.dev', 'https://cloud.r-project.org'))"


      # Verify where R packages are installed
      - name: Verify R package installation path
        run: |
          Rscript -e "print(.libPaths())"
          Rscript -e "installed.packages()[, c('Package', 'LibPath')]"

    # Print R library paths that rpy2 is using
      - name: Debug rpy2 R library paths
        run: |
          pixi r debug-env

      #- name: install other r dependencies
      #    run: pixi r install-r

      - name: Ensure rpy2 uses all R library paths
        run: |
          python -c "
          import rpy2.robjects as robjects;
          new_lib_paths = robjects.StrVector(['/home/runner/work/pyfixest/pyfixest/.pixi/envs/dev/lib/R/library', '/usr/local/lib/R/site-library', '/usr/lib/R/site-library', '/usr/lib/R/library']);
          robjects.r('.libPaths(new_lib_paths)');
          print('Updated R library paths:', robjects.r('.libPaths()'));
          from rpy2.robjects.packages import importr;
          did2s = importr('did2s')
          "

      # Run tests
      - name: Run tests
        run: |
          pixi run tests-regular
