name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: "Tests Core"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9", "3.12"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1

      - name: Set numba parallel flags
        run: echo "NUMBA_NUM_THREADS=1" >> $GITHUB_ENV

      - name: Setup r2u
        uses: eddelbuettel/github-actions/r2u-setup@master

      # Set up R and R environment
      - name: Install R and setup environment
        run: |
          mkdir -p ~/.R/library
          echo 'R_LIBS_USER="~/.R/library"' >> ~/.Renviron
          Rscript -e 'install.packages(c("fixest", "broom", "did2s", "clubSandwich", "wildrwolf", "ivDiag"), repos="http://cran.us.r-project.org")'

      # Check installed R packages
      - name: Verify installed R packages
        run: |
          Rscript -e 'installed.packages()[, c("Package", "Version")]'

      # Check R environment details (debugging step)
      - name: Debug R environment
        run: |
          echo "R_HOME: $(R RHOME)"
          echo "R_LIBS_USER: $R_LIBS_USER"
          Rscript -e 'cat(.libPaths(), "\n")'

      # Set environment variables for R and rpy2
      - name: Export R and rpy2 environment
        run: |
          echo "R_LIBS_USER=~/.R/library" >> $GITHUB_ENV
          echo "R_HOME=$(R RHOME)" >> $GITHUB_ENV
          echo "R_LIBS_SITE=$(Rscript -e '.libPaths()[1]')" >> $GITHUB_ENV

      # Force print rpy2 environment paths (debugging step)
      - name: Check rpy2 configuration
        run: |
          python -c "import rpy2.robjects as ro; print(ro.r('R.home()'))"
          python -c "import os; print('R_HOME:', os.getenv('R_HOME')); print('R_LIBS_USER:', os.getenv('R_LIBS_USER'))"

      # Run tests
      - name: Run tests
        run: |
          pixi run tests-regular
