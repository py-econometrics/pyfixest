[workspace]
authors = [
    "Alexander Fischer <alexander-fischer1801@t-online.de>", 
    "Styfen SchÃ¤r"
    ]
description = "Fast high dimensional fixed effect estimation following syntax of the fixest R package."
channels = ["conda-forge"]
name = "pyfixest"
platforms = ["linux-64", "win-64", "osx-arm64", "osx-64"]
version = "0.30.2"

[tasks]


[dependencies]
scipy=">=1.6,<1.16"
formulaic=">=1.1.0"
pandas=">=1.1.0"
numba=">=0.58.0"
seaborn=">=0.13.2"
tabulate=">=0.9.0"
tqdm=">=4.0.0"
great_tables=">=0.10.0"
numpy=">=1.25.2"
narwhals=">=1.13.3"
joblib=">=1.4.2,<2"

[feature.dev]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[feature.docs]
platforms = ["linux-64", "osx-arm64", "osx-64"]


[feature.dev.dependencies]
pytest = ">=7.2.0"
pytest-cov = ">=4.1.0"
pytest-xdist = ">=3.5.0"
pytest-benchmark = ">=5.1.0,<6"
pyhdfe = ">=0.2.0"
ipykernel = ">=6.29.5,<7"
duckdb = ">=1.1.3"
polars = ">=1.0.0"
pyarrow = ">=14.0"
rpy2 = "==3.5.11"
pixi-pycharm = ">=0.0.8,<0.0.9"
r-base = "*"
r-fixest = ">=0.13.2,<0.14"
r-sandwich = ">=3.0_2,<4"
r-broom = ">=1.0.5,<2"
r-car = ">=3.1_2,<4"
r-quantreg = ">=5.0"
doubleml = ">=0.10.1,<0.11"
pytest-sugar = ">=1.1.1,<2"

[feature.dev.pypi-dependencies]
wildboottest = ">=0.3.2, <0.4"
jax = ">=0.4.38, <0.8"
jaxlib = ">=0.4.38, <0.8"

[feature.dev.tasks]
"tests" = "pytest -rs -n 9 --cov-report=term tests"
"tests-against-r-core" = 'pytest -rs tests -n 9 -m "against_r_core" --cov=pyfixest --cov-report=xml'
"tests-against-r-extended"  = 'pytest -rs tests -n 9 -m "against_r_extended" --cov=pyfixest --cov-report=xml'
"tests-regular" = 'pytest tests -n 9 -m "not (extended or against_r_core or against_r_extended or plots)" --cov=pyfixest --cov-report=xml'
"tests-extended" = 'pytest tests -n 9 -m "extended" --cov=pyfixest --cov-report=xml'
"tests-fixest" = "pytest -rs tests/test_vs_fixest.py -n 9 --cov=pyfixest --cov-report=xml" 
"debug" = "python pyfixest/debug.py" 
"update-test-data" = "Rscript tests/r_test_comparisons.R" 
"install-r-extended" = "Rscript r_test_requirements.R" 
"render-notebooks" = "python scripts/run_notebooks.py"

[feature.docs.dependencies]
jupyterlab = ">=4.0.12"
jupytext = "==1.16.1"
watermark = "==2.4.3"
pylatex = ">=1.4.2,<2"
pyarrow = ">=14.0"
quartodoc =">=0.9.1,<0.10"
rpy2 = "==3.5.11"
r-base = "*"
r-fixest = ">=0.13.2,<0.14"
r-broom = ">=1.0.5,<2"
quarto = ">=1.8.25,<2"

[feature.docs.pypi-dependencies]
wildboottest = ">=0.3.2"
causaldata = ">=0.1.4,<0.2"
marginaleffects= ">=0.0.10"
lets-plot =">=4.0.0"

[feature.docs.tasks]
docs-build = "quartodoc build --verbose --config docs/_quarto.yml"
docs-render = "quarto render docs"
docs-preview = "quarto preview docs"

[feature.jax.dependencies]

[feature.jax.pypi-dependencies]
jax = ">=0.4.15"
jaxlib= ">=0.4.15"

[feature.plots.pypi-dependencies]
lets-plot = ">=4.0.0"

[feature.lint.dependencies]
pre-commit = "==3.6.0"

[feature.build.dependencies]
pip = "*"
maturin = ">=1.8.0"

[tool.pixi.feature.lint.tasks]
pre-commit = "pre-commit run --all-files"

[tool.pixi.feature.build.tasks]
build-pip = 'python -m build .'
maturin-develop = "maturin develop --release --strip"

[environments]
dev = ["dev"]
docs = ["docs"]
lint = ["lint"]
plots = ["plots"]
jax = ["jax"]
build = ["build"]

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }
build = { features = ["build"], solve-group = "default" }
lint = { features = ["lint"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
jax = { features = ["jax"], solve-group = "default" }
plots = { features = ["plots"], solve-group = "default" }

[tool.pytest.ini_options]
addopts = [
  "-v",
  "--strict-markers",
  "--strict-config",
  "--cov=pyfixest",
  "--cov-report=term-missing",
  "--color=yes",
]

[tool.ruff]
line-length = 88
fix = true

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# docs: https://docs.astral.sh/ruff/rules/
select = [
  "B",   # bugbear
  "F",   # Pyflakes
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "I",   # isort
  "D",   # flake8-docstrings
  "UP",  # pyupgrade
  "SIM", # flake8-simplify
  "RUF", # ruff,
  "TRY", # tryceratops
]

ignore = [
  # do not enable if formatting
  # docs: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "B028",   # No explicit `stacklevel` keyword argument found
  "B904",   # Better exception handling
  "W191",   # tab indentation
  "E111",   # indentation
  "E114",   # indentation
  "E117",   # over indented
  "D206",   # indent with spaces
  "D300",   # triple single quotes
  "E501",   # line length regulated by formatter
  "D105",   # missing docstring in magic method
  "D100",   # missing docstring in public module
  "D104",   # missing docstring in public package
  "SIM110", # Use all instead of `for` loop
  "TRY003", # Avoid specifying long messages outside the exception class
  "D205",   # 1 blank line required between summary line and description
  "W505",   # Doc line too long
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D100", "D103"]
"pyfixest/multcomp.py" = ["D103"]
"pyfixest/summarize.py" = ["D103"]
"pyfixest/visualize.py" = ["D103"]
"scripts/*.py" = ["D103"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 88

[tool.mypy]

[[tool.mypy.overrides]]
module = [
  "pandas.*",
  "numpy.*",
  "scipy.*",
  "numba.*",
  "lets_plot.*",
  "formulaic.*",
  "wildboottest.*",
  "tabulate.*",
  "joblib.*",
  "narwhals.*",
  "tqdm.*",
]
ignore_missing_imports = true

[tool.maturin]
module-name = "pyfixest.core._core_impl"
features = ["pyo3/extension-module"]